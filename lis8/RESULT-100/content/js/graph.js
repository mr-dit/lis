/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 59.0, "minX": 0.0, "maxY": 11511.0, "series": [{"data": [[0.0, 471.0], [0.1, 471.0], [0.2, 471.0], [0.3, 471.0], [0.4, 471.0], [0.5, 471.0], [0.6, 471.0], [0.7, 471.0], [0.8, 471.0], [0.9, 471.0], [1.0, 992.0], [1.1, 992.0], [1.2, 992.0], [1.3, 992.0], [1.4, 992.0], [1.5, 992.0], [1.6, 992.0], [1.7, 992.0], [1.8, 992.0], [1.9, 992.0], [2.0, 1048.0], [2.1, 1048.0], [2.2, 1048.0], [2.3, 1048.0], [2.4, 1048.0], [2.5, 1048.0], [2.6, 1048.0], [2.7, 1048.0], [2.8, 1048.0], [2.9, 1048.0], [3.0, 1089.0], [3.1, 1089.0], [3.2, 1089.0], [3.3, 1089.0], [3.4, 1089.0], [3.5, 1089.0], [3.6, 1089.0], [3.7, 1089.0], [3.8, 1089.0], [3.9, 1089.0], [4.0, 1505.0], [4.1, 1505.0], [4.2, 1505.0], [4.3, 1505.0], [4.4, 1505.0], [4.5, 1505.0], [4.6, 1505.0], [4.7, 1505.0], [4.8, 1505.0], [4.9, 1505.0], [5.0, 1505.0], [5.1, 1505.0], [5.2, 1505.0], [5.3, 1505.0], [5.4, 1505.0], [5.5, 1505.0], [5.6, 1505.0], [5.7, 1505.0], [5.8, 1505.0], [5.9, 1505.0], [6.0, 1831.0], [6.1, 1831.0], [6.2, 1831.0], [6.3, 1831.0], [6.4, 1831.0], [6.5, 1831.0], [6.6, 1831.0], [6.7, 1831.0], [6.8, 1831.0], [6.9, 1831.0], [7.0, 1928.0], [7.1, 1928.0], [7.2, 1928.0], [7.3, 1928.0], [7.4, 1928.0], [7.5, 1928.0], [7.6, 1928.0], [7.7, 1928.0], [7.8, 1928.0], [7.9, 1928.0], [8.0, 2008.0], [8.1, 2008.0], [8.2, 2008.0], [8.3, 2008.0], [8.4, 2008.0], [8.5, 2008.0], [8.6, 2008.0], [8.7, 2008.0], [8.8, 2008.0], [8.9, 2008.0], [9.0, 2023.0], [9.1, 2023.0], [9.2, 2023.0], [9.3, 2023.0], [9.4, 2023.0], [9.5, 2023.0], [9.6, 2023.0], [9.7, 2023.0], [9.8, 2023.0], [9.9, 2023.0], [10.0, 2055.0], [10.1, 2055.0], [10.2, 2055.0], [10.3, 2055.0], [10.4, 2055.0], [10.5, 2055.0], [10.6, 2055.0], [10.7, 2055.0], [10.8, 2055.0], [10.9, 2055.0], [11.0, 2655.0], [11.1, 2655.0], [11.2, 2655.0], [11.3, 2655.0], [11.4, 2655.0], [11.5, 2655.0], [11.6, 2655.0], [11.7, 2655.0], [11.8, 2655.0], [11.9, 2655.0], [12.0, 2694.0], [12.1, 2694.0], [12.2, 2694.0], [12.3, 2694.0], [12.4, 2694.0], [12.5, 2694.0], [12.6, 2694.0], [12.7, 2694.0], [12.8, 2694.0], [12.9, 2694.0], [13.0, 2765.0], [13.1, 2765.0], [13.2, 2765.0], [13.3, 2765.0], [13.4, 2765.0], [13.5, 2765.0], [13.6, 2765.0], [13.7, 2765.0], [13.8, 2765.0], [13.9, 2765.0], [14.0, 2873.0], [14.1, 2873.0], [14.2, 2873.0], [14.3, 2873.0], [14.4, 2873.0], [14.5, 2873.0], [14.6, 2873.0], [14.7, 2873.0], [14.8, 2873.0], [14.9, 2873.0], [15.0, 3034.0], [15.1, 3034.0], [15.2, 3034.0], [15.3, 3034.0], [15.4, 3034.0], [15.5, 3034.0], [15.6, 3034.0], [15.7, 3034.0], [15.8, 3034.0], [15.9, 3034.0], [16.0, 3063.0], [16.1, 3063.0], [16.2, 3063.0], [16.3, 3063.0], [16.4, 3063.0], [16.5, 3063.0], [16.6, 3063.0], [16.7, 3063.0], [16.8, 3063.0], [16.9, 3063.0], [17.0, 3097.0], [17.1, 3097.0], [17.2, 3097.0], [17.3, 3097.0], [17.4, 3097.0], [17.5, 3097.0], [17.6, 3097.0], [17.7, 3097.0], [17.8, 3097.0], [17.9, 3097.0], [18.0, 3183.0], [18.1, 3183.0], [18.2, 3183.0], [18.3, 3183.0], [18.4, 3183.0], [18.5, 3183.0], [18.6, 3183.0], [18.7, 3183.0], [18.8, 3183.0], [18.9, 3183.0], [19.0, 3225.0], [19.1, 3225.0], [19.2, 3225.0], [19.3, 3225.0], [19.4, 3225.0], [19.5, 3225.0], [19.6, 3225.0], [19.7, 3225.0], [19.8, 3225.0], [19.9, 3225.0], [20.0, 3334.0], [20.1, 3334.0], [20.2, 3334.0], [20.3, 3334.0], [20.4, 3334.0], [20.5, 3334.0], [20.6, 3334.0], [20.7, 3334.0], [20.8, 3334.0], [20.9, 3334.0], [21.0, 3603.0], [21.1, 3603.0], [21.2, 3603.0], [21.3, 3603.0], [21.4, 3603.0], [21.5, 3603.0], [21.6, 3603.0], [21.7, 3603.0], [21.8, 3603.0], [21.9, 3603.0], [22.0, 3739.0], [22.1, 3739.0], [22.2, 3739.0], [22.3, 3739.0], [22.4, 3739.0], [22.5, 3739.0], [22.6, 3739.0], [22.7, 3739.0], [22.8, 3739.0], [22.9, 3739.0], [23.0, 3766.0], [23.1, 3766.0], [23.2, 3766.0], [23.3, 3766.0], [23.4, 3766.0], [23.5, 3766.0], [23.6, 3766.0], [23.7, 3766.0], [23.8, 3766.0], [23.9, 3766.0], [24.0, 3767.0], [24.1, 3767.0], [24.2, 3767.0], [24.3, 3767.0], [24.4, 3767.0], [24.5, 3767.0], [24.6, 3767.0], [24.7, 3767.0], [24.8, 3767.0], [24.9, 3767.0], [25.0, 3770.0], [25.1, 3770.0], [25.2, 3770.0], [25.3, 3770.0], [25.4, 3770.0], [25.5, 3770.0], [25.6, 3770.0], [25.7, 3770.0], [25.8, 3770.0], [25.9, 3770.0], [26.0, 3823.0], [26.1, 3823.0], [26.2, 3823.0], [26.3, 3823.0], [26.4, 3823.0], [26.5, 3823.0], [26.6, 3823.0], [26.7, 3823.0], [26.8, 3823.0], [26.9, 3823.0], [27.0, 3834.0], [27.1, 3834.0], [27.2, 3834.0], [27.3, 3834.0], [27.4, 3834.0], [27.5, 3834.0], [27.6, 3834.0], [27.7, 3834.0], [27.8, 3834.0], [27.9, 3834.0], [28.0, 4061.0], [28.1, 4061.0], [28.2, 4061.0], [28.3, 4061.0], [28.4, 4061.0], [28.5, 4061.0], [28.6, 4061.0], [28.7, 4061.0], [28.8, 4061.0], [28.9, 4061.0], [29.0, 4096.0], [29.1, 4096.0], [29.2, 4096.0], [29.3, 4096.0], [29.4, 4096.0], [29.5, 4096.0], [29.6, 4096.0], [29.7, 4096.0], [29.8, 4096.0], [29.9, 4096.0], [30.0, 4161.0], [30.1, 4161.0], [30.2, 4161.0], [30.3, 4161.0], [30.4, 4161.0], [30.5, 4161.0], [30.6, 4161.0], [30.7, 4161.0], [30.8, 4161.0], [30.9, 4161.0], [31.0, 4260.0], [31.1, 4260.0], [31.2, 4260.0], [31.3, 4260.0], [31.4, 4260.0], [31.5, 4260.0], [31.6, 4260.0], [31.7, 4260.0], [31.8, 4260.0], [31.9, 4260.0], [32.0, 4473.0], [32.1, 4473.0], [32.2, 4473.0], [32.3, 4473.0], [32.4, 4473.0], [32.5, 4473.0], [32.6, 4473.0], [32.7, 4473.0], [32.8, 4473.0], [32.9, 4473.0], [33.0, 4560.0], [33.1, 4560.0], [33.2, 4560.0], [33.3, 4560.0], [33.4, 4560.0], [33.5, 4560.0], [33.6, 4560.0], [33.7, 4560.0], [33.8, 4560.0], [33.9, 4560.0], [34.0, 4571.0], [34.1, 4571.0], [34.2, 4571.0], [34.3, 4571.0], [34.4, 4571.0], [34.5, 4571.0], [34.6, 4571.0], [34.7, 4571.0], [34.8, 4571.0], [34.9, 4571.0], [35.0, 4577.0], [35.1, 4577.0], [35.2, 4577.0], [35.3, 4577.0], [35.4, 4577.0], [35.5, 4577.0], [35.6, 4577.0], [35.7, 4577.0], [35.8, 4577.0], [35.9, 4577.0], [36.0, 4588.0], [36.1, 4588.0], [36.2, 4588.0], [36.3, 4588.0], [36.4, 4588.0], [36.5, 4588.0], [36.6, 4588.0], [36.7, 4588.0], [36.8, 4588.0], [36.9, 4588.0], [37.0, 4637.0], [37.1, 4637.0], [37.2, 4637.0], [37.3, 4637.0], [37.4, 4637.0], [37.5, 4637.0], [37.6, 4637.0], [37.7, 4637.0], [37.8, 4637.0], [37.9, 4637.0], [38.0, 4822.0], [38.1, 4822.0], [38.2, 4822.0], [38.3, 4822.0], [38.4, 4822.0], [38.5, 4822.0], [38.6, 4822.0], [38.7, 4822.0], [38.8, 4822.0], [38.9, 4822.0], [39.0, 4853.0], [39.1, 4853.0], [39.2, 4853.0], [39.3, 4853.0], [39.4, 4853.0], [39.5, 4853.0], [39.6, 4853.0], [39.7, 4853.0], [39.8, 4853.0], [39.9, 4853.0], [40.0, 4890.0], [40.1, 4890.0], [40.2, 4890.0], [40.3, 4890.0], [40.4, 4890.0], [40.5, 4890.0], [40.6, 4890.0], [40.7, 4890.0], [40.8, 4890.0], [40.9, 4890.0], [41.0, 4927.0], [41.1, 4927.0], [41.2, 4927.0], [41.3, 4927.0], [41.4, 4927.0], [41.5, 4927.0], [41.6, 4927.0], [41.7, 4927.0], [41.8, 4927.0], [41.9, 4927.0], [42.0, 5110.0], [42.1, 5110.0], [42.2, 5110.0], [42.3, 5110.0], [42.4, 5110.0], [42.5, 5110.0], [42.6, 5110.0], [42.7, 5110.0], [42.8, 5110.0], [42.9, 5110.0], [43.0, 5212.0], [43.1, 5212.0], [43.2, 5212.0], [43.3, 5212.0], [43.4, 5212.0], [43.5, 5212.0], [43.6, 5212.0], [43.7, 5212.0], [43.8, 5212.0], [43.9, 5212.0], [44.0, 5309.0], [44.1, 5309.0], [44.2, 5309.0], [44.3, 5309.0], [44.4, 5309.0], [44.5, 5309.0], [44.6, 5309.0], [44.7, 5309.0], [44.8, 5309.0], [44.9, 5309.0], [45.0, 5341.0], [45.1, 5341.0], [45.2, 5341.0], [45.3, 5341.0], [45.4, 5341.0], [45.5, 5341.0], [45.6, 5341.0], [45.7, 5341.0], [45.8, 5341.0], [45.9, 5341.0], [46.0, 5371.0], [46.1, 5371.0], [46.2, 5371.0], [46.3, 5371.0], [46.4, 5371.0], [46.5, 5371.0], [46.6, 5371.0], [46.7, 5371.0], [46.8, 5371.0], [46.9, 5371.0], [47.0, 5402.0], [47.1, 5402.0], [47.2, 5402.0], [47.3, 5402.0], [47.4, 5402.0], [47.5, 5402.0], [47.6, 5402.0], [47.7, 5402.0], [47.8, 5402.0], [47.9, 5402.0], [48.0, 5410.0], [48.1, 5410.0], [48.2, 5410.0], [48.3, 5410.0], [48.4, 5410.0], [48.5, 5410.0], [48.6, 5410.0], [48.7, 5410.0], [48.8, 5410.0], [48.9, 5410.0], [49.0, 5480.0], [49.1, 5480.0], [49.2, 5480.0], [49.3, 5480.0], [49.4, 5480.0], [49.5, 5480.0], [49.6, 5480.0], [49.7, 5480.0], [49.8, 5480.0], [49.9, 5480.0], [50.0, 5568.0], [50.1, 5568.0], [50.2, 5568.0], [50.3, 5568.0], [50.4, 5568.0], [50.5, 5568.0], [50.6, 5568.0], [50.7, 5568.0], [50.8, 5568.0], [50.9, 5568.0], [51.0, 5739.0], [51.1, 5739.0], [51.2, 5739.0], [51.3, 5739.0], [51.4, 5739.0], [51.5, 5739.0], [51.6, 5739.0], [51.7, 5739.0], [51.8, 5739.0], [51.9, 5739.0], [52.0, 5923.0], [52.1, 5923.0], [52.2, 5923.0], [52.3, 5923.0], [52.4, 5923.0], [52.5, 5923.0], [52.6, 5923.0], [52.7, 5923.0], [52.8, 5923.0], [52.9, 5923.0], [53.0, 5942.0], [53.1, 5942.0], [53.2, 5942.0], [53.3, 5942.0], [53.4, 5942.0], [53.5, 5942.0], [53.6, 5942.0], [53.7, 5942.0], [53.8, 5942.0], [53.9, 5942.0], [54.0, 5964.0], [54.1, 5964.0], [54.2, 5964.0], [54.3, 5964.0], [54.4, 5964.0], [54.5, 5964.0], [54.6, 5964.0], [54.7, 5964.0], [54.8, 5964.0], [54.9, 5964.0], [55.0, 5970.0], [55.1, 5970.0], [55.2, 5970.0], [55.3, 5970.0], [55.4, 5970.0], [55.5, 5970.0], [55.6, 5970.0], [55.7, 5970.0], [55.8, 5970.0], [55.9, 5970.0], [56.0, 6234.0], [56.1, 6234.0], [56.2, 6234.0], [56.3, 6234.0], [56.4, 6234.0], [56.5, 6234.0], [56.6, 6234.0], [56.7, 6234.0], [56.8, 6234.0], [56.9, 6234.0], [57.0, 6303.0], [57.1, 6303.0], [57.2, 6303.0], [57.3, 6303.0], [57.4, 6303.0], [57.5, 6303.0], [57.6, 6303.0], [57.7, 6303.0], [57.8, 6303.0], [57.9, 6303.0], [58.0, 6327.0], [58.1, 6327.0], [58.2, 6327.0], [58.3, 6327.0], [58.4, 6327.0], [58.5, 6327.0], [58.6, 6327.0], [58.7, 6327.0], [58.8, 6327.0], [58.9, 6327.0], [59.0, 6443.0], [59.1, 6443.0], [59.2, 6443.0], [59.3, 6443.0], [59.4, 6443.0], [59.5, 6443.0], [59.6, 6443.0], [59.7, 6443.0], [59.8, 6443.0], [59.9, 6443.0], [60.0, 6465.0], [60.1, 6465.0], [60.2, 6465.0], [60.3, 6465.0], [60.4, 6465.0], [60.5, 6465.0], [60.6, 6465.0], [60.7, 6465.0], [60.8, 6465.0], [60.9, 6465.0], [61.0, 6585.0], [61.1, 6585.0], [61.2, 6585.0], [61.3, 6585.0], [61.4, 6585.0], [61.5, 6585.0], [61.6, 6585.0], [61.7, 6585.0], [61.8, 6585.0], [61.9, 6585.0], [62.0, 6657.0], [62.1, 6657.0], [62.2, 6657.0], [62.3, 6657.0], [62.4, 6657.0], [62.5, 6657.0], [62.6, 6657.0], [62.7, 6657.0], [62.8, 6657.0], [62.9, 6657.0], [63.0, 6668.0], [63.1, 6668.0], [63.2, 6668.0], [63.3, 6668.0], [63.4, 6668.0], [63.5, 6668.0], [63.6, 6668.0], [63.7, 6668.0], [63.8, 6668.0], [63.9, 6668.0], [64.0, 6694.0], [64.1, 6694.0], [64.2, 6694.0], [64.3, 6694.0], [64.4, 6694.0], [64.5, 6694.0], [64.6, 6694.0], [64.7, 6694.0], [64.8, 6694.0], [64.9, 6694.0], [65.0, 6773.0], [65.1, 6773.0], [65.2, 6773.0], [65.3, 6773.0], [65.4, 6773.0], [65.5, 6773.0], [65.6, 6773.0], [65.7, 6773.0], [65.8, 6773.0], [65.9, 6773.0], [66.0, 6843.0], [66.1, 6843.0], [66.2, 6843.0], [66.3, 6843.0], [66.4, 6843.0], [66.5, 6843.0], [66.6, 6843.0], [66.7, 6843.0], [66.8, 6843.0], [66.9, 6843.0], [67.0, 6954.0], [67.1, 6954.0], [67.2, 6954.0], [67.3, 6954.0], [67.4, 6954.0], [67.5, 6954.0], [67.6, 6954.0], [67.7, 6954.0], [67.8, 6954.0], [67.9, 6954.0], [68.0, 6965.0], [68.1, 6965.0], [68.2, 6965.0], [68.3, 6965.0], [68.4, 6965.0], [68.5, 6965.0], [68.6, 6965.0], [68.7, 6965.0], [68.8, 6965.0], [68.9, 6965.0], [69.0, 7044.0], [69.1, 7044.0], [69.2, 7044.0], [69.3, 7044.0], [69.4, 7044.0], [69.5, 7044.0], [69.6, 7044.0], [69.7, 7044.0], [69.8, 7044.0], [69.9, 7044.0], [70.0, 7078.0], [70.1, 7078.0], [70.2, 7078.0], [70.3, 7078.0], [70.4, 7078.0], [70.5, 7078.0], [70.6, 7078.0], [70.7, 7078.0], [70.8, 7078.0], [70.9, 7078.0], [71.0, 7112.0], [71.1, 7112.0], [71.2, 7112.0], [71.3, 7112.0], [71.4, 7112.0], [71.5, 7112.0], [71.6, 7112.0], [71.7, 7112.0], [71.8, 7112.0], [71.9, 7112.0], [72.0, 7194.0], [72.1, 7194.0], [72.2, 7194.0], [72.3, 7194.0], [72.4, 7194.0], [72.5, 7194.0], [72.6, 7194.0], [72.7, 7194.0], [72.8, 7194.0], [72.9, 7194.0], [73.0, 7233.0], [73.1, 7233.0], [73.2, 7233.0], [73.3, 7233.0], [73.4, 7233.0], [73.5, 7233.0], [73.6, 7233.0], [73.7, 7233.0], [73.8, 7233.0], [73.9, 7233.0], [74.0, 7299.0], [74.1, 7299.0], [74.2, 7299.0], [74.3, 7299.0], [74.4, 7299.0], [74.5, 7299.0], [74.6, 7299.0], [74.7, 7299.0], [74.8, 7299.0], [74.9, 7299.0], [75.0, 7318.0], [75.1, 7318.0], [75.2, 7318.0], [75.3, 7318.0], [75.4, 7318.0], [75.5, 7318.0], [75.6, 7318.0], [75.7, 7318.0], [75.8, 7318.0], [75.9, 7318.0], [76.0, 7340.0], [76.1, 7340.0], [76.2, 7340.0], [76.3, 7340.0], [76.4, 7340.0], [76.5, 7340.0], [76.6, 7340.0], [76.7, 7340.0], [76.8, 7340.0], [76.9, 7340.0], [77.0, 7420.0], [77.1, 7420.0], [77.2, 7420.0], [77.3, 7420.0], [77.4, 7420.0], [77.5, 7420.0], [77.6, 7420.0], [77.7, 7420.0], [77.8, 7420.0], [77.9, 7420.0], [78.0, 7473.0], [78.1, 7473.0], [78.2, 7473.0], [78.3, 7473.0], [78.4, 7473.0], [78.5, 7473.0], [78.6, 7473.0], [78.7, 7473.0], [78.8, 7473.0], [78.9, 7473.0], [79.0, 7478.0], [79.1, 7478.0], [79.2, 7478.0], [79.3, 7478.0], [79.4, 7478.0], [79.5, 7478.0], [79.6, 7478.0], [79.7, 7478.0], [79.8, 7478.0], [79.9, 7478.0], [80.0, 7482.0], [80.1, 7482.0], [80.2, 7482.0], [80.3, 7482.0], [80.4, 7482.0], [80.5, 7482.0], [80.6, 7482.0], [80.7, 7482.0], [80.8, 7482.0], [80.9, 7482.0], [81.0, 7497.0], [81.1, 7497.0], [81.2, 7497.0], [81.3, 7497.0], [81.4, 7497.0], [81.5, 7497.0], [81.6, 7497.0], [81.7, 7497.0], [81.8, 7497.0], [81.9, 7497.0], [82.0, 7500.0], [82.1, 7500.0], [82.2, 7500.0], [82.3, 7500.0], [82.4, 7500.0], [82.5, 7500.0], [82.6, 7500.0], [82.7, 7500.0], [82.8, 7500.0], [82.9, 7500.0], [83.0, 7525.0], [83.1, 7525.0], [83.2, 7525.0], [83.3, 7525.0], [83.4, 7525.0], [83.5, 7525.0], [83.6, 7525.0], [83.7, 7525.0], [83.8, 7525.0], [83.9, 7525.0], [84.0, 7563.0], [84.1, 7563.0], [84.2, 7563.0], [84.3, 7563.0], [84.4, 7563.0], [84.5, 7563.0], [84.6, 7563.0], [84.7, 7563.0], [84.8, 7563.0], [84.9, 7563.0], [85.0, 7615.0], [85.1, 7615.0], [85.2, 7615.0], [85.3, 7615.0], [85.4, 7615.0], [85.5, 7615.0], [85.6, 7615.0], [85.7, 7615.0], [85.8, 7615.0], [85.9, 7615.0], [86.0, 7631.0], [86.1, 7631.0], [86.2, 7631.0], [86.3, 7631.0], [86.4, 7631.0], [86.5, 7631.0], [86.6, 7631.0], [86.7, 7631.0], [86.8, 7631.0], [86.9, 7631.0], [87.0, 7827.0], [87.1, 7827.0], [87.2, 7827.0], [87.3, 7827.0], [87.4, 7827.0], [87.5, 7827.0], [87.6, 7827.0], [87.7, 7827.0], [87.8, 7827.0], [87.9, 7827.0], [88.0, 7889.0], [88.1, 7889.0], [88.2, 7889.0], [88.3, 7889.0], [88.4, 7889.0], [88.5, 7889.0], [88.6, 7889.0], [88.7, 7889.0], [88.8, 7889.0], [88.9, 7889.0], [89.0, 7918.0], [89.1, 7918.0], [89.2, 7918.0], [89.3, 7918.0], [89.4, 7918.0], [89.5, 7918.0], [89.6, 7918.0], [89.7, 7918.0], [89.8, 7918.0], [89.9, 7918.0], [90.0, 7926.0], [90.1, 7926.0], [90.2, 7926.0], [90.3, 7926.0], [90.4, 7926.0], [90.5, 7926.0], [90.6, 7926.0], [90.7, 7926.0], [90.8, 7926.0], [90.9, 7926.0], [91.0, 7949.0], [91.1, 7949.0], [91.2, 7949.0], [91.3, 7949.0], [91.4, 7949.0], [91.5, 7949.0], [91.6, 7949.0], [91.7, 7949.0], [91.8, 7949.0], [91.9, 7949.0], [92.0, 7965.0], [92.1, 7965.0], [92.2, 7965.0], [92.3, 7965.0], [92.4, 7965.0], [92.5, 7965.0], [92.6, 7965.0], [92.7, 7965.0], [92.8, 7965.0], [92.9, 7965.0], [93.0, 7974.0], [93.1, 7974.0], [93.2, 7974.0], [93.3, 7974.0], [93.4, 7974.0], [93.5, 7974.0], [93.6, 7974.0], [93.7, 7974.0], [93.8, 7974.0], [93.9, 7974.0], [94.0, 7976.0], [94.1, 7976.0], [94.2, 7976.0], [94.3, 7976.0], [94.4, 7976.0], [94.5, 7976.0], [94.6, 7976.0], [94.7, 7976.0], [94.8, 7976.0], [94.9, 7976.0], [95.0, 7977.0], [95.1, 7977.0], [95.2, 7977.0], [95.3, 7977.0], [95.4, 7977.0], [95.5, 7977.0], [95.6, 7977.0], [95.7, 7977.0], [95.8, 7977.0], [95.9, 7977.0], [96.0, 7978.0], [96.1, 7978.0], [96.2, 7978.0], [96.3, 7978.0], [96.4, 7978.0], [96.5, 7978.0], [96.6, 7978.0], [96.7, 7978.0], [96.8, 7978.0], [96.9, 7978.0], [97.0, 8014.0], [97.1, 8014.0], [97.2, 8014.0], [97.3, 8014.0], [97.4, 8014.0], [97.5, 8014.0], [97.6, 8014.0], [97.7, 8014.0], [97.8, 8014.0], [97.9, 8014.0], [98.0, 8024.0], [98.1, 8024.0], [98.2, 8024.0], [98.3, 8024.0], [98.4, 8024.0], [98.5, 8024.0], [98.6, 8024.0], [98.7, 8024.0], [98.8, 8024.0], [98.9, 8024.0], [99.0, 8062.0], [99.1, 8062.0], [99.2, 8062.0], [99.3, 8062.0], [99.4, 8062.0], [99.5, 8062.0], [99.6, 8062.0], [99.7, 8062.0], [99.8, 8062.0], [99.9, 8062.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 2623.0], [0.1, 2623.0], [0.2, 2623.0], [0.3, 2623.0], [0.4, 2623.0], [0.5, 2623.0], [0.6, 2623.0], [0.7, 2623.0], [0.8, 2623.0], [0.9, 2623.0], [1.0, 2638.0], [1.1, 2638.0], [1.2, 2638.0], [1.3, 2638.0], [1.4, 2638.0], [1.5, 2638.0], [1.6, 2638.0], [1.7, 2638.0], [1.8, 2638.0], [1.9, 2638.0], [2.0, 2638.0], [2.1, 2638.0], [2.2, 2638.0], [2.3, 2638.0], [2.4, 2638.0], [2.5, 2638.0], [2.6, 2638.0], [2.7, 2638.0], [2.8, 2638.0], [2.9, 2638.0], [3.0, 2644.0], [3.1, 2644.0], [3.2, 2644.0], [3.3, 2644.0], [3.4, 2644.0], [3.5, 2644.0], [3.6, 2644.0], [3.7, 2644.0], [3.8, 2644.0], [3.9, 2644.0], [4.0, 2655.0], [4.1, 2655.0], [4.2, 2655.0], [4.3, 2655.0], [4.4, 2655.0], [4.5, 2655.0], [4.6, 2655.0], [4.7, 2655.0], [4.8, 2655.0], [4.9, 2655.0], [5.0, 2690.0], [5.1, 2690.0], [5.2, 2690.0], [5.3, 2690.0], [5.4, 2690.0], [5.5, 2690.0], [5.6, 2690.0], [5.7, 2690.0], [5.8, 2690.0], [5.9, 2690.0], [6.0, 2691.0], [6.1, 2691.0], [6.2, 2691.0], [6.3, 2691.0], [6.4, 2691.0], [6.5, 2691.0], [6.6, 2691.0], [6.7, 2691.0], [6.8, 2691.0], [6.9, 2691.0], [7.0, 2701.0], [7.1, 2701.0], [7.2, 2701.0], [7.3, 2701.0], [7.4, 2701.0], [7.5, 2701.0], [7.6, 2701.0], [7.7, 2701.0], [7.8, 2701.0], [7.9, 2701.0], [8.0, 2704.0], [8.1, 2704.0], [8.2, 2704.0], [8.3, 2704.0], [8.4, 2704.0], [8.5, 2704.0], [8.6, 2704.0], [8.7, 2704.0], [8.8, 2704.0], [8.9, 2704.0], [9.0, 2740.0], [9.1, 2740.0], [9.2, 2740.0], [9.3, 2740.0], [9.4, 2740.0], [9.5, 2740.0], [9.6, 2740.0], [9.7, 2740.0], [9.8, 2740.0], [9.9, 2740.0], [10.0, 2744.0], [10.1, 2744.0], [10.2, 2744.0], [10.3, 2744.0], [10.4, 2744.0], [10.5, 2744.0], [10.6, 2744.0], [10.7, 2744.0], [10.8, 2744.0], [10.9, 2744.0], [11.0, 2747.0], [11.1, 2747.0], [11.2, 2747.0], [11.3, 2747.0], [11.4, 2747.0], [11.5, 2747.0], [11.6, 2747.0], [11.7, 2747.0], [11.8, 2747.0], [11.9, 2747.0], [12.0, 2755.0], [12.1, 2755.0], [12.2, 2755.0], [12.3, 2755.0], [12.4, 2755.0], [12.5, 2755.0], [12.6, 2755.0], [12.7, 2755.0], [12.8, 2755.0], [12.9, 2755.0], [13.0, 2766.0], [13.1, 2766.0], [13.2, 2766.0], [13.3, 2766.0], [13.4, 2766.0], [13.5, 2766.0], [13.6, 2766.0], [13.7, 2766.0], [13.8, 2766.0], [13.9, 2766.0], [14.0, 2776.0], [14.1, 2776.0], [14.2, 2776.0], [14.3, 2776.0], [14.4, 2776.0], [14.5, 2776.0], [14.6, 2776.0], [14.7, 2776.0], [14.8, 2776.0], [14.9, 2776.0], [15.0, 2783.0], [15.1, 2783.0], [15.2, 2783.0], [15.3, 2783.0], [15.4, 2783.0], [15.5, 2783.0], [15.6, 2783.0], [15.7, 2783.0], [15.8, 2783.0], [15.9, 2783.0], [16.0, 2803.0], [16.1, 2803.0], [16.2, 2803.0], [16.3, 2803.0], [16.4, 2803.0], [16.5, 2803.0], [16.6, 2803.0], [16.7, 2803.0], [16.8, 2803.0], [16.9, 2803.0], [17.0, 2809.0], [17.1, 2809.0], [17.2, 2809.0], [17.3, 2809.0], [17.4, 2809.0], [17.5, 2809.0], [17.6, 2809.0], [17.7, 2809.0], [17.8, 2809.0], [17.9, 2809.0], [18.0, 2811.0], [18.1, 2811.0], [18.2, 2811.0], [18.3, 2811.0], [18.4, 2811.0], [18.5, 2811.0], [18.6, 2811.0], [18.7, 2811.0], [18.8, 2811.0], [18.9, 2811.0], [19.0, 2831.0], [19.1, 2831.0], [19.2, 2831.0], [19.3, 2831.0], [19.4, 2831.0], [19.5, 2831.0], [19.6, 2831.0], [19.7, 2831.0], [19.8, 2831.0], [19.9, 2831.0], [20.0, 2844.0], [20.1, 2844.0], [20.2, 2844.0], [20.3, 2844.0], [20.4, 2844.0], [20.5, 2844.0], [20.6, 2844.0], [20.7, 2844.0], [20.8, 2844.0], [20.9, 2844.0], [21.0, 2845.0], [21.1, 2845.0], [21.2, 2845.0], [21.3, 2845.0], [21.4, 2845.0], [21.5, 2845.0], [21.6, 2845.0], [21.7, 2845.0], [21.8, 2845.0], [21.9, 2845.0], [22.0, 2854.0], [22.1, 2854.0], [22.2, 2854.0], [22.3, 2854.0], [22.4, 2854.0], [22.5, 2854.0], [22.6, 2854.0], [22.7, 2854.0], [22.8, 2854.0], [22.9, 2854.0], [23.0, 2863.0], [23.1, 2863.0], [23.2, 2863.0], [23.3, 2863.0], [23.4, 2863.0], [23.5, 2863.0], [23.6, 2863.0], [23.7, 2863.0], [23.8, 2863.0], [23.9, 2863.0], [24.0, 2876.0], [24.1, 2876.0], [24.2, 2876.0], [24.3, 2876.0], [24.4, 2876.0], [24.5, 2876.0], [24.6, 2876.0], [24.7, 2876.0], [24.8, 2876.0], [24.9, 2876.0], [25.0, 2879.0], [25.1, 2879.0], [25.2, 2879.0], [25.3, 2879.0], [25.4, 2879.0], [25.5, 2879.0], [25.6, 2879.0], [25.7, 2879.0], [25.8, 2879.0], [25.9, 2879.0], [26.0, 2894.0], [26.1, 2894.0], [26.2, 2894.0], [26.3, 2894.0], [26.4, 2894.0], [26.5, 2894.0], [26.6, 2894.0], [26.7, 2894.0], [26.8, 2894.0], [26.9, 2894.0], [27.0, 2904.0], [27.1, 2904.0], [27.2, 2904.0], [27.3, 2904.0], [27.4, 2904.0], [27.5, 2904.0], [27.6, 2904.0], [27.7, 2904.0], [27.8, 2904.0], [27.9, 2904.0], [28.0, 2913.0], [28.1, 2913.0], [28.2, 2913.0], [28.3, 2913.0], [28.4, 2913.0], [28.5, 2913.0], [28.6, 2913.0], [28.7, 2913.0], [28.8, 2913.0], [28.9, 2913.0], [29.0, 2924.0], [29.1, 2924.0], [29.2, 2924.0], [29.3, 2924.0], [29.4, 2924.0], [29.5, 2924.0], [29.6, 2924.0], [29.7, 2924.0], [29.8, 2924.0], [29.9, 2924.0], [30.0, 2929.0], [30.1, 2929.0], [30.2, 2929.0], [30.3, 2929.0], [30.4, 2929.0], [30.5, 2929.0], [30.6, 2929.0], [30.7, 2929.0], [30.8, 2929.0], [30.9, 2929.0], [31.0, 2940.0], [31.1, 2940.0], [31.2, 2940.0], [31.3, 2940.0], [31.4, 2940.0], [31.5, 2940.0], [31.6, 2940.0], [31.7, 2940.0], [31.8, 2940.0], [31.9, 2940.0], [32.0, 2947.0], [32.1, 2947.0], [32.2, 2947.0], [32.3, 2947.0], [32.4, 2947.0], [32.5, 2947.0], [32.6, 2947.0], [32.7, 2947.0], [32.8, 2947.0], [32.9, 2947.0], [33.0, 2952.0], [33.1, 2952.0], [33.2, 2952.0], [33.3, 2952.0], [33.4, 2952.0], [33.5, 2952.0], [33.6, 2952.0], [33.7, 2952.0], [33.8, 2952.0], [33.9, 2952.0], [34.0, 2956.0], [34.1, 2956.0], [34.2, 2956.0], [34.3, 2956.0], [34.4, 2956.0], [34.5, 2956.0], [34.6, 2956.0], [34.7, 2956.0], [34.8, 2956.0], [34.9, 2956.0], [35.0, 2958.0], [35.1, 2958.0], [35.2, 2958.0], [35.3, 2958.0], [35.4, 2958.0], [35.5, 2958.0], [35.6, 2958.0], [35.7, 2958.0], [35.8, 2958.0], [35.9, 2958.0], [36.0, 2986.0], [36.1, 2986.0], [36.2, 2986.0], [36.3, 2986.0], [36.4, 2986.0], [36.5, 2986.0], [36.6, 2986.0], [36.7, 2986.0], [36.8, 2986.0], [36.9, 2986.0], [37.0, 2990.0], [37.1, 2990.0], [37.2, 2990.0], [37.3, 2990.0], [37.4, 2990.0], [37.5, 2990.0], [37.6, 2990.0], [37.7, 2990.0], [37.8, 2990.0], [37.9, 2990.0], [38.0, 2994.0], [38.1, 2994.0], [38.2, 2994.0], [38.3, 2994.0], [38.4, 2994.0], [38.5, 2994.0], [38.6, 2994.0], [38.7, 2994.0], [38.8, 2994.0], [38.9, 2994.0], [39.0, 2995.0], [39.1, 2995.0], [39.2, 2995.0], [39.3, 2995.0], [39.4, 2995.0], [39.5, 2995.0], [39.6, 2995.0], [39.7, 2995.0], [39.8, 2995.0], [39.9, 2995.0], [40.0, 3048.0], [40.1, 3048.0], [40.2, 3048.0], [40.3, 3048.0], [40.4, 3048.0], [40.5, 3048.0], [40.6, 3048.0], [40.7, 3048.0], [40.8, 3048.0], [40.9, 3048.0], [41.0, 3049.0], [41.1, 3049.0], [41.2, 3049.0], [41.3, 3049.0], [41.4, 3049.0], [41.5, 3049.0], [41.6, 3049.0], [41.7, 3049.0], [41.8, 3049.0], [41.9, 3049.0], [42.0, 3058.0], [42.1, 3058.0], [42.2, 3058.0], [42.3, 3058.0], [42.4, 3058.0], [42.5, 3058.0], [42.6, 3058.0], [42.7, 3058.0], [42.8, 3058.0], [42.9, 3058.0], [43.0, 3064.0], [43.1, 3064.0], [43.2, 3064.0], [43.3, 3064.0], [43.4, 3064.0], [43.5, 3064.0], [43.6, 3064.0], [43.7, 3064.0], [43.8, 3064.0], [43.9, 3064.0], [44.0, 3071.0], [44.1, 3071.0], [44.2, 3071.0], [44.3, 3071.0], [44.4, 3071.0], [44.5, 3071.0], [44.6, 3071.0], [44.7, 3071.0], [44.8, 3071.0], [44.9, 3071.0], [45.0, 3083.0], [45.1, 3083.0], [45.2, 3083.0], [45.3, 3083.0], [45.4, 3083.0], [45.5, 3083.0], [45.6, 3083.0], [45.7, 3083.0], [45.8, 3083.0], [45.9, 3083.0], [46.0, 3085.0], [46.1, 3085.0], [46.2, 3085.0], [46.3, 3085.0], [46.4, 3085.0], [46.5, 3085.0], [46.6, 3085.0], [46.7, 3085.0], [46.8, 3085.0], [46.9, 3085.0], [47.0, 3099.0], [47.1, 3099.0], [47.2, 3099.0], [47.3, 3099.0], [47.4, 3099.0], [47.5, 3099.0], [47.6, 3099.0], [47.7, 3099.0], [47.8, 3099.0], [47.9, 3099.0], [48.0, 3101.0], [48.1, 3101.0], [48.2, 3101.0], [48.3, 3101.0], [48.4, 3101.0], [48.5, 3101.0], [48.6, 3101.0], [48.7, 3101.0], [48.8, 3101.0], [48.9, 3101.0], [49.0, 3112.0], [49.1, 3112.0], [49.2, 3112.0], [49.3, 3112.0], [49.4, 3112.0], [49.5, 3112.0], [49.6, 3112.0], [49.7, 3112.0], [49.8, 3112.0], [49.9, 3112.0], [50.0, 3121.0], [50.1, 3121.0], [50.2, 3121.0], [50.3, 3121.0], [50.4, 3121.0], [50.5, 3121.0], [50.6, 3121.0], [50.7, 3121.0], [50.8, 3121.0], [50.9, 3121.0], [51.0, 3136.0], [51.1, 3136.0], [51.2, 3136.0], [51.3, 3136.0], [51.4, 3136.0], [51.5, 3136.0], [51.6, 3136.0], [51.7, 3136.0], [51.8, 3136.0], [51.9, 3136.0], [52.0, 3155.0], [52.1, 3155.0], [52.2, 3155.0], [52.3, 3155.0], [52.4, 3155.0], [52.5, 3155.0], [52.6, 3155.0], [52.7, 3155.0], [52.8, 3155.0], [52.9, 3155.0], [53.0, 3162.0], [53.1, 3162.0], [53.2, 3162.0], [53.3, 3162.0], [53.4, 3162.0], [53.5, 3162.0], [53.6, 3162.0], [53.7, 3162.0], [53.8, 3162.0], [53.9, 3162.0], [54.0, 3163.0], [54.1, 3163.0], [54.2, 3163.0], [54.3, 3163.0], [54.4, 3163.0], [54.5, 3163.0], [54.6, 3163.0], [54.7, 3163.0], [54.8, 3163.0], [54.9, 3163.0], [55.0, 3172.0], [55.1, 3172.0], [55.2, 3172.0], [55.3, 3172.0], [55.4, 3172.0], [55.5, 3172.0], [55.6, 3172.0], [55.7, 3172.0], [55.8, 3172.0], [55.9, 3172.0], [56.0, 3181.0], [56.1, 3181.0], [56.2, 3181.0], [56.3, 3181.0], [56.4, 3181.0], [56.5, 3181.0], [56.6, 3181.0], [56.7, 3181.0], [56.8, 3181.0], [56.9, 3181.0], [57.0, 3196.0], [57.1, 3196.0], [57.2, 3196.0], [57.3, 3196.0], [57.4, 3196.0], [57.5, 3196.0], [57.6, 3196.0], [57.7, 3196.0], [57.8, 3196.0], [57.9, 3196.0], [58.0, 3206.0], [58.1, 3206.0], [58.2, 3206.0], [58.3, 3206.0], [58.4, 3206.0], [58.5, 3206.0], [58.6, 3206.0], [58.7, 3206.0], [58.8, 3206.0], [58.9, 3206.0], [59.0, 3209.0], [59.1, 3209.0], [59.2, 3209.0], [59.3, 3209.0], [59.4, 3209.0], [59.5, 3209.0], [59.6, 3209.0], [59.7, 3209.0], [59.8, 3209.0], [59.9, 3209.0], [60.0, 3218.0], [60.1, 3218.0], [60.2, 3218.0], [60.3, 3218.0], [60.4, 3218.0], [60.5, 3218.0], [60.6, 3218.0], [60.7, 3218.0], [60.8, 3218.0], [60.9, 3218.0], [61.0, 3227.0], [61.1, 3227.0], [61.2, 3227.0], [61.3, 3227.0], [61.4, 3227.0], [61.5, 3227.0], [61.6, 3227.0], [61.7, 3227.0], [61.8, 3227.0], [61.9, 3227.0], [62.0, 3245.0], [62.1, 3245.0], [62.2, 3245.0], [62.3, 3245.0], [62.4, 3245.0], [62.5, 3245.0], [62.6, 3245.0], [62.7, 3245.0], [62.8, 3245.0], [62.9, 3245.0], [63.0, 3253.0], [63.1, 3253.0], [63.2, 3253.0], [63.3, 3253.0], [63.4, 3253.0], [63.5, 3253.0], [63.6, 3253.0], [63.7, 3253.0], [63.8, 3253.0], [63.9, 3253.0], [64.0, 3256.0], [64.1, 3256.0], [64.2, 3256.0], [64.3, 3256.0], [64.4, 3256.0], [64.5, 3256.0], [64.6, 3256.0], [64.7, 3256.0], [64.8, 3256.0], [64.9, 3256.0], [65.0, 3270.0], [65.1, 3270.0], [65.2, 3270.0], [65.3, 3270.0], [65.4, 3270.0], [65.5, 3270.0], [65.6, 3270.0], [65.7, 3270.0], [65.8, 3270.0], [65.9, 3270.0], [66.0, 3282.0], [66.1, 3282.0], [66.2, 3282.0], [66.3, 3282.0], [66.4, 3282.0], [66.5, 3282.0], [66.6, 3282.0], [66.7, 3282.0], [66.8, 3282.0], [66.9, 3282.0], [67.0, 3284.0], [67.1, 3284.0], [67.2, 3284.0], [67.3, 3284.0], [67.4, 3284.0], [67.5, 3284.0], [67.6, 3284.0], [67.7, 3284.0], [67.8, 3284.0], [67.9, 3284.0], [68.0, 3284.0], [68.1, 3284.0], [68.2, 3284.0], [68.3, 3284.0], [68.4, 3284.0], [68.5, 3284.0], [68.6, 3284.0], [68.7, 3284.0], [68.8, 3284.0], [68.9, 3284.0], [69.0, 3286.0], [69.1, 3286.0], [69.2, 3286.0], [69.3, 3286.0], [69.4, 3286.0], [69.5, 3286.0], [69.6, 3286.0], [69.7, 3286.0], [69.8, 3286.0], [69.9, 3286.0], [70.0, 3288.0], [70.1, 3288.0], [70.2, 3288.0], [70.3, 3288.0], [70.4, 3288.0], [70.5, 3288.0], [70.6, 3288.0], [70.7, 3288.0], [70.8, 3288.0], [70.9, 3288.0], [71.0, 3289.0], [71.1, 3289.0], [71.2, 3289.0], [71.3, 3289.0], [71.4, 3289.0], [71.5, 3289.0], [71.6, 3289.0], [71.7, 3289.0], [71.8, 3289.0], [71.9, 3289.0], [72.0, 3291.0], [72.1, 3291.0], [72.2, 3291.0], [72.3, 3291.0], [72.4, 3291.0], [72.5, 3291.0], [72.6, 3291.0], [72.7, 3291.0], [72.8, 3291.0], [72.9, 3291.0], [73.0, 3291.0], [73.1, 3291.0], [73.2, 3291.0], [73.3, 3291.0], [73.4, 3291.0], [73.5, 3291.0], [73.6, 3291.0], [73.7, 3291.0], [73.8, 3291.0], [73.9, 3291.0], [74.0, 3293.0], [74.1, 3293.0], [74.2, 3293.0], [74.3, 3293.0], [74.4, 3293.0], [74.5, 3293.0], [74.6, 3293.0], [74.7, 3293.0], [74.8, 3293.0], [74.9, 3293.0], [75.0, 3293.0], [75.1, 3293.0], [75.2, 3293.0], [75.3, 3293.0], [75.4, 3293.0], [75.5, 3293.0], [75.6, 3293.0], [75.7, 3293.0], [75.8, 3293.0], [75.9, 3293.0], [76.0, 3294.0], [76.1, 3294.0], [76.2, 3294.0], [76.3, 3294.0], [76.4, 3294.0], [76.5, 3294.0], [76.6, 3294.0], [76.7, 3294.0], [76.8, 3294.0], [76.9, 3294.0], [77.0, 3294.0], [77.1, 3294.0], [77.2, 3294.0], [77.3, 3294.0], [77.4, 3294.0], [77.5, 3294.0], [77.6, 3294.0], [77.7, 3294.0], [77.8, 3294.0], [77.9, 3294.0], [78.0, 3294.0], [78.1, 3294.0], [78.2, 3294.0], [78.3, 3294.0], [78.4, 3294.0], [78.5, 3294.0], [78.6, 3294.0], [78.7, 3294.0], [78.8, 3294.0], [78.9, 3294.0], [79.0, 3295.0], [79.1, 3295.0], [79.2, 3295.0], [79.3, 3295.0], [79.4, 3295.0], [79.5, 3295.0], [79.6, 3295.0], [79.7, 3295.0], [79.8, 3295.0], [79.9, 3295.0], [80.0, 3295.0], [80.1, 3295.0], [80.2, 3295.0], [80.3, 3295.0], [80.4, 3295.0], [80.5, 3295.0], [80.6, 3295.0], [80.7, 3295.0], [80.8, 3295.0], [80.9, 3295.0], [81.0, 3296.0], [81.1, 3296.0], [81.2, 3296.0], [81.3, 3296.0], [81.4, 3296.0], [81.5, 3296.0], [81.6, 3296.0], [81.7, 3296.0], [81.8, 3296.0], [81.9, 3296.0], [82.0, 3298.0], [82.1, 3298.0], [82.2, 3298.0], [82.3, 3298.0], [82.4, 3298.0], [82.5, 3298.0], [82.6, 3298.0], [82.7, 3298.0], [82.8, 3298.0], [82.9, 3298.0], [83.0, 3298.0], [83.1, 3298.0], [83.2, 3298.0], [83.3, 3298.0], [83.4, 3298.0], [83.5, 3298.0], [83.6, 3298.0], [83.7, 3298.0], [83.8, 3298.0], [83.9, 3298.0], [84.0, 3300.0], [84.1, 3300.0], [84.2, 3300.0], [84.3, 3300.0], [84.4, 3300.0], [84.5, 3300.0], [84.6, 3300.0], [84.7, 3300.0], [84.8, 3300.0], [84.9, 3300.0], [85.0, 3301.0], [85.1, 3301.0], [85.2, 3301.0], [85.3, 3301.0], [85.4, 3301.0], [85.5, 3301.0], [85.6, 3301.0], [85.7, 3301.0], [85.8, 3301.0], [85.9, 3301.0], [86.0, 3301.0], [86.1, 3301.0], [86.2, 3301.0], [86.3, 3301.0], [86.4, 3301.0], [86.5, 3301.0], [86.6, 3301.0], [86.7, 3301.0], [86.8, 3301.0], [86.9, 3301.0], [87.0, 3301.0], [87.1, 3301.0], [87.2, 3301.0], [87.3, 3301.0], [87.4, 3301.0], [87.5, 3301.0], [87.6, 3301.0], [87.7, 3301.0], [87.8, 3301.0], [87.9, 3301.0], [88.0, 3301.0], [88.1, 3301.0], [88.2, 3301.0], [88.3, 3301.0], [88.4, 3301.0], [88.5, 3301.0], [88.6, 3301.0], [88.7, 3301.0], [88.8, 3301.0], [88.9, 3301.0], [89.0, 3302.0], [89.1, 3302.0], [89.2, 3302.0], [89.3, 3302.0], [89.4, 3302.0], [89.5, 3302.0], [89.6, 3302.0], [89.7, 3302.0], [89.8, 3302.0], [89.9, 3302.0], [90.0, 3302.0], [90.1, 3302.0], [90.2, 3302.0], [90.3, 3302.0], [90.4, 3302.0], [90.5, 3302.0], [90.6, 3302.0], [90.7, 3302.0], [90.8, 3302.0], [90.9, 3302.0], [91.0, 3308.0], [91.1, 3308.0], [91.2, 3308.0], [91.3, 3308.0], [91.4, 3308.0], [91.5, 3308.0], [91.6, 3308.0], [91.7, 3308.0], [91.8, 3308.0], [91.9, 3308.0], [92.0, 3324.0], [92.1, 3324.0], [92.2, 3324.0], [92.3, 3324.0], [92.4, 3324.0], [92.5, 3324.0], [92.6, 3324.0], [92.7, 3324.0], [92.8, 3324.0], [92.9, 3324.0], [93.0, 3329.0], [93.1, 3329.0], [93.2, 3329.0], [93.3, 3329.0], [93.4, 3329.0], [93.5, 3329.0], [93.6, 3329.0], [93.7, 3329.0], [93.8, 3329.0], [93.9, 3329.0], [94.0, 3342.0], [94.1, 3342.0], [94.2, 3342.0], [94.3, 3342.0], [94.4, 3342.0], [94.5, 3342.0], [94.6, 3342.0], [94.7, 3342.0], [94.8, 3342.0], [94.9, 3342.0], [95.0, 3393.0], [95.1, 3393.0], [95.2, 3393.0], [95.3, 3393.0], [95.4, 3393.0], [95.5, 3393.0], [95.6, 3393.0], [95.7, 3393.0], [95.8, 3393.0], [95.9, 3393.0], [96.0, 3395.0], [96.1, 3395.0], [96.2, 3395.0], [96.3, 3395.0], [96.4, 3395.0], [96.5, 3395.0], [96.6, 3395.0], [96.7, 3395.0], [96.8, 3395.0], [96.9, 3395.0], [97.0, 3417.0], [97.1, 3417.0], [97.2, 3417.0], [97.3, 3417.0], [97.4, 3417.0], [97.5, 3417.0], [97.6, 3417.0], [97.7, 3417.0], [97.8, 3417.0], [97.9, 3417.0], [98.0, 3426.0], [98.1, 3426.0], [98.2, 3426.0], [98.3, 3426.0], [98.4, 3426.0], [98.5, 3426.0], [98.6, 3426.0], [98.7, 3426.0], [98.8, 3426.0], [98.9, 3426.0], [99.0, 4421.0], [99.1, 4421.0], [99.2, 4421.0], [99.3, 4421.0], [99.4, 4421.0], [99.5, 4421.0], [99.6, 4421.0], [99.7, 4421.0], [99.8, 4421.0], [99.9, 4421.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 59.0], [0.1, 59.0], [0.2, 59.0], [0.3, 59.0], [0.4, 59.0], [0.5, 59.0], [0.6, 59.0], [0.7, 59.0], [0.8, 59.0], [0.9, 59.0], [1.0, 59.0], [1.1, 59.0], [1.2, 59.0], [1.3, 59.0], [1.4, 59.0], [1.5, 59.0], [1.6, 59.0], [1.7, 59.0], [1.8, 59.0], [1.9, 59.0], [2.0, 59.0], [2.1, 59.0], [2.2, 59.0], [2.3, 59.0], [2.4, 59.0], [2.5, 59.0], [2.6, 59.0], [2.7, 59.0], [2.8, 59.0], [2.9, 59.0], [3.0, 60.0], [3.1, 60.0], [3.2, 60.0], [3.3, 60.0], [3.4, 60.0], [3.5, 60.0], [3.6, 60.0], [3.7, 60.0], [3.8, 60.0], [3.9, 60.0], [4.0, 61.0], [4.1, 61.0], [4.2, 61.0], [4.3, 61.0], [4.4, 61.0], [4.5, 61.0], [4.6, 61.0], [4.7, 61.0], [4.8, 61.0], [4.9, 61.0], [5.0, 62.0], [5.1, 62.0], [5.2, 62.0], [5.3, 62.0], [5.4, 62.0], [5.5, 62.0], [5.6, 62.0], [5.7, 62.0], [5.8, 62.0], [5.9, 62.0], [6.0, 63.0], [6.1, 63.0], [6.2, 63.0], [6.3, 63.0], [6.4, 63.0], [6.5, 63.0], [6.6, 63.0], [6.7, 63.0], [6.8, 63.0], [6.9, 63.0], [7.0, 63.0], [7.1, 63.0], [7.2, 63.0], [7.3, 63.0], [7.4, 63.0], [7.5, 63.0], [7.6, 63.0], [7.7, 63.0], [7.8, 63.0], [7.9, 63.0], [8.0, 65.0], [8.1, 65.0], [8.2, 65.0], [8.3, 65.0], [8.4, 65.0], [8.5, 65.0], [8.6, 65.0], [8.7, 65.0], [8.8, 65.0], [8.9, 65.0], [9.0, 66.0], [9.1, 66.0], [9.2, 66.0], [9.3, 66.0], [9.4, 66.0], [9.5, 66.0], [9.6, 66.0], [9.7, 66.0], [9.8, 66.0], [9.9, 66.0], [10.0, 66.0], [10.1, 66.0], [10.2, 66.0], [10.3, 66.0], [10.4, 66.0], [10.5, 66.0], [10.6, 66.0], [10.7, 66.0], [10.8, 66.0], [10.9, 66.0], [11.0, 67.0], [11.1, 67.0], [11.2, 67.0], [11.3, 67.0], [11.4, 67.0], [11.5, 67.0], [11.6, 67.0], [11.7, 67.0], [11.8, 67.0], [11.9, 67.0], [12.0, 68.0], [12.1, 68.0], [12.2, 68.0], [12.3, 68.0], [12.4, 68.0], [12.5, 68.0], [12.6, 68.0], [12.7, 68.0], [12.8, 68.0], [12.9, 68.0], [13.0, 69.0], [13.1, 69.0], [13.2, 69.0], [13.3, 69.0], [13.4, 69.0], [13.5, 69.0], [13.6, 69.0], [13.7, 69.0], [13.8, 69.0], [13.9, 69.0], [14.0, 69.0], [14.1, 69.0], [14.2, 69.0], [14.3, 69.0], [14.4, 69.0], [14.5, 69.0], [14.6, 69.0], [14.7, 69.0], [14.8, 69.0], [14.9, 69.0], [15.0, 69.0], [15.1, 69.0], [15.2, 69.0], [15.3, 69.0], [15.4, 69.0], [15.5, 69.0], [15.6, 69.0], [15.7, 69.0], [15.8, 69.0], [15.9, 69.0], [16.0, 69.0], [16.1, 69.0], [16.2, 69.0], [16.3, 69.0], [16.4, 69.0], [16.5, 69.0], [16.6, 69.0], [16.7, 69.0], [16.8, 69.0], [16.9, 69.0], [17.0, 69.0], [17.1, 69.0], [17.2, 69.0], [17.3, 69.0], [17.4, 69.0], [17.5, 69.0], [17.6, 69.0], [17.7, 69.0], [17.8, 69.0], [17.9, 69.0], [18.0, 70.0], [18.1, 70.0], [18.2, 70.0], [18.3, 70.0], [18.4, 70.0], [18.5, 70.0], [18.6, 70.0], [18.7, 70.0], [18.8, 70.0], [18.9, 70.0], [19.0, 70.0], [19.1, 70.0], [19.2, 70.0], [19.3, 70.0], [19.4, 70.0], [19.5, 70.0], [19.6, 70.0], [19.7, 70.0], [19.8, 70.0], [19.9, 70.0], [20.0, 70.0], [20.1, 70.0], [20.2, 70.0], [20.3, 70.0], [20.4, 70.0], [20.5, 70.0], [20.6, 70.0], [20.7, 70.0], [20.8, 70.0], [20.9, 70.0], [21.0, 70.0], [21.1, 70.0], [21.2, 70.0], [21.3, 70.0], [21.4, 70.0], [21.5, 70.0], [21.6, 70.0], [21.7, 70.0], [21.8, 70.0], [21.9, 70.0], [22.0, 70.0], [22.1, 70.0], [22.2, 70.0], [22.3, 70.0], [22.4, 70.0], [22.5, 70.0], [22.6, 70.0], [22.7, 70.0], [22.8, 70.0], [22.9, 70.0], [23.0, 70.0], [23.1, 70.0], [23.2, 70.0], [23.3, 70.0], [23.4, 70.0], [23.5, 70.0], [23.6, 70.0], [23.7, 70.0], [23.8, 70.0], [23.9, 70.0], [24.0, 71.0], [24.1, 71.0], [24.2, 71.0], [24.3, 71.0], [24.4, 71.0], [24.5, 71.0], [24.6, 71.0], [24.7, 71.0], [24.8, 71.0], [24.9, 71.0], [25.0, 71.0], [25.1, 71.0], [25.2, 71.0], [25.3, 71.0], [25.4, 71.0], [25.5, 71.0], [25.6, 71.0], [25.7, 71.0], [25.8, 71.0], [25.9, 71.0], [26.0, 71.0], [26.1, 71.0], [26.2, 71.0], [26.3, 71.0], [26.4, 71.0], [26.5, 71.0], [26.6, 71.0], [26.7, 71.0], [26.8, 71.0], [26.9, 71.0], [27.0, 72.0], [27.1, 72.0], [27.2, 72.0], [27.3, 72.0], [27.4, 72.0], [27.5, 72.0], [27.6, 72.0], [27.7, 72.0], [27.8, 72.0], [27.9, 72.0], [28.0, 72.0], [28.1, 72.0], [28.2, 72.0], [28.3, 72.0], [28.4, 72.0], [28.5, 72.0], [28.6, 72.0], [28.7, 72.0], [28.8, 72.0], [28.9, 72.0], [29.0, 72.0], [29.1, 72.0], [29.2, 72.0], [29.3, 72.0], [29.4, 72.0], [29.5, 72.0], [29.6, 72.0], [29.7, 72.0], [29.8, 72.0], [29.9, 72.0], [30.0, 72.0], [30.1, 72.0], [30.2, 72.0], [30.3, 72.0], [30.4, 72.0], [30.5, 72.0], [30.6, 72.0], [30.7, 72.0], [30.8, 72.0], [30.9, 72.0], [31.0, 73.0], [31.1, 73.0], [31.2, 73.0], [31.3, 73.0], [31.4, 73.0], [31.5, 73.0], [31.6, 73.0], [31.7, 73.0], [31.8, 73.0], [31.9, 73.0], [32.0, 73.0], [32.1, 73.0], [32.2, 73.0], [32.3, 73.0], [32.4, 73.0], [32.5, 73.0], [32.6, 73.0], [32.7, 73.0], [32.8, 73.0], [32.9, 73.0], [33.0, 73.0], [33.1, 73.0], [33.2, 73.0], [33.3, 73.0], [33.4, 73.0], [33.5, 73.0], [33.6, 73.0], [33.7, 73.0], [33.8, 73.0], [33.9, 73.0], [34.0, 74.0], [34.1, 74.0], [34.2, 74.0], [34.3, 74.0], [34.4, 74.0], [34.5, 74.0], [34.6, 74.0], [34.7, 74.0], [34.8, 74.0], [34.9, 74.0], [35.0, 74.0], [35.1, 74.0], [35.2, 74.0], [35.3, 74.0], [35.4, 74.0], [35.5, 74.0], [35.6, 74.0], [35.7, 74.0], [35.8, 74.0], [35.9, 74.0], [36.0, 75.0], [36.1, 75.0], [36.2, 75.0], [36.3, 75.0], [36.4, 75.0], [36.5, 75.0], [36.6, 75.0], [36.7, 75.0], [36.8, 75.0], [36.9, 75.0], [37.0, 75.0], [37.1, 75.0], [37.2, 75.0], [37.3, 75.0], [37.4, 75.0], [37.5, 75.0], [37.6, 75.0], [37.7, 75.0], [37.8, 75.0], [37.9, 75.0], [38.0, 75.0], [38.1, 75.0], [38.2, 75.0], [38.3, 75.0], [38.4, 75.0], [38.5, 75.0], [38.6, 75.0], [38.7, 75.0], [38.8, 75.0], [38.9, 75.0], [39.0, 75.0], [39.1, 75.0], [39.2, 75.0], [39.3, 75.0], [39.4, 75.0], [39.5, 75.0], [39.6, 75.0], [39.7, 75.0], [39.8, 75.0], [39.9, 75.0], [40.0, 76.0], [40.1, 76.0], [40.2, 76.0], [40.3, 76.0], [40.4, 76.0], [40.5, 76.0], [40.6, 76.0], [40.7, 76.0], [40.8, 76.0], [40.9, 76.0], [41.0, 76.0], [41.1, 76.0], [41.2, 76.0], [41.3, 76.0], [41.4, 76.0], [41.5, 76.0], [41.6, 76.0], [41.7, 76.0], [41.8, 76.0], [41.9, 76.0], [42.0, 77.0], [42.1, 77.0], [42.2, 77.0], [42.3, 77.0], [42.4, 77.0], [42.5, 77.0], [42.6, 77.0], [42.7, 77.0], [42.8, 77.0], [42.9, 77.0], [43.0, 77.0], [43.1, 77.0], [43.2, 77.0], [43.3, 77.0], [43.4, 77.0], [43.5, 77.0], [43.6, 77.0], [43.7, 77.0], [43.8, 77.0], [43.9, 77.0], [44.0, 77.0], [44.1, 77.0], [44.2, 77.0], [44.3, 77.0], [44.4, 77.0], [44.5, 77.0], [44.6, 77.0], [44.7, 77.0], [44.8, 77.0], [44.9, 77.0], [45.0, 77.0], [45.1, 77.0], [45.2, 77.0], [45.3, 77.0], [45.4, 77.0], [45.5, 77.0], [45.6, 77.0], [45.7, 77.0], [45.8, 77.0], [45.9, 77.0], [46.0, 78.0], [46.1, 78.0], [46.2, 78.0], [46.3, 78.0], [46.4, 78.0], [46.5, 78.0], [46.6, 78.0], [46.7, 78.0], [46.8, 78.0], [46.9, 78.0], [47.0, 78.0], [47.1, 78.0], [47.2, 78.0], [47.3, 78.0], [47.4, 78.0], [47.5, 78.0], [47.6, 78.0], [47.7, 78.0], [47.8, 78.0], [47.9, 78.0], [48.0, 78.0], [48.1, 78.0], [48.2, 78.0], [48.3, 78.0], [48.4, 78.0], [48.5, 78.0], [48.6, 78.0], [48.7, 78.0], [48.8, 78.0], [48.9, 78.0], [49.0, 78.0], [49.1, 78.0], [49.2, 78.0], [49.3, 78.0], [49.4, 78.0], [49.5, 78.0], [49.6, 78.0], [49.7, 78.0], [49.8, 78.0], [49.9, 78.0], [50.0, 78.0], [50.1, 78.0], [50.2, 78.0], [50.3, 78.0], [50.4, 78.0], [50.5, 78.0], [50.6, 78.0], [50.7, 78.0], [50.8, 78.0], [50.9, 78.0], [51.0, 80.0], [51.1, 80.0], [51.2, 80.0], [51.3, 80.0], [51.4, 80.0], [51.5, 80.0], [51.6, 80.0], [51.7, 80.0], [51.8, 80.0], [51.9, 80.0], [52.0, 80.0], [52.1, 80.0], [52.2, 80.0], [52.3, 80.0], [52.4, 80.0], [52.5, 80.0], [52.6, 80.0], [52.7, 80.0], [52.8, 80.0], [52.9, 80.0], [53.0, 80.0], [53.1, 80.0], [53.2, 80.0], [53.3, 80.0], [53.4, 80.0], [53.5, 80.0], [53.6, 80.0], [53.7, 80.0], [53.8, 80.0], [53.9, 80.0], [54.0, 81.0], [54.1, 81.0], [54.2, 81.0], [54.3, 81.0], [54.4, 81.0], [54.5, 81.0], [54.6, 81.0], [54.7, 81.0], [54.8, 81.0], [54.9, 81.0], [55.0, 82.0], [55.1, 82.0], [55.2, 82.0], [55.3, 82.0], [55.4, 82.0], [55.5, 82.0], [55.6, 82.0], [55.7, 82.0], [55.8, 82.0], [55.9, 82.0], [56.0, 84.0], [56.1, 84.0], [56.2, 84.0], [56.3, 84.0], [56.4, 84.0], [56.5, 84.0], [56.6, 84.0], [56.7, 84.0], [56.8, 84.0], [56.9, 84.0], [57.0, 85.0], [57.1, 85.0], [57.2, 85.0], [57.3, 85.0], [57.4, 85.0], [57.5, 85.0], [57.6, 85.0], [57.7, 85.0], [57.8, 85.0], [57.9, 85.0], [58.0, 85.0], [58.1, 85.0], [58.2, 85.0], [58.3, 85.0], [58.4, 85.0], [58.5, 85.0], [58.6, 85.0], [58.7, 85.0], [58.8, 85.0], [58.9, 85.0], [59.0, 86.0], [59.1, 86.0], [59.2, 86.0], [59.3, 86.0], [59.4, 86.0], [59.5, 86.0], [59.6, 86.0], [59.7, 86.0], [59.8, 86.0], [59.9, 86.0], [60.0, 88.0], [60.1, 88.0], [60.2, 88.0], [60.3, 88.0], [60.4, 88.0], [60.5, 88.0], [60.6, 88.0], [60.7, 88.0], [60.8, 88.0], [60.9, 88.0], [61.0, 89.0], [61.1, 89.0], [61.2, 89.0], [61.3, 89.0], [61.4, 89.0], [61.5, 89.0], [61.6, 89.0], [61.7, 89.0], [61.8, 89.0], [61.9, 89.0], [62.0, 89.0], [62.1, 89.0], [62.2, 89.0], [62.3, 89.0], [62.4, 89.0], [62.5, 89.0], [62.6, 89.0], [62.7, 89.0], [62.8, 89.0], [62.9, 89.0], [63.0, 92.0], [63.1, 92.0], [63.2, 92.0], [63.3, 92.0], [63.4, 92.0], [63.5, 92.0], [63.6, 92.0], [63.7, 92.0], [63.8, 92.0], [63.9, 92.0], [64.0, 92.0], [64.1, 92.0], [64.2, 92.0], [64.3, 92.0], [64.4, 92.0], [64.5, 92.0], [64.6, 92.0], [64.7, 92.0], [64.8, 92.0], [64.9, 92.0], [65.0, 96.0], [65.1, 96.0], [65.2, 96.0], [65.3, 96.0], [65.4, 96.0], [65.5, 96.0], [65.6, 96.0], [65.7, 96.0], [65.8, 96.0], [65.9, 96.0], [66.0, 96.0], [66.1, 96.0], [66.2, 96.0], [66.3, 96.0], [66.4, 96.0], [66.5, 96.0], [66.6, 96.0], [66.7, 96.0], [66.8, 96.0], [66.9, 96.0], [67.0, 98.0], [67.1, 98.0], [67.2, 98.0], [67.3, 98.0], [67.4, 98.0], [67.5, 98.0], [67.6, 98.0], [67.7, 98.0], [67.8, 98.0], [67.9, 98.0], [68.0, 104.0], [68.1, 104.0], [68.2, 104.0], [68.3, 104.0], [68.4, 104.0], [68.5, 104.0], [68.6, 104.0], [68.7, 104.0], [68.8, 104.0], [68.9, 104.0], [69.0, 105.0], [69.1, 105.0], [69.2, 105.0], [69.3, 105.0], [69.4, 105.0], [69.5, 105.0], [69.6, 105.0], [69.7, 105.0], [69.8, 105.0], [69.9, 105.0], [70.0, 106.0], [70.1, 106.0], [70.2, 106.0], [70.3, 106.0], [70.4, 106.0], [70.5, 106.0], [70.6, 106.0], [70.7, 106.0], [70.8, 106.0], [70.9, 106.0], [71.0, 115.0], [71.1, 115.0], [71.2, 115.0], [71.3, 115.0], [71.4, 115.0], [71.5, 115.0], [71.6, 115.0], [71.7, 115.0], [71.8, 115.0], [71.9, 115.0], [72.0, 127.0], [72.1, 127.0], [72.2, 127.0], [72.3, 127.0], [72.4, 127.0], [72.5, 127.0], [72.6, 127.0], [72.7, 127.0], [72.8, 127.0], [72.9, 127.0], [73.0, 127.0], [73.1, 127.0], [73.2, 127.0], [73.3, 127.0], [73.4, 127.0], [73.5, 127.0], [73.6, 127.0], [73.7, 127.0], [73.8, 127.0], [73.9, 127.0], [74.0, 136.0], [74.1, 136.0], [74.2, 136.0], [74.3, 136.0], [74.4, 136.0], [74.5, 136.0], [74.6, 136.0], [74.7, 136.0], [74.8, 136.0], [74.9, 136.0], [75.0, 146.0], [75.1, 146.0], [75.2, 146.0], [75.3, 146.0], [75.4, 146.0], [75.5, 146.0], [75.6, 146.0], [75.7, 146.0], [75.8, 146.0], [75.9, 146.0], [76.0, 155.0], [76.1, 155.0], [76.2, 155.0], [76.3, 155.0], [76.4, 155.0], [76.5, 155.0], [76.6, 155.0], [76.7, 155.0], [76.8, 155.0], [76.9, 155.0], [77.0, 166.0], [77.1, 166.0], [77.2, 166.0], [77.3, 166.0], [77.4, 166.0], [77.5, 166.0], [77.6, 166.0], [77.7, 166.0], [77.8, 166.0], [77.9, 166.0], [78.0, 176.0], [78.1, 176.0], [78.2, 176.0], [78.3, 176.0], [78.4, 176.0], [78.5, 176.0], [78.6, 176.0], [78.7, 176.0], [78.8, 176.0], [78.9, 176.0], [79.0, 186.0], [79.1, 186.0], [79.2, 186.0], [79.3, 186.0], [79.4, 186.0], [79.5, 186.0], [79.6, 186.0], [79.7, 186.0], [79.8, 186.0], [79.9, 186.0], [80.0, 196.0], [80.1, 196.0], [80.2, 196.0], [80.3, 196.0], [80.4, 196.0], [80.5, 196.0], [80.6, 196.0], [80.7, 196.0], [80.8, 196.0], [80.9, 196.0], [81.0, 205.0], [81.1, 205.0], [81.2, 205.0], [81.3, 205.0], [81.4, 205.0], [81.5, 205.0], [81.6, 205.0], [81.7, 205.0], [81.8, 205.0], [81.9, 205.0], [82.0, 216.0], [82.1, 216.0], [82.2, 216.0], [82.3, 216.0], [82.4, 216.0], [82.5, 216.0], [82.6, 216.0], [82.7, 216.0], [82.8, 216.0], [82.9, 216.0], [83.0, 224.0], [83.1, 224.0], [83.2, 224.0], [83.3, 224.0], [83.4, 224.0], [83.5, 224.0], [83.6, 224.0], [83.7, 224.0], [83.8, 224.0], [83.9, 224.0], [84.0, 224.0], [84.1, 224.0], [84.2, 224.0], [84.3, 224.0], [84.4, 224.0], [84.5, 224.0], [84.6, 224.0], [84.7, 224.0], [84.8, 224.0], [84.9, 224.0], [85.0, 224.0], [85.1, 224.0], [85.2, 224.0], [85.3, 224.0], [85.4, 224.0], [85.5, 224.0], [85.6, 224.0], [85.7, 224.0], [85.8, 224.0], [85.9, 224.0], [86.0, 224.0], [86.1, 224.0], [86.2, 224.0], [86.3, 224.0], [86.4, 224.0], [86.5, 224.0], [86.6, 224.0], [86.7, 224.0], [86.8, 224.0], [86.9, 224.0], [87.0, 224.0], [87.1, 224.0], [87.2, 224.0], [87.3, 224.0], [87.4, 224.0], [87.5, 224.0], [87.6, 224.0], [87.7, 224.0], [87.8, 224.0], [87.9, 224.0], [88.0, 224.0], [88.1, 224.0], [88.2, 224.0], [88.3, 224.0], [88.4, 224.0], [88.5, 224.0], [88.6, 224.0], [88.7, 224.0], [88.8, 224.0], [88.9, 224.0], [89.0, 224.0], [89.1, 224.0], [89.2, 224.0], [89.3, 224.0], [89.4, 224.0], [89.5, 224.0], [89.6, 224.0], [89.7, 224.0], [89.8, 224.0], [89.9, 224.0], [90.0, 224.0], [90.1, 224.0], [90.2, 224.0], [90.3, 224.0], [90.4, 224.0], [90.5, 224.0], [90.6, 224.0], [90.7, 224.0], [90.8, 224.0], [90.9, 224.0], [91.0, 224.0], [91.1, 224.0], [91.2, 224.0], [91.3, 224.0], [91.4, 224.0], [91.5, 224.0], [91.6, 224.0], [91.7, 224.0], [91.8, 224.0], [91.9, 224.0], [92.0, 225.0], [92.1, 225.0], [92.2, 225.0], [92.3, 225.0], [92.4, 225.0], [92.5, 225.0], [92.6, 225.0], [92.7, 225.0], [92.8, 225.0], [92.9, 225.0], [93.0, 225.0], [93.1, 225.0], [93.2, 225.0], [93.3, 225.0], [93.4, 225.0], [93.5, 225.0], [93.6, 225.0], [93.7, 225.0], [93.8, 225.0], [93.9, 225.0], [94.0, 225.0], [94.1, 225.0], [94.2, 225.0], [94.3, 225.0], [94.4, 225.0], [94.5, 225.0], [94.6, 225.0], [94.7, 225.0], [94.8, 225.0], [94.9, 225.0], [95.0, 225.0], [95.1, 225.0], [95.2, 225.0], [95.3, 225.0], [95.4, 225.0], [95.5, 225.0], [95.6, 225.0], [95.7, 225.0], [95.8, 225.0], [95.9, 225.0], [96.0, 225.0], [96.1, 225.0], [96.2, 225.0], [96.3, 225.0], [96.4, 225.0], [96.5, 225.0], [96.6, 225.0], [96.7, 225.0], [96.8, 225.0], [96.9, 225.0], [97.0, 225.0], [97.1, 225.0], [97.2, 225.0], [97.3, 225.0], [97.4, 225.0], [97.5, 225.0], [97.6, 225.0], [97.7, 225.0], [97.8, 225.0], [97.9, 225.0], [98.0, 233.0], [98.1, 233.0], [98.2, 233.0], [98.3, 233.0], [98.4, 233.0], [98.5, 233.0], [98.6, 233.0], [98.7, 233.0], [98.8, 233.0], [98.9, 233.0], [99.0, 235.0], [99.1, 235.0], [99.2, 235.0], [99.3, 235.0], [99.4, 235.0], [99.5, 235.0], [99.6, 235.0], [99.7, 235.0], [99.8, 235.0], [99.9, 235.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 3239.0], [0.1, 3239.0], [0.2, 3239.0], [0.3, 3239.0], [0.4, 3239.0], [0.5, 3239.0], [0.6, 3239.0], [0.7, 3239.0], [0.8, 3239.0], [0.9, 3239.0], [1.0, 4391.0], [1.1, 4391.0], [1.2, 4391.0], [1.3, 4391.0], [1.4, 4391.0], [1.5, 4391.0], [1.6, 4391.0], [1.7, 4391.0], [1.8, 4391.0], [1.9, 4391.0], [2.0, 4397.0], [2.1, 4397.0], [2.2, 4397.0], [2.3, 4397.0], [2.4, 4397.0], [2.5, 4397.0], [2.6, 4397.0], [2.7, 4397.0], [2.8, 4397.0], [2.9, 4397.0], [3.0, 4551.0], [3.1, 4551.0], [3.2, 4551.0], [3.3, 4551.0], [3.4, 4551.0], [3.5, 4551.0], [3.6, 4551.0], [3.7, 4551.0], [3.8, 4551.0], [3.9, 4551.0], [4.0, 4749.0], [4.1, 4749.0], [4.2, 4749.0], [4.3, 4749.0], [4.4, 4749.0], [4.5, 4749.0], [4.6, 4749.0], [4.7, 4749.0], [4.8, 4749.0], [4.9, 4749.0], [5.0, 4769.0], [5.1, 4769.0], [5.2, 4769.0], [5.3, 4769.0], [5.4, 4769.0], [5.5, 4769.0], [5.6, 4769.0], [5.7, 4769.0], [5.8, 4769.0], [5.9, 4769.0], [6.0, 4834.0], [6.1, 4834.0], [6.2, 4834.0], [6.3, 4834.0], [6.4, 4834.0], [6.5, 4834.0], [6.6, 4834.0], [6.7, 4834.0], [6.8, 4834.0], [6.9, 4834.0], [7.0, 4937.0], [7.1, 4937.0], [7.2, 4937.0], [7.3, 4937.0], [7.4, 4937.0], [7.5, 4937.0], [7.6, 4937.0], [7.7, 4937.0], [7.8, 4937.0], [7.9, 4937.0], [8.0, 5179.0], [8.1, 5179.0], [8.2, 5179.0], [8.3, 5179.0], [8.4, 5179.0], [8.5, 5179.0], [8.6, 5179.0], [8.7, 5179.0], [8.8, 5179.0], [8.9, 5179.0], [9.0, 5278.0], [9.1, 5278.0], [9.2, 5278.0], [9.3, 5278.0], [9.4, 5278.0], [9.5, 5278.0], [9.6, 5278.0], [9.7, 5278.0], [9.8, 5278.0], [9.9, 5278.0], [10.0, 5279.0], [10.1, 5279.0], [10.2, 5279.0], [10.3, 5279.0], [10.4, 5279.0], [10.5, 5279.0], [10.6, 5279.0], [10.7, 5279.0], [10.8, 5279.0], [10.9, 5279.0], [11.0, 5556.0], [11.1, 5556.0], [11.2, 5556.0], [11.3, 5556.0], [11.4, 5556.0], [11.5, 5556.0], [11.6, 5556.0], [11.7, 5556.0], [11.8, 5556.0], [11.9, 5556.0], [12.0, 5690.0], [12.1, 5690.0], [12.2, 5690.0], [12.3, 5690.0], [12.4, 5690.0], [12.5, 5690.0], [12.6, 5690.0], [12.7, 5690.0], [12.8, 5690.0], [12.9, 5690.0], [13.0, 5796.0], [13.1, 5796.0], [13.2, 5796.0], [13.3, 5796.0], [13.4, 5796.0], [13.5, 5796.0], [13.6, 5796.0], [13.7, 5796.0], [13.8, 5796.0], [13.9, 5796.0], [14.0, 5889.0], [14.1, 5889.0], [14.2, 5889.0], [14.3, 5889.0], [14.4, 5889.0], [14.5, 5889.0], [14.6, 5889.0], [14.7, 5889.0], [14.8, 5889.0], [14.9, 5889.0], [15.0, 6225.0], [15.1, 6225.0], [15.2, 6225.0], [15.3, 6225.0], [15.4, 6225.0], [15.5, 6225.0], [15.6, 6225.0], [15.7, 6225.0], [15.8, 6225.0], [15.9, 6225.0], [16.0, 6256.0], [16.1, 6256.0], [16.2, 6256.0], [16.3, 6256.0], [16.4, 6256.0], [16.5, 6256.0], [16.6, 6256.0], [16.7, 6256.0], [16.8, 6256.0], [16.9, 6256.0], [17.0, 6269.0], [17.1, 6269.0], [17.2, 6269.0], [17.3, 6269.0], [17.4, 6269.0], [17.5, 6269.0], [17.6, 6269.0], [17.7, 6269.0], [17.8, 6269.0], [17.9, 6269.0], [18.0, 6410.0], [18.1, 6410.0], [18.2, 6410.0], [18.3, 6410.0], [18.4, 6410.0], [18.5, 6410.0], [18.6, 6410.0], [18.7, 6410.0], [18.8, 6410.0], [18.9, 6410.0], [19.0, 6640.0], [19.1, 6640.0], [19.2, 6640.0], [19.3, 6640.0], [19.4, 6640.0], [19.5, 6640.0], [19.6, 6640.0], [19.7, 6640.0], [19.8, 6640.0], [19.9, 6640.0], [20.0, 6689.0], [20.1, 6689.0], [20.2, 6689.0], [20.3, 6689.0], [20.4, 6689.0], [20.5, 6689.0], [20.6, 6689.0], [20.7, 6689.0], [20.8, 6689.0], [20.9, 6689.0], [21.0, 6755.0], [21.1, 6755.0], [21.2, 6755.0], [21.3, 6755.0], [21.4, 6755.0], [21.5, 6755.0], [21.6, 6755.0], [21.7, 6755.0], [21.8, 6755.0], [21.9, 6755.0], [22.0, 6870.0], [22.1, 6870.0], [22.2, 6870.0], [22.3, 6870.0], [22.4, 6870.0], [22.5, 6870.0], [22.6, 6870.0], [22.7, 6870.0], [22.8, 6870.0], [22.9, 6870.0], [23.0, 6916.0], [23.1, 6916.0], [23.2, 6916.0], [23.3, 6916.0], [23.4, 6916.0], [23.5, 6916.0], [23.6, 6916.0], [23.7, 6916.0], [23.8, 6916.0], [23.9, 6916.0], [24.0, 6964.0], [24.1, 6964.0], [24.2, 6964.0], [24.3, 6964.0], [24.4, 6964.0], [24.5, 6964.0], [24.6, 6964.0], [24.7, 6964.0], [24.8, 6964.0], [24.9, 6964.0], [25.0, 6965.0], [25.1, 6965.0], [25.2, 6965.0], [25.3, 6965.0], [25.4, 6965.0], [25.5, 6965.0], [25.6, 6965.0], [25.7, 6965.0], [25.8, 6965.0], [25.9, 6965.0], [26.0, 7231.0], [26.1, 7231.0], [26.2, 7231.0], [26.3, 7231.0], [26.4, 7231.0], [26.5, 7231.0], [26.6, 7231.0], [26.7, 7231.0], [26.8, 7231.0], [26.9, 7231.0], [27.0, 7233.0], [27.1, 7233.0], [27.2, 7233.0], [27.3, 7233.0], [27.4, 7233.0], [27.5, 7233.0], [27.6, 7233.0], [27.7, 7233.0], [27.8, 7233.0], [27.9, 7233.0], [28.0, 7276.0], [28.1, 7276.0], [28.2, 7276.0], [28.3, 7276.0], [28.4, 7276.0], [28.5, 7276.0], [28.6, 7276.0], [28.7, 7276.0], [28.8, 7276.0], [28.9, 7276.0], [29.0, 7302.0], [29.1, 7302.0], [29.2, 7302.0], [29.3, 7302.0], [29.4, 7302.0], [29.5, 7302.0], [29.6, 7302.0], [29.7, 7302.0], [29.8, 7302.0], [29.9, 7302.0], [30.0, 7492.0], [30.1, 7492.0], [30.2, 7492.0], [30.3, 7492.0], [30.4, 7492.0], [30.5, 7492.0], [30.6, 7492.0], [30.7, 7492.0], [30.8, 7492.0], [30.9, 7492.0], [31.0, 7565.0], [31.1, 7565.0], [31.2, 7565.0], [31.3, 7565.0], [31.4, 7565.0], [31.5, 7565.0], [31.6, 7565.0], [31.7, 7565.0], [31.8, 7565.0], [31.9, 7565.0], [32.0, 7609.0], [32.1, 7609.0], [32.2, 7609.0], [32.3, 7609.0], [32.4, 7609.0], [32.5, 7609.0], [32.6, 7609.0], [32.7, 7609.0], [32.8, 7609.0], [32.9, 7609.0], [33.0, 7772.0], [33.1, 7772.0], [33.2, 7772.0], [33.3, 7772.0], [33.4, 7772.0], [33.5, 7772.0], [33.6, 7772.0], [33.7, 7772.0], [33.8, 7772.0], [33.9, 7772.0], [34.0, 7780.0], [34.1, 7780.0], [34.2, 7780.0], [34.3, 7780.0], [34.4, 7780.0], [34.5, 7780.0], [34.6, 7780.0], [34.7, 7780.0], [34.8, 7780.0], [34.9, 7780.0], [35.0, 7959.0], [35.1, 7959.0], [35.2, 7959.0], [35.3, 7959.0], [35.4, 7959.0], [35.5, 7959.0], [35.6, 7959.0], [35.7, 7959.0], [35.8, 7959.0], [35.9, 7959.0], [36.0, 7992.0], [36.1, 7992.0], [36.2, 7992.0], [36.3, 7992.0], [36.4, 7992.0], [36.5, 7992.0], [36.6, 7992.0], [36.7, 7992.0], [36.8, 7992.0], [36.9, 7992.0], [37.0, 8027.0], [37.1, 8027.0], [37.2, 8027.0], [37.3, 8027.0], [37.4, 8027.0], [37.5, 8027.0], [37.6, 8027.0], [37.7, 8027.0], [37.8, 8027.0], [37.9, 8027.0], [38.0, 8067.0], [38.1, 8067.0], [38.2, 8067.0], [38.3, 8067.0], [38.4, 8067.0], [38.5, 8067.0], [38.6, 8067.0], [38.7, 8067.0], [38.8, 8067.0], [38.9, 8067.0], [39.0, 8068.0], [39.1, 8068.0], [39.2, 8068.0], [39.3, 8068.0], [39.4, 8068.0], [39.5, 8068.0], [39.6, 8068.0], [39.7, 8068.0], [39.8, 8068.0], [39.9, 8068.0], [40.0, 8073.0], [40.1, 8073.0], [40.2, 8073.0], [40.3, 8073.0], [40.4, 8073.0], [40.5, 8073.0], [40.6, 8073.0], [40.7, 8073.0], [40.8, 8073.0], [40.9, 8073.0], [41.0, 8214.0], [41.1, 8214.0], [41.2, 8214.0], [41.3, 8214.0], [41.4, 8214.0], [41.5, 8214.0], [41.6, 8214.0], [41.7, 8214.0], [41.8, 8214.0], [41.9, 8214.0], [42.0, 8230.0], [42.1, 8230.0], [42.2, 8230.0], [42.3, 8230.0], [42.4, 8230.0], [42.5, 8230.0], [42.6, 8230.0], [42.7, 8230.0], [42.8, 8230.0], [42.9, 8230.0], [43.0, 8475.0], [43.1, 8475.0], [43.2, 8475.0], [43.3, 8475.0], [43.4, 8475.0], [43.5, 8475.0], [43.6, 8475.0], [43.7, 8475.0], [43.8, 8475.0], [43.9, 8475.0], [44.0, 8480.0], [44.1, 8480.0], [44.2, 8480.0], [44.3, 8480.0], [44.4, 8480.0], [44.5, 8480.0], [44.6, 8480.0], [44.7, 8480.0], [44.8, 8480.0], [44.9, 8480.0], [45.0, 8484.0], [45.1, 8484.0], [45.2, 8484.0], [45.3, 8484.0], [45.4, 8484.0], [45.5, 8484.0], [45.6, 8484.0], [45.7, 8484.0], [45.8, 8484.0], [45.9, 8484.0], [46.0, 8558.0], [46.1, 8558.0], [46.2, 8558.0], [46.3, 8558.0], [46.4, 8558.0], [46.5, 8558.0], [46.6, 8558.0], [46.7, 8558.0], [46.8, 8558.0], [46.9, 8558.0], [47.0, 8594.0], [47.1, 8594.0], [47.2, 8594.0], [47.3, 8594.0], [47.4, 8594.0], [47.5, 8594.0], [47.6, 8594.0], [47.7, 8594.0], [47.8, 8594.0], [47.9, 8594.0], [48.0, 8625.0], [48.1, 8625.0], [48.2, 8625.0], [48.3, 8625.0], [48.4, 8625.0], [48.5, 8625.0], [48.6, 8625.0], [48.7, 8625.0], [48.8, 8625.0], [48.9, 8625.0], [49.0, 8652.0], [49.1, 8652.0], [49.2, 8652.0], [49.3, 8652.0], [49.4, 8652.0], [49.5, 8652.0], [49.6, 8652.0], [49.7, 8652.0], [49.8, 8652.0], [49.9, 8652.0], [50.0, 8708.0], [50.1, 8708.0], [50.2, 8708.0], [50.3, 8708.0], [50.4, 8708.0], [50.5, 8708.0], [50.6, 8708.0], [50.7, 8708.0], [50.8, 8708.0], [50.9, 8708.0], [51.0, 8928.0], [51.1, 8928.0], [51.2, 8928.0], [51.3, 8928.0], [51.4, 8928.0], [51.5, 8928.0], [51.6, 8928.0], [51.7, 8928.0], [51.8, 8928.0], [51.9, 8928.0], [52.0, 8967.0], [52.1, 8967.0], [52.2, 8967.0], [52.3, 8967.0], [52.4, 8967.0], [52.5, 8967.0], [52.6, 8967.0], [52.7, 8967.0], [52.8, 8967.0], [52.9, 8967.0], [53.0, 9248.0], [53.1, 9248.0], [53.2, 9248.0], [53.3, 9248.0], [53.4, 9248.0], [53.5, 9248.0], [53.6, 9248.0], [53.7, 9248.0], [53.8, 9248.0], [53.9, 9248.0], [54.0, 9312.0], [54.1, 9312.0], [54.2, 9312.0], [54.3, 9312.0], [54.4, 9312.0], [54.5, 9312.0], [54.6, 9312.0], [54.7, 9312.0], [54.8, 9312.0], [54.9, 9312.0], [55.0, 9331.0], [55.1, 9331.0], [55.2, 9331.0], [55.3, 9331.0], [55.4, 9331.0], [55.5, 9331.0], [55.6, 9331.0], [55.7, 9331.0], [55.8, 9331.0], [55.9, 9331.0], [56.0, 9374.0], [56.1, 9374.0], [56.2, 9374.0], [56.3, 9374.0], [56.4, 9374.0], [56.5, 9374.0], [56.6, 9374.0], [56.7, 9374.0], [56.8, 9374.0], [56.9, 9374.0], [57.0, 9381.0], [57.1, 9381.0], [57.2, 9381.0], [57.3, 9381.0], [57.4, 9381.0], [57.5, 9381.0], [57.6, 9381.0], [57.7, 9381.0], [57.8, 9381.0], [57.9, 9381.0], [58.0, 9449.0], [58.1, 9449.0], [58.2, 9449.0], [58.3, 9449.0], [58.4, 9449.0], [58.5, 9449.0], [58.6, 9449.0], [58.7, 9449.0], [58.8, 9449.0], [58.9, 9449.0], [59.0, 9494.0], [59.1, 9494.0], [59.2, 9494.0], [59.3, 9494.0], [59.4, 9494.0], [59.5, 9494.0], [59.6, 9494.0], [59.7, 9494.0], [59.8, 9494.0], [59.9, 9494.0], [60.0, 9495.0], [60.1, 9495.0], [60.2, 9495.0], [60.3, 9495.0], [60.4, 9495.0], [60.5, 9495.0], [60.6, 9495.0], [60.7, 9495.0], [60.8, 9495.0], [60.9, 9495.0], [61.0, 9523.0], [61.1, 9523.0], [61.2, 9523.0], [61.3, 9523.0], [61.4, 9523.0], [61.5, 9523.0], [61.6, 9523.0], [61.7, 9523.0], [61.8, 9523.0], [61.9, 9523.0], [62.0, 9608.0], [62.1, 9608.0], [62.2, 9608.0], [62.3, 9608.0], [62.4, 9608.0], [62.5, 9608.0], [62.6, 9608.0], [62.7, 9608.0], [62.8, 9608.0], [62.9, 9608.0], [63.0, 9715.0], [63.1, 9715.0], [63.2, 9715.0], [63.3, 9715.0], [63.4, 9715.0], [63.5, 9715.0], [63.6, 9715.0], [63.7, 9715.0], [63.8, 9715.0], [63.9, 9715.0], [64.0, 9828.0], [64.1, 9828.0], [64.2, 9828.0], [64.3, 9828.0], [64.4, 9828.0], [64.5, 9828.0], [64.6, 9828.0], [64.7, 9828.0], [64.8, 9828.0], [64.9, 9828.0], [65.0, 9898.0], [65.1, 9898.0], [65.2, 9898.0], [65.3, 9898.0], [65.4, 9898.0], [65.5, 9898.0], [65.6, 9898.0], [65.7, 9898.0], [65.8, 9898.0], [65.9, 9898.0], [66.0, 9916.0], [66.1, 9916.0], [66.2, 9916.0], [66.3, 9916.0], [66.4, 9916.0], [66.5, 9916.0], [66.6, 9916.0], [66.7, 9916.0], [66.8, 9916.0], [66.9, 9916.0], [67.0, 9926.0], [67.1, 9926.0], [67.2, 9926.0], [67.3, 9926.0], [67.4, 9926.0], [67.5, 9926.0], [67.6, 9926.0], [67.7, 9926.0], [67.8, 9926.0], [67.9, 9926.0], [68.0, 9976.0], [68.1, 9976.0], [68.2, 9976.0], [68.3, 9976.0], [68.4, 9976.0], [68.5, 9976.0], [68.6, 9976.0], [68.7, 9976.0], [68.8, 9976.0], [68.9, 9976.0], [69.0, 10021.0], [69.1, 10021.0], [69.2, 10021.0], [69.3, 10021.0], [69.4, 10021.0], [69.5, 10021.0], [69.6, 10021.0], [69.7, 10021.0], [69.8, 10021.0], [69.9, 10021.0], [70.0, 10127.0], [70.1, 10127.0], [70.2, 10127.0], [70.3, 10127.0], [70.4, 10127.0], [70.5, 10127.0], [70.6, 10127.0], [70.7, 10127.0], [70.8, 10127.0], [70.9, 10127.0], [71.0, 10289.0], [71.1, 10289.0], [71.2, 10289.0], [71.3, 10289.0], [71.4, 10289.0], [71.5, 10289.0], [71.6, 10289.0], [71.7, 10289.0], [71.8, 10289.0], [71.9, 10289.0], [72.0, 10295.0], [72.1, 10295.0], [72.2, 10295.0], [72.3, 10295.0], [72.4, 10295.0], [72.5, 10295.0], [72.6, 10295.0], [72.7, 10295.0], [72.8, 10295.0], [72.9, 10295.0], [73.0, 10441.0], [73.1, 10441.0], [73.2, 10441.0], [73.3, 10441.0], [73.4, 10441.0], [73.5, 10441.0], [73.6, 10441.0], [73.7, 10441.0], [73.8, 10441.0], [73.9, 10441.0], [74.0, 10483.0], [74.1, 10483.0], [74.2, 10483.0], [74.3, 10483.0], [74.4, 10483.0], [74.5, 10483.0], [74.6, 10483.0], [74.7, 10483.0], [74.8, 10483.0], [74.9, 10483.0], [75.0, 10568.0], [75.1, 10568.0], [75.2, 10568.0], [75.3, 10568.0], [75.4, 10568.0], [75.5, 10568.0], [75.6, 10568.0], [75.7, 10568.0], [75.8, 10568.0], [75.9, 10568.0], [76.0, 10579.0], [76.1, 10579.0], [76.2, 10579.0], [76.3, 10579.0], [76.4, 10579.0], [76.5, 10579.0], [76.6, 10579.0], [76.7, 10579.0], [76.8, 10579.0], [76.9, 10579.0], [77.0, 10604.0], [77.1, 10604.0], [77.2, 10604.0], [77.3, 10604.0], [77.4, 10604.0], [77.5, 10604.0], [77.6, 10604.0], [77.7, 10604.0], [77.8, 10604.0], [77.9, 10604.0], [78.0, 10672.0], [78.1, 10672.0], [78.2, 10672.0], [78.3, 10672.0], [78.4, 10672.0], [78.5, 10672.0], [78.6, 10672.0], [78.7, 10672.0], [78.8, 10672.0], [78.9, 10672.0], [79.0, 10672.0], [79.1, 10672.0], [79.2, 10672.0], [79.3, 10672.0], [79.4, 10672.0], [79.5, 10672.0], [79.6, 10672.0], [79.7, 10672.0], [79.8, 10672.0], [79.9, 10672.0], [80.0, 10731.0], [80.1, 10731.0], [80.2, 10731.0], [80.3, 10731.0], [80.4, 10731.0], [80.5, 10731.0], [80.6, 10731.0], [80.7, 10731.0], [80.8, 10731.0], [80.9, 10731.0], [81.0, 10789.0], [81.1, 10789.0], [81.2, 10789.0], [81.3, 10789.0], [81.4, 10789.0], [81.5, 10789.0], [81.6, 10789.0], [81.7, 10789.0], [81.8, 10789.0], [81.9, 10789.0], [82.0, 10898.0], [82.1, 10898.0], [82.2, 10898.0], [82.3, 10898.0], [82.4, 10898.0], [82.5, 10898.0], [82.6, 10898.0], [82.7, 10898.0], [82.8, 10898.0], [82.9, 10898.0], [83.0, 10910.0], [83.1, 10910.0], [83.2, 10910.0], [83.3, 10910.0], [83.4, 10910.0], [83.5, 10910.0], [83.6, 10910.0], [83.7, 10910.0], [83.8, 10910.0], [83.9, 10910.0], [84.0, 10919.0], [84.1, 10919.0], [84.2, 10919.0], [84.3, 10919.0], [84.4, 10919.0], [84.5, 10919.0], [84.6, 10919.0], [84.7, 10919.0], [84.8, 10919.0], [84.9, 10919.0], [85.0, 10923.0], [85.1, 10923.0], [85.2, 10923.0], [85.3, 10923.0], [85.4, 10923.0], [85.5, 10923.0], [85.6, 10923.0], [85.7, 10923.0], [85.8, 10923.0], [85.9, 10923.0], [86.0, 10924.0], [86.1, 10924.0], [86.2, 10924.0], [86.3, 10924.0], [86.4, 10924.0], [86.5, 10924.0], [86.6, 10924.0], [86.7, 10924.0], [86.8, 10924.0], [86.9, 10924.0], [87.0, 11007.0], [87.1, 11007.0], [87.2, 11007.0], [87.3, 11007.0], [87.4, 11007.0], [87.5, 11007.0], [87.6, 11007.0], [87.7, 11007.0], [87.8, 11007.0], [87.9, 11007.0], [88.0, 11026.0], [88.1, 11026.0], [88.2, 11026.0], [88.3, 11026.0], [88.4, 11026.0], [88.5, 11026.0], [88.6, 11026.0], [88.7, 11026.0], [88.8, 11026.0], [88.9, 11026.0], [89.0, 11026.0], [89.1, 11026.0], [89.2, 11026.0], [89.3, 11026.0], [89.4, 11026.0], [89.5, 11026.0], [89.6, 11026.0], [89.7, 11026.0], [89.8, 11026.0], [89.9, 11026.0], [90.0, 11035.0], [90.1, 11035.0], [90.2, 11035.0], [90.3, 11035.0], [90.4, 11035.0], [90.5, 11035.0], [90.6, 11035.0], [90.7, 11035.0], [90.8, 11035.0], [90.9, 11035.0], [91.0, 11056.0], [91.1, 11056.0], [91.2, 11056.0], [91.3, 11056.0], [91.4, 11056.0], [91.5, 11056.0], [91.6, 11056.0], [91.7, 11056.0], [91.8, 11056.0], [91.9, 11056.0], [92.0, 11098.0], [92.1, 11098.0], [92.2, 11098.0], [92.3, 11098.0], [92.4, 11098.0], [92.5, 11098.0], [92.6, 11098.0], [92.7, 11098.0], [92.8, 11098.0], [92.9, 11098.0], [93.0, 11251.0], [93.1, 11251.0], [93.2, 11251.0], [93.3, 11251.0], [93.4, 11251.0], [93.5, 11251.0], [93.6, 11251.0], [93.7, 11251.0], [93.8, 11251.0], [93.9, 11251.0], [94.0, 11270.0], [94.1, 11270.0], [94.2, 11270.0], [94.3, 11270.0], [94.4, 11270.0], [94.5, 11270.0], [94.6, 11270.0], [94.7, 11270.0], [94.8, 11270.0], [94.9, 11270.0], [95.0, 11393.0], [95.1, 11393.0], [95.2, 11393.0], [95.3, 11393.0], [95.4, 11393.0], [95.5, 11393.0], [95.6, 11393.0], [95.7, 11393.0], [95.8, 11393.0], [95.9, 11393.0], [96.0, 11496.0], [96.1, 11496.0], [96.2, 11496.0], [96.3, 11496.0], [96.4, 11496.0], [96.5, 11496.0], [96.6, 11496.0], [96.7, 11496.0], [96.8, 11496.0], [96.9, 11496.0], [97.0, 11497.0], [97.1, 11497.0], [97.2, 11497.0], [97.3, 11497.0], [97.4, 11497.0], [97.5, 11497.0], [97.6, 11497.0], [97.7, 11497.0], [97.8, 11497.0], [97.9, 11497.0], [98.0, 11502.0], [98.1, 11502.0], [98.2, 11502.0], [98.3, 11502.0], [98.4, 11502.0], [98.5, 11502.0], [98.6, 11502.0], [98.7, 11502.0], [98.8, 11502.0], [98.9, 11502.0], [99.0, 11511.0], [99.1, 11511.0], [99.2, 11511.0], [99.3, 11511.0], [99.4, 11511.0], [99.5, 11511.0], [99.6, 11511.0], [99.7, 11511.0], [99.8, 11511.0], [99.9, 11511.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 68.0, "series": [{"data": [[900.0, 1.0], [1000.0, 2.0], [1500.0, 2.0], [1800.0, 1.0], [1900.0, 1.0], [2000.0, 3.0], [2600.0, 2.0], [2700.0, 1.0], [2800.0, 1.0], [3000.0, 3.0], [3100.0, 1.0], [3200.0, 1.0], [3300.0, 1.0], [3600.0, 1.0], [3700.0, 4.0], [3800.0, 2.0], [4000.0, 2.0], [4100.0, 1.0], [4200.0, 1.0], [4400.0, 1.0], [4500.0, 4.0], [4600.0, 1.0], [4800.0, 3.0], [4900.0, 1.0], [5100.0, 1.0], [5200.0, 1.0], [5300.0, 3.0], [5400.0, 3.0], [5500.0, 1.0], [5700.0, 1.0], [5900.0, 4.0], [6200.0, 1.0], [6300.0, 2.0], [6400.0, 2.0], [6500.0, 1.0], [6600.0, 3.0], [6700.0, 1.0], [6900.0, 2.0], [6800.0, 1.0], [7000.0, 2.0], [7100.0, 2.0], [7200.0, 2.0], [7300.0, 2.0], [7400.0, 5.0], [7500.0, 3.0], [7600.0, 2.0], [7800.0, 2.0], [7900.0, 8.0], [8000.0, 3.0], [400.0, 1.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[4400.0, 1.0], [2600.0, 7.0], [2800.0, 11.0], [2700.0, 9.0], [2900.0, 13.0], [3000.0, 8.0], [3100.0, 10.0], [3200.0, 26.0], [3300.0, 13.0], [3400.0, 2.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 68.0], [100.0, 13.0], [200.0, 19.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[3200.0, 1.0], [4300.0, 2.0], [4500.0, 1.0], [4700.0, 2.0], [4800.0, 1.0], [4900.0, 1.0], [5100.0, 1.0], [5200.0, 2.0], [5600.0, 1.0], [5500.0, 1.0], [5800.0, 1.0], [5700.0, 1.0], [6200.0, 3.0], [6600.0, 2.0], [6400.0, 1.0], [6700.0, 1.0], [6800.0, 1.0], [6900.0, 3.0], [7200.0, 3.0], [7300.0, 1.0], [7400.0, 1.0], [7500.0, 1.0], [7600.0, 1.0], [7700.0, 2.0], [7900.0, 2.0], [8000.0, 4.0], [8400.0, 3.0], [8600.0, 2.0], [8200.0, 2.0], [8500.0, 2.0], [8700.0, 1.0], [8900.0, 2.0], [9200.0, 1.0], [9400.0, 3.0], [9500.0, 1.0], [9300.0, 4.0], [9600.0, 1.0], [9700.0, 1.0], [9900.0, 3.0], [10100.0, 1.0], [9800.0, 2.0], [10000.0, 1.0], [10200.0, 2.0], [10500.0, 2.0], [10400.0, 2.0], [10700.0, 2.0], [10600.0, 3.0], [10800.0, 1.0], [11000.0, 6.0], [10900.0, 4.0], [11200.0, 2.0], [11400.0, 2.0], [11500.0, 2.0], [11300.0, 1.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 11500.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 3.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 196.0, "series": [{"data": [[0.0, 101.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 3.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 196.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 100.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 50.52999999999994, "minX": 1.70326344E12, "maxY": 50.52999999999994, "series": [{"data": [[1.70326344E12, 50.52999999999994]], "isOverall": false, "label": "Users100", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70326344E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 59.0, "minX": 1.0, "maxY": 11502.0, "series": [{"data": [[2.0, 8014.0], [3.0, 8024.0], [4.0, 7974.0], [6.0, 7976.5], [7.0, 7978.0], [8.0, 7965.0], [9.0, 6843.0], [10.0, 7949.0], [11.0, 7926.0], [12.0, 7918.0], [13.0, 7889.0], [14.0, 7827.0], [15.0, 7631.0], [16.0, 7615.0], [17.0, 7563.0], [18.0, 7525.0], [19.0, 7500.0], [20.0, 7497.0], [21.0, 7478.0], [22.0, 7473.0], [23.0, 7482.0], [24.0, 7420.0], [25.0, 7340.0], [26.0, 7318.0], [27.0, 7233.0], [28.0, 7299.0], [29.0, 7194.0], [30.0, 7112.0], [31.0, 7078.0], [33.0, 6965.0], [32.0, 7044.0], [35.0, 6773.0], [34.0, 6954.0], [37.0, 6668.0], [36.0, 6694.0], [39.0, 6585.0], [38.0, 6657.0], [41.0, 6443.0], [40.0, 6465.0], [43.0, 6303.0], [42.0, 6327.0], [45.0, 5964.0], [44.0, 6234.0], [47.0, 5942.0], [46.0, 5970.0], [49.0, 5739.0], [48.0, 5923.0], [51.0, 5480.0], [50.0, 5568.0], [53.0, 5402.0], [52.0, 5410.0], [55.0, 5309.0], [54.0, 5371.0], [57.0, 5212.0], [56.0, 5341.0], [59.0, 4927.0], [58.0, 5110.0], [61.0, 4890.0], [60.0, 4853.0], [63.0, 4637.0], [62.0, 4822.0], [67.0, 4577.0], [66.0, 4571.0], [65.0, 4588.0], [64.0, 4560.0], [71.0, 4161.0], [70.0, 4061.0], [69.0, 4260.0], [68.0, 4473.0], [74.0, 3834.0], [73.0, 3823.0], [72.0, 4096.0], [79.0, 3603.0], [78.0, 3739.0], [77.0, 3770.0], [76.0, 3766.5], [83.0, 3097.0], [82.0, 3225.0], [81.0, 3183.0], [80.0, 3334.0], [87.0, 2694.0], [86.0, 2873.0], [85.0, 3034.0], [84.0, 3063.0], [91.0, 1928.0], [90.0, 2055.0], [89.0, 2765.0], [88.0, 2655.0], [94.0, 1831.0], [93.0, 2023.0], [92.0, 2008.0], [99.0, 992.0], [98.0, 1089.0], [97.0, 1048.0], [96.0, 1505.0], [100.0, 471.0], [1.0, 8062.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[50.529999999999994, 5360.89]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[2.0, 3308.0], [3.0, 2994.0], [4.0, 2876.0], [6.0, 2974.5], [7.0, 3286.0], [8.0, 3298.0], [9.0, 4421.0], [10.0, 2894.0], [11.0, 3245.0], [12.0, 2924.0], [13.0, 3083.0], [14.0, 2995.0], [15.0, 3295.0], [16.0, 2958.0], [17.0, 3048.0], [18.0, 3301.0], [19.0, 3296.0], [20.0, 2863.0], [21.0, 3049.0], [22.0, 3294.0], [23.0, 3284.0], [24.0, 2809.0], [25.0, 3295.0], [26.0, 3071.0], [27.0, 2986.0], [28.0, 3209.0], [29.0, 2747.0], [30.0, 2704.0], [31.0, 2766.0], [33.0, 2776.0], [32.0, 3293.0], [35.0, 3282.0], [34.0, 2691.0], [37.0, 2623.0], [36.0, 2638.0], [39.0, 3253.0], [38.0, 2879.0], [41.0, 3294.0], [40.0, 2783.0], [43.0, 2990.0], [42.0, 2913.0], [45.0, 3301.0], [44.0, 3218.0], [47.0, 3227.0], [46.0, 3291.0], [49.0, 2740.0], [48.0, 2956.0], [51.0, 3101.0], [50.0, 3058.0], [53.0, 3293.0], [52.0, 2952.0], [55.0, 2844.0], [54.0, 3162.0], [57.0, 2929.0], [56.0, 2638.0], [59.0, 3324.0], [58.0, 3291.0], [61.0, 2811.0], [60.0, 3393.0], [63.0, 3284.0], [62.0, 3181.0], [67.0, 3121.0], [66.0, 3302.0], [65.0, 2947.0], [64.0, 3329.0], [71.0, 3256.0], [70.0, 3395.0], [69.0, 2904.0], [68.0, 3342.0], [74.0, 3300.0], [73.0, 2744.0], [72.0, 2803.0], [79.0, 2701.0], [78.0, 3099.0], [77.0, 3289.0], [76.0, 3206.5], [83.0, 3064.0], [82.0, 3301.0], [81.0, 3426.0], [80.0, 3298.0], [87.0, 2755.0], [86.0, 2940.0], [85.0, 3155.0], [84.0, 2644.0], [91.0, 2831.0], [90.0, 3163.0], [89.0, 2854.0], [88.0, 3417.0], [94.0, 3288.0], [93.0, 2845.0], [92.0, 3085.0], [99.0, 3270.0], [98.0, 3206.0], [97.0, 3302.0], [96.0, 3184.0], [100.0, 2690.0], [1.0, 3136.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[50.529999999999994, 3086.4]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 69.0], [3.0, 78.0], [4.0, 72.0], [6.0, 161.5], [7.0, 233.0], [8.0, 224.0], [9.0, 225.0], [10.0, 75.0], [11.0, 77.0], [12.0, 80.0], [13.0, 62.0], [14.0, 88.0], [15.0, 86.0], [16.0, 92.0], [17.0, 59.0], [18.0, 225.0], [19.0, 224.0], [20.0, 80.0], [21.0, 71.0], [22.0, 224.0], [23.0, 127.0], [24.0, 63.0], [25.0, 146.0], [26.0, 89.0], [27.0, 66.0], [28.0, 70.0], [29.0, 78.0], [30.0, 75.0], [31.0, 71.0], [33.0, 85.0], [32.0, 224.0], [35.0, 70.0], [34.0, 69.0], [37.0, 81.0], [36.0, 115.0], [39.0, 77.0], [38.0, 70.0], [41.0, 235.0], [40.0, 61.0], [43.0, 78.0], [42.0, 89.0], [45.0, 224.0], [44.0, 71.0], [47.0, 78.0], [46.0, 225.0], [49.0, 78.0], [48.0, 84.0], [51.0, 69.0], [50.0, 80.0], [53.0, 224.0], [52.0, 104.0], [55.0, 75.0], [54.0, 59.0], [57.0, 72.0], [56.0, 92.0], [59.0, 224.0], [58.0, 216.0], [61.0, 77.0], [60.0, 225.0], [63.0, 70.0], [62.0, 60.0], [67.0, 72.0], [66.0, 186.0], [65.0, 72.0], [64.0, 69.0], [71.0, 74.0], [70.0, 106.0], [69.0, 68.0], [68.0, 205.0], [74.0, 136.0], [73.0, 73.0], [72.0, 65.0], [79.0, 96.0], [78.0, 75.0], [77.0, 166.0], [76.0, 150.0], [83.0, 63.0], [82.0, 225.0], [81.0, 77.0], [80.0, 224.0], [87.0, 105.0], [86.0, 73.0], [85.0, 73.0], [84.0, 82.0], [91.0, 74.0], [90.0, 59.0], [89.0, 69.0], [88.0, 176.0], [94.0, 155.0], [93.0, 67.0], [92.0, 85.0], [99.0, 127.0], [98.0, 96.0], [97.0, 196.0], [96.0, 68.0], [100.0, 76.0], [1.0, 70.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[50.529999999999994, 111.83999999999997]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 11393.0], [3.0, 11098.0], [4.0, 10923.0], [6.0, 11121.0], [7.0, 11502.0], [8.0, 11497.0], [9.0, 11496.0], [10.0, 10919.0], [11.0, 11251.0], [12.0, 10924.0], [13.0, 11035.0], [14.0, 10910.0], [15.0, 11026.0], [16.0, 10672.0], [17.0, 10672.0], [18.0, 11056.0], [19.0, 11026.0], [20.0, 10441.0], [21.0, 10604.0], [22.0, 11007.0], [23.0, 10898.0], [24.0, 10295.0], [25.0, 10789.0], [26.0, 10483.0], [27.0, 10289.0], [28.0, 10579.0], [29.0, 10021.0], [30.0, 9898.0], [31.0, 9926.0], [33.0, 9828.0], [32.0, 10568.0], [35.0, 10127.0], [34.0, 9715.0], [37.0, 9374.0], [36.0, 9449.0], [39.0, 9916.0], [38.0, 9608.0], [41.0, 9976.0], [40.0, 9312.0], [43.0, 9381.0], [42.0, 9331.0], [45.0, 9495.0], [44.0, 9523.0], [47.0, 9248.0], [46.0, 9494.0], [49.0, 8558.0], [48.0, 8967.0], [51.0, 8652.0], [50.0, 8708.0], [53.0, 8928.0], [52.0, 8475.0], [55.0, 8230.0], [54.0, 8594.0], [57.0, 8214.0], [56.0, 8073.0], [59.0, 8484.0], [58.0, 8625.0], [61.0, 7780.0], [60.0, 8480.0], [63.0, 7992.0], [62.0, 8068.0], [67.0, 7772.0], [66.0, 8067.0], [65.0, 7609.0], [64.0, 7959.0], [71.0, 7492.0], [70.0, 7565.0], [69.0, 7233.0], [68.0, 8027.0], [74.0, 7276.0], [73.0, 6640.0], [72.0, 6965.0], [79.0, 6410.0], [78.0, 6916.0], [77.0, 7231.0], [76.0, 7133.0], [83.0, 6225.0], [82.0, 6755.0], [81.0, 6689.0], [80.0, 6870.0], [87.0, 5556.0], [86.0, 5889.0], [85.0, 6269.0], [84.0, 5796.0], [91.0, 4834.0], [90.0, 5279.0], [89.0, 5690.0], [88.0, 6256.0], [94.0, 5278.0], [93.0, 4937.0], [92.0, 5179.0], [99.0, 4391.0], [98.0, 4397.0], [97.0, 4551.0], [96.0, 4759.0], [100.0, 3239.0], [1.0, 11270.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[50.529999999999994, 8563.409999999996]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1143.3333333333333, "minX": 1.70326344E12, "maxY": 438328.8333333333, "series": [{"data": [[1.70326344E12, 438328.8333333333]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.70326344E12, 1143.3333333333333]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70326344E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 111.83999999999997, "minX": 1.70326344E12, "maxY": 8563.409999999996, "series": [{"data": [[1.70326344E12, 5360.89]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70326344E12, 3086.4]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70326344E12, 111.83999999999997]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70326344E12, 8563.409999999996]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70326344E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 110.07999999999998, "minX": 1.70326344E12, "maxY": 5240.890000000001, "series": [{"data": [[1.70326344E12, 5240.890000000001]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70326344E12, 3086.4]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70326344E12, 110.07999999999998]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70326344E12, 110.07999999999998]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70326344E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 67.30999999999999, "minX": 1.70326344E12, "maxY": 2709.21, "series": [{"data": [[1.70326344E12, 616.7300000000001]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.70326344E12, 2709.21]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.70326344E12, 67.30999999999999]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.70326344E12, 67.30999999999999]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70326344E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 59.0, "minX": 1.70326344E12, "maxY": 8062.0, "series": [{"data": [[1.70326344E12, 8062.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.70326344E12, 7074.600000000001]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.70326344E12, 8013.64]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.70326344E12, 7612.4]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.70326344E12, 59.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.70326344E12, 2957.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70326344E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 76.5, "minX": 9.0, "maxY": 10923.0, "series": [{"data": [[9.0, 1048.0], [80.0, 80.0], [20.0, 76.5], [99.0, 3112.0], [24.0, 4612.5], [26.0, 4686.5], [14.0, 2355.0], [58.0, 7615.0], [30.0, 6668.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9.0, 4394.0], [24.0, 8009.5], [26.0, 7819.0], [14.0, 5417.5], [58.0, 10923.0], [30.0, 9715.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 99.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 73.0, "minX": 9.0, "maxY": 7523.0, "series": [{"data": [[9.0, 954.0], [80.0, 80.0], [20.0, 76.5], [99.0, 3112.0], [24.0, 4466.5], [26.0, 4558.5], [14.0, 2242.0], [58.0, 7523.0], [30.0, 6541.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[9.0, 107.5], [24.0, 74.5], [26.0, 82.0], [14.0, 73.0], [58.0, 80.0], [30.0, 77.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 99.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 6.666666666666667, "minX": 1.70326344E12, "maxY": 6.666666666666667, "series": [{"data": [[1.70326344E12, 6.666666666666667]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70326344E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.70326344E12, "maxY": 3.3333333333333335, "series": [{"data": [[1.70326344E12, 3.3333333333333335]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.70326344E12, 1.6666666666666667]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.70326344E12, 1.6666666666666667]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.70326344E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.70326344E12, "maxY": 1.6666666666666667, "series": [{"data": [[1.70326344E12, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.70326344E12, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.70326344E12, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.70326344E12, 1.6666666666666667]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70326344E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 1.6666666666666667, "minX": 1.70326344E12, "maxY": 5.0, "series": [{"data": [[1.70326344E12, 5.0]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.70326344E12, 1.6666666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.70326344E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

