/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 141.0, "minX": 0.0, "maxY": 24989.0, "series": [{"data": [[0.0, 584.0], [0.1, 584.0], [0.2, 584.0], [0.3, 584.0], [0.4, 584.0], [0.5, 584.0], [0.6, 594.0], [0.7, 594.0], [0.8, 594.0], [0.9, 594.0], [1.0, 594.0], [1.1, 594.0], [1.2, 720.0], [1.3, 720.0], [1.4, 720.0], [1.5, 720.0], [1.6, 720.0], [1.7, 732.0], [1.8, 732.0], [1.9, 732.0], [2.0, 732.0], [2.1, 732.0], [2.2, 732.0], [2.3, 734.0], [2.4, 734.0], [2.5, 734.0], [2.6, 734.0], [2.7, 734.0], [2.8, 734.0], [2.9, 778.0], [3.0, 778.0], [3.1, 778.0], [3.2, 778.0], [3.3, 778.0], [3.4, 7343.0], [3.5, 7343.0], [3.6, 7343.0], [3.7, 7343.0], [3.8, 7343.0], [3.9, 7343.0], [4.0, 20999.0], [4.1, 20999.0], [4.2, 20999.0], [4.3, 20999.0], [4.4, 20999.0], [4.5, 20999.0], [4.6, 20999.0], [4.7, 20999.0], [4.8, 20999.0], [4.9, 20999.0], [5.0, 20999.0], [5.1, 20999.0], [5.2, 20999.0], [5.3, 20999.0], [5.4, 20999.0], [5.5, 20999.0], [5.6, 20999.0], [5.7, 20999.0], [5.8, 20999.0], [5.9, 20999.0], [6.0, 20999.0], [6.1, 20999.0], [6.2, 20999.0], [6.3, 20999.0], [6.4, 20999.0], [6.5, 20999.0], [6.6, 20999.0], [6.7, 20999.0], [6.8, 20999.0], [6.9, 20999.0], [7.0, 20999.0], [7.1, 20999.0], [7.2, 20999.0], [7.3, 20999.0], [7.4, 20999.0], [7.5, 20999.0], [7.6, 20999.0], [7.7, 20999.0], [7.8, 20999.0], [7.9, 20999.0], [8.0, 20999.0], [8.1, 20999.0], [8.2, 20999.0], [8.3, 20999.0], [8.4, 20999.0], [8.5, 20999.0], [8.6, 20999.0], [8.7, 20999.0], [8.8, 20999.0], [8.9, 20999.0], [9.0, 21000.0], [9.1, 21000.0], [9.2, 21000.0], [9.3, 21000.0], [9.4, 21000.0], [9.5, 21000.0], [9.6, 21000.0], [9.7, 21000.0], [9.8, 21000.0], [9.9, 21000.0], [10.0, 21000.0], [10.1, 21000.0], [10.2, 21000.0], [10.3, 21000.0], [10.4, 21000.0], [10.5, 21000.0], [10.6, 21000.0], [10.7, 21000.0], [10.8, 21000.0], [10.9, 21000.0], [11.0, 21000.0], [11.1, 21000.0], [11.2, 21000.0], [11.3, 21000.0], [11.4, 21000.0], [11.5, 21000.0], [11.6, 21000.0], [11.7, 21000.0], [11.8, 21000.0], [11.9, 21000.0], [12.0, 21000.0], [12.1, 21000.0], [12.2, 21000.0], [12.3, 21000.0], [12.4, 21000.0], [12.5, 21000.0], [12.6, 21000.0], [12.7, 21000.0], [12.8, 21000.0], [12.9, 21000.0], [13.0, 21000.0], [13.1, 21000.0], [13.2, 21000.0], [13.3, 21000.0], [13.4, 21000.0], [13.5, 21000.0], [13.6, 21000.0], [13.7, 21000.0], [13.8, 21000.0], [13.9, 21000.0], [14.0, 21000.0], [14.1, 21000.0], [14.2, 21000.0], [14.3, 21000.0], [14.4, 21000.0], [14.5, 21000.0], [14.6, 21000.0], [14.7, 21000.0], [14.8, 21000.0], [14.9, 21000.0], [15.0, 21000.0], [15.1, 21000.0], [15.2, 21000.0], [15.3, 21000.0], [15.4, 21000.0], [15.5, 21000.0], [15.6, 21000.0], [15.7, 21000.0], [15.8, 21000.0], [15.9, 21000.0], [16.0, 21000.0], [16.1, 21000.0], [16.2, 21000.0], [16.3, 21000.0], [16.4, 21000.0], [16.5, 21000.0], [16.6, 21000.0], [16.7, 21000.0], [16.8, 21000.0], [16.9, 21000.0], [17.0, 21000.0], [17.1, 21000.0], [17.2, 21000.0], [17.3, 21000.0], [17.4, 21000.0], [17.5, 21000.0], [17.6, 21000.0], [17.7, 21000.0], [17.8, 21000.0], [17.9, 21000.0], [18.0, 21000.0], [18.1, 21000.0], [18.2, 21000.0], [18.3, 21000.0], [18.4, 21000.0], [18.5, 21000.0], [18.6, 21000.0], [18.7, 21000.0], [18.8, 21000.0], [18.9, 21000.0], [19.0, 21000.0], [19.1, 21000.0], [19.2, 21000.0], [19.3, 21000.0], [19.4, 21000.0], [19.5, 21000.0], [19.6, 21000.0], [19.7, 21000.0], [19.8, 21000.0], [19.9, 21000.0], [20.0, 21000.0], [20.1, 21000.0], [20.2, 21000.0], [20.3, 21000.0], [20.4, 21000.0], [20.5, 21000.0], [20.6, 21000.0], [20.7, 21000.0], [20.8, 21000.0], [20.9, 21000.0], [21.0, 21000.0], [21.1, 21000.0], [21.2, 21000.0], [21.3, 21000.0], [21.4, 21000.0], [21.5, 21000.0], [21.6, 21000.0], [21.7, 21000.0], [21.8, 21000.0], [21.9, 21000.0], [22.0, 21000.0], [22.1, 21000.0], [22.2, 21000.0], [22.3, 21000.0], [22.4, 21000.0], [22.5, 21000.0], [22.6, 21000.0], [22.7, 21000.0], [22.8, 21000.0], [22.9, 21000.0], [23.0, 21000.0], [23.1, 21000.0], [23.2, 21000.0], [23.3, 21000.0], [23.4, 21000.0], [23.5, 21000.0], [23.6, 21000.0], [23.7, 21000.0], [23.8, 21000.0], [23.9, 21000.0], [24.0, 21000.0], [24.1, 21000.0], [24.2, 21000.0], [24.3, 21000.0], [24.4, 21000.0], [24.5, 21000.0], [24.6, 21000.0], [24.7, 21000.0], [24.8, 21000.0], [24.9, 21000.0], [25.0, 21000.0], [25.1, 21000.0], [25.2, 21000.0], [25.3, 21000.0], [25.4, 21000.0], [25.5, 21000.0], [25.6, 21000.0], [25.7, 21000.0], [25.8, 21000.0], [25.9, 21000.0], [26.0, 21000.0], [26.1, 21000.0], [26.2, 21000.0], [26.3, 21000.0], [26.4, 21000.0], [26.5, 21000.0], [26.6, 21000.0], [26.7, 21000.0], [26.8, 21000.0], [26.9, 21000.0], [27.0, 21000.0], [27.1, 21000.0], [27.2, 21000.0], [27.3, 21000.0], [27.4, 21000.0], [27.5, 21000.0], [27.6, 21000.0], [27.7, 21000.0], [27.8, 21000.0], [27.9, 21000.0], [28.0, 21000.0], [28.1, 21000.0], [28.2, 21000.0], [28.3, 21000.0], [28.4, 21000.0], [28.5, 21000.0], [28.6, 21000.0], [28.7, 21000.0], [28.8, 21000.0], [28.9, 21000.0], [29.0, 21000.0], [29.1, 21000.0], [29.2, 21000.0], [29.3, 21000.0], [29.4, 21000.0], [29.5, 21000.0], [29.6, 21000.0], [29.7, 21000.0], [29.8, 21000.0], [29.9, 21000.0], [30.0, 21000.0], [30.1, 21000.0], [30.2, 21000.0], [30.3, 21000.0], [30.4, 21000.0], [30.5, 21000.0], [30.6, 21000.0], [30.7, 21000.0], [30.8, 21000.0], [30.9, 21001.0], [31.0, 21001.0], [31.1, 21001.0], [31.2, 21001.0], [31.3, 21001.0], [31.4, 21001.0], [31.5, 21001.0], [31.6, 21001.0], [31.7, 21001.0], [31.8, 21001.0], [31.9, 21001.0], [32.0, 21001.0], [32.1, 21001.0], [32.2, 21001.0], [32.3, 21001.0], [32.4, 21001.0], [32.5, 21001.0], [32.6, 21001.0], [32.7, 21001.0], [32.8, 21001.0], [32.9, 21001.0], [33.0, 21001.0], [33.1, 21001.0], [33.2, 21001.0], [33.3, 21001.0], [33.4, 21001.0], [33.5, 21001.0], [33.6, 21001.0], [33.7, 21001.0], [33.8, 21001.0], [33.9, 21001.0], [34.0, 21001.0], [34.1, 21001.0], [34.2, 21001.0], [34.3, 21001.0], [34.4, 21001.0], [34.5, 21001.0], [34.6, 21001.0], [34.7, 21001.0], [34.8, 21001.0], [34.9, 21001.0], [35.0, 21001.0], [35.1, 21001.0], [35.2, 21001.0], [35.3, 21001.0], [35.4, 21001.0], [35.5, 21001.0], [35.6, 21001.0], [35.7, 21001.0], [35.8, 21001.0], [35.9, 21001.0], [36.0, 21001.0], [36.1, 21001.0], [36.2, 21001.0], [36.3, 21001.0], [36.4, 21001.0], [36.5, 21001.0], [36.6, 21001.0], [36.7, 21001.0], [36.8, 21001.0], [36.9, 21001.0], [37.0, 21001.0], [37.1, 21001.0], [37.2, 21001.0], [37.3, 21001.0], [37.4, 21001.0], [37.5, 21001.0], [37.6, 21001.0], [37.7, 21001.0], [37.8, 21001.0], [37.9, 21001.0], [38.0, 21001.0], [38.1, 21001.0], [38.2, 21001.0], [38.3, 21001.0], [38.4, 21001.0], [38.5, 21001.0], [38.6, 21001.0], [38.7, 21001.0], [38.8, 21001.0], [38.9, 21001.0], [39.0, 21001.0], [39.1, 21001.0], [39.2, 21001.0], [39.3, 21001.0], [39.4, 21001.0], [39.5, 21001.0], [39.6, 21001.0], [39.7, 21001.0], [39.8, 21001.0], [39.9, 21001.0], [40.0, 21001.0], [40.1, 21001.0], [40.2, 21001.0], [40.3, 21001.0], [40.4, 21001.0], [40.5, 21001.0], [40.6, 21001.0], [40.7, 21001.0], [40.8, 21001.0], [40.9, 21001.0], [41.0, 21001.0], [41.1, 21001.0], [41.2, 21001.0], [41.3, 21001.0], [41.4, 21001.0], [41.5, 21001.0], [41.6, 21001.0], [41.7, 21001.0], [41.8, 21001.0], [41.9, 21001.0], [42.0, 21001.0], [42.1, 21001.0], [42.2, 21001.0], [42.3, 21001.0], [42.4, 21001.0], [42.5, 21001.0], [42.6, 21001.0], [42.7, 21001.0], [42.8, 21001.0], [42.9, 21001.0], [43.0, 21001.0], [43.1, 21001.0], [43.2, 21001.0], [43.3, 21001.0], [43.4, 21001.0], [43.5, 21001.0], [43.6, 21001.0], [43.7, 21001.0], [43.8, 21001.0], [43.9, 21001.0], [44.0, 21001.0], [44.1, 21001.0], [44.2, 21001.0], [44.3, 21001.0], [44.4, 21001.0], [44.5, 21001.0], [44.6, 21001.0], [44.7, 21001.0], [44.8, 21001.0], [44.9, 21001.0], [45.0, 21001.0], [45.1, 21001.0], [45.2, 21001.0], [45.3, 21001.0], [45.4, 21001.0], [45.5, 21001.0], [45.6, 21001.0], [45.7, 21001.0], [45.8, 21001.0], [45.9, 21001.0], [46.0, 21001.0], [46.1, 21001.0], [46.2, 21001.0], [46.3, 21001.0], [46.4, 21001.0], [46.5, 21001.0], [46.6, 21001.0], [46.7, 21001.0], [46.8, 21001.0], [46.9, 21001.0], [47.0, 21001.0], [47.1, 21001.0], [47.2, 21002.0], [47.3, 21002.0], [47.4, 21002.0], [47.5, 21002.0], [47.6, 21002.0], [47.7, 21002.0], [47.8, 21002.0], [47.9, 21002.0], [48.0, 21002.0], [48.1, 21002.0], [48.2, 21002.0], [48.3, 21002.0], [48.4, 21002.0], [48.5, 21002.0], [48.6, 21002.0], [48.7, 21002.0], [48.8, 21002.0], [48.9, 21002.0], [49.0, 21002.0], [49.1, 21002.0], [49.2, 21002.0], [49.3, 21002.0], [49.4, 21002.0], [49.5, 21002.0], [49.6, 21002.0], [49.7, 21002.0], [49.8, 21002.0], [49.9, 21002.0], [50.0, 21002.0], [50.1, 21002.0], [50.2, 21002.0], [50.3, 21002.0], [50.4, 21002.0], [50.5, 21002.0], [50.6, 21002.0], [50.7, 21002.0], [50.8, 21002.0], [50.9, 21002.0], [51.0, 21002.0], [51.1, 21002.0], [51.2, 21002.0], [51.3, 21002.0], [51.4, 21002.0], [51.5, 21002.0], [51.6, 21002.0], [51.7, 21002.0], [51.8, 21002.0], [51.9, 21002.0], [52.0, 21002.0], [52.1, 21002.0], [52.2, 21002.0], [52.3, 21002.0], [52.4, 21002.0], [52.5, 21002.0], [52.6, 21002.0], [52.7, 21002.0], [52.8, 21002.0], [52.9, 21002.0], [53.0, 21002.0], [53.1, 21002.0], [53.2, 21002.0], [53.3, 21002.0], [53.4, 21002.0], [53.5, 21002.0], [53.6, 21002.0], [53.7, 21002.0], [53.8, 21002.0], [53.9, 21002.0], [54.0, 21002.0], [54.1, 21002.0], [54.2, 21002.0], [54.3, 21002.0], [54.4, 21002.0], [54.5, 21002.0], [54.6, 21002.0], [54.7, 21002.0], [54.8, 21002.0], [54.9, 21002.0], [55.0, 21002.0], [55.1, 21002.0], [55.2, 21002.0], [55.3, 21002.0], [55.4, 21002.0], [55.5, 21002.0], [55.6, 21002.0], [55.7, 21002.0], [55.8, 21002.0], [55.9, 21002.0], [56.0, 21002.0], [56.1, 21002.0], [56.2, 21002.0], [56.3, 21002.0], [56.4, 21002.0], [56.5, 21002.0], [56.6, 21002.0], [56.7, 21002.0], [56.8, 21002.0], [56.9, 21002.0], [57.0, 21002.0], [57.1, 21002.0], [57.2, 21002.0], [57.3, 21002.0], [57.4, 21002.0], [57.5, 21002.0], [57.6, 21002.0], [57.7, 21002.0], [57.8, 21002.0], [57.9, 21002.0], [58.0, 21002.0], [58.1, 21002.0], [58.2, 21002.0], [58.3, 21002.0], [58.4, 21002.0], [58.5, 21002.0], [58.6, 21002.0], [58.7, 21002.0], [58.8, 21002.0], [58.9, 21002.0], [59.0, 21002.0], [59.1, 21002.0], [59.2, 21002.0], [59.3, 21002.0], [59.4, 21002.0], [59.5, 21002.0], [59.6, 21002.0], [59.7, 21002.0], [59.8, 21002.0], [59.9, 21002.0], [60.0, 21002.0], [60.1, 21002.0], [60.2, 21002.0], [60.3, 21002.0], [60.4, 21002.0], [60.5, 21002.0], [60.6, 21002.0], [60.7, 21002.0], [60.8, 21002.0], [60.9, 21002.0], [61.0, 21002.0], [61.1, 21002.0], [61.2, 21002.0], [61.3, 21002.0], [61.4, 21002.0], [61.5, 21002.0], [61.6, 21002.0], [61.7, 21002.0], [61.8, 21002.0], [61.9, 21002.0], [62.0, 21002.0], [62.1, 21002.0], [62.2, 21002.0], [62.3, 21002.0], [62.4, 21002.0], [62.5, 21002.0], [62.6, 21002.0], [62.7, 21002.0], [62.8, 21002.0], [62.9, 21002.0], [63.0, 21002.0], [63.1, 21002.0], [63.2, 21002.0], [63.3, 21002.0], [63.4, 21002.0], [63.5, 21002.0], [63.6, 21002.0], [63.7, 21002.0], [63.8, 21002.0], [63.9, 21002.0], [64.0, 21002.0], [64.1, 21002.0], [64.2, 21002.0], [64.3, 21002.0], [64.4, 21002.0], [64.5, 21002.0], [64.6, 21002.0], [64.7, 21002.0], [64.8, 21002.0], [64.9, 21002.0], [65.0, 21002.0], [65.1, 21002.0], [65.2, 21002.0], [65.3, 21002.0], [65.4, 21002.0], [65.5, 21002.0], [65.6, 21002.0], [65.7, 21002.0], [65.8, 21002.0], [65.9, 21002.0], [66.0, 21002.0], [66.1, 21002.0], [66.2, 21002.0], [66.3, 21002.0], [66.4, 21002.0], [66.5, 21002.0], [66.6, 21002.0], [66.7, 21002.0], [66.8, 21002.0], [66.9, 21002.0], [67.0, 21002.0], [67.1, 21002.0], [67.2, 21002.0], [67.3, 21002.0], [67.4, 21002.0], [67.5, 21002.0], [67.6, 21002.0], [67.7, 21002.0], [67.8, 21002.0], [67.9, 21002.0], [68.0, 21002.0], [68.1, 21002.0], [68.2, 21002.0], [68.3, 21002.0], [68.4, 21002.0], [68.5, 21002.0], [68.6, 21002.0], [68.7, 21002.0], [68.8, 21002.0], [68.9, 21002.0], [69.0, 21002.0], [69.1, 21002.0], [69.2, 21002.0], [69.3, 21002.0], [69.4, 21002.0], [69.5, 21002.0], [69.6, 21002.0], [69.7, 21002.0], [69.8, 21002.0], [69.9, 21002.0], [70.0, 21002.0], [70.1, 21002.0], [70.2, 21002.0], [70.3, 21003.0], [70.4, 21003.0], [70.5, 21003.0], [70.6, 21003.0], [70.7, 21003.0], [70.8, 21003.0], [70.9, 21003.0], [71.0, 21003.0], [71.1, 21003.0], [71.2, 21003.0], [71.3, 21003.0], [71.4, 21003.0], [71.5, 21003.0], [71.6, 21003.0], [71.7, 21003.0], [71.8, 21003.0], [71.9, 21003.0], [72.0, 21003.0], [72.1, 21003.0], [72.2, 21003.0], [72.3, 21003.0], [72.4, 21003.0], [72.5, 21003.0], [72.6, 21003.0], [72.7, 21003.0], [72.8, 21003.0], [72.9, 21003.0], [73.0, 21003.0], [73.1, 21003.0], [73.2, 21003.0], [73.3, 21003.0], [73.4, 21003.0], [73.5, 21003.0], [73.6, 21003.0], [73.7, 21003.0], [73.8, 21003.0], [73.9, 21003.0], [74.0, 21003.0], [74.1, 21003.0], [74.2, 21003.0], [74.3, 21003.0], [74.4, 21003.0], [74.5, 21003.0], [74.6, 21003.0], [74.7, 21003.0], [74.8, 21003.0], [74.9, 21003.0], [75.0, 21003.0], [75.1, 21003.0], [75.2, 21003.0], [75.3, 21003.0], [75.4, 21003.0], [75.5, 21003.0], [75.6, 21003.0], [75.7, 21003.0], [75.8, 21003.0], [75.9, 21003.0], [76.0, 21003.0], [76.1, 21003.0], [76.2, 21003.0], [76.3, 21003.0], [76.4, 21003.0], [76.5, 21003.0], [76.6, 21003.0], [76.7, 21003.0], [76.8, 21003.0], [76.9, 21003.0], [77.0, 21003.0], [77.1, 21003.0], [77.2, 21003.0], [77.3, 21003.0], [77.4, 21003.0], [77.5, 21003.0], [77.6, 21003.0], [77.7, 21003.0], [77.8, 21003.0], [77.9, 21003.0], [78.0, 21003.0], [78.1, 21003.0], [78.2, 21003.0], [78.3, 21003.0], [78.4, 21003.0], [78.5, 21003.0], [78.6, 21003.0], [78.7, 21003.0], [78.8, 21003.0], [78.9, 21003.0], [79.0, 21003.0], [79.1, 21003.0], [79.2, 21003.0], [79.3, 21003.0], [79.4, 21003.0], [79.5, 21003.0], [79.6, 21003.0], [79.7, 21003.0], [79.8, 21003.0], [79.9, 21003.0], [80.0, 21003.0], [80.1, 21003.0], [80.2, 21003.0], [80.3, 21003.0], [80.4, 21003.0], [80.5, 21003.0], [80.6, 21003.0], [80.7, 21003.0], [80.8, 21003.0], [80.9, 21003.0], [81.0, 21003.0], [81.1, 21003.0], [81.2, 21003.0], [81.3, 21003.0], [81.4, 21003.0], [81.5, 21003.0], [81.6, 21003.0], [81.7, 21003.0], [81.8, 21003.0], [81.9, 21003.0], [82.0, 21003.0], [82.1, 21003.0], [82.2, 21003.0], [82.3, 21003.0], [82.4, 21003.0], [82.5, 21003.0], [82.6, 21003.0], [82.7, 21003.0], [82.8, 21003.0], [82.9, 21003.0], [83.0, 21003.0], [83.1, 21003.0], [83.2, 21003.0], [83.3, 21003.0], [83.4, 21003.0], [83.5, 21003.0], [83.6, 21003.0], [83.7, 21003.0], [83.8, 21004.0], [83.9, 21004.0], [84.0, 21004.0], [84.1, 21004.0], [84.2, 21004.0], [84.3, 21004.0], [84.4, 21004.0], [84.5, 21004.0], [84.6, 21004.0], [84.7, 21004.0], [84.8, 21004.0], [84.9, 21004.0], [85.0, 21004.0], [85.1, 21004.0], [85.2, 21004.0], [85.3, 21004.0], [85.4, 21004.0], [85.5, 21004.0], [85.6, 21004.0], [85.7, 21004.0], [85.8, 21004.0], [85.9, 21004.0], [86.0, 21004.0], [86.1, 21004.0], [86.2, 21004.0], [86.3, 21004.0], [86.4, 21004.0], [86.5, 21004.0], [86.6, 21004.0], [86.7, 21004.0], [86.8, 21004.0], [86.9, 21004.0], [87.0, 21004.0], [87.1, 21004.0], [87.2, 21004.0], [87.3, 21004.0], [87.4, 21004.0], [87.5, 21004.0], [87.6, 21004.0], [87.7, 21004.0], [87.8, 21004.0], [87.9, 21004.0], [88.0, 21004.0], [88.1, 21004.0], [88.2, 21004.0], [88.3, 21004.0], [88.4, 21004.0], [88.5, 21004.0], [88.6, 21004.0], [88.7, 21004.0], [88.8, 21004.0], [88.9, 21004.0], [89.0, 21004.0], [89.1, 21004.0], [89.2, 21004.0], [89.3, 21004.0], [89.4, 21004.0], [89.5, 21004.0], [89.6, 21004.0], [89.7, 21004.0], [89.8, 21004.0], [89.9, 21004.0], [90.0, 21004.0], [90.1, 21004.0], [90.2, 21004.0], [90.3, 21004.0], [90.4, 21004.0], [90.5, 21005.0], [90.6, 21005.0], [90.7, 21005.0], [90.8, 21005.0], [90.9, 21005.0], [91.0, 21005.0], [91.1, 21005.0], [91.2, 21005.0], [91.3, 21005.0], [91.4, 21005.0], [91.5, 21005.0], [91.6, 21005.0], [91.7, 21005.0], [91.8, 21005.0], [91.9, 21005.0], [92.0, 21005.0], [92.1, 21005.0], [92.2, 21005.0], [92.3, 21005.0], [92.4, 21005.0], [92.5, 21005.0], [92.6, 21005.0], [92.7, 21006.0], [92.8, 21006.0], [92.9, 21006.0], [93.0, 21006.0], [93.1, 21006.0], [93.2, 21006.0], [93.3, 21010.0], [93.4, 21010.0], [93.5, 21010.0], [93.6, 21010.0], [93.7, 21010.0], [93.8, 21010.0], [93.9, 21011.0], [94.0, 21011.0], [94.1, 21011.0], [94.2, 21011.0], [94.3, 21011.0], [94.4, 21012.0], [94.5, 21012.0], [94.6, 21012.0], [94.7, 21012.0], [94.8, 21012.0], [94.9, 21012.0], [95.0, 21012.0], [95.1, 21012.0], [95.2, 21012.0], [95.3, 21012.0], [95.4, 21012.0], [95.5, 21012.0], [95.6, 21013.0], [95.7, 21013.0], [95.8, 21013.0], [95.9, 21013.0], [96.0, 21013.0], [96.1, 21014.0], [96.2, 21014.0], [96.3, 21014.0], [96.4, 21014.0], [96.5, 21014.0], [96.6, 21014.0], [96.7, 21015.0], [96.8, 21015.0], [96.9, 21015.0], [97.0, 21015.0], [97.1, 21015.0], [97.2, 21018.0], [97.3, 21018.0], [97.4, 21018.0], [97.5, 21018.0], [97.6, 21018.0], [97.7, 21018.0], [97.8, 21019.0], [97.9, 21019.0], [98.0, 21019.0], [98.1, 21019.0], [98.2, 21019.0], [98.3, 21019.0], [98.4, 21020.0], [98.5, 21020.0], [98.6, 21020.0], [98.7, 21020.0], [98.8, 21020.0], [98.9, 21021.0], [99.0, 21021.0], [99.1, 21021.0], [99.2, 21021.0], [99.3, 21021.0], [99.4, 21021.0], [99.5, 21031.0], [99.6, 21031.0], [99.7, 21031.0], [99.8, 21031.0], [99.9, 21031.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[0.0, 2932.0], [0.1, 2932.0], [0.2, 3076.0], [0.3, 3077.0], [0.4, 3110.0], [0.5, 3110.0], [0.6, 3111.0], [0.7, 3123.0], [0.8, 3126.0], [0.9, 3126.0], [1.0, 3127.0], [1.1, 3134.0], [1.2, 3143.0], [1.3, 3143.0], [1.4, 3155.0], [1.5, 3157.0], [1.6, 3160.0], [1.7, 3160.0], [1.8, 3163.0], [1.9, 3165.0], [2.0, 3166.0], [2.1, 3166.0], [2.2, 3169.0], [2.3, 3171.0], [2.4, 3173.0], [2.5, 3173.0], [2.6, 3175.0], [2.7, 3180.0], [2.8, 3181.0], [2.9, 3181.0], [3.0, 3182.0], [3.1, 3192.0], [3.2, 3192.0], [3.3, 3192.0], [3.4, 3197.0], [3.5, 3200.0], [3.6, 3200.0], [3.7, 3200.0], [3.8, 3224.0], [3.9, 3226.0], [4.0, 3227.0], [4.1, 3227.0], [4.2, 3230.0], [4.3, 3233.0], [4.4, 3237.0], [4.5, 3237.0], [4.6, 3243.0], [4.7, 3253.0], [4.8, 3258.0], [4.9, 3258.0], [5.0, 3264.0], [5.1, 3264.0], [5.2, 3265.0], [5.3, 3265.0], [5.4, 3268.0], [5.5, 3268.0], [5.6, 3269.0], [5.7, 3269.0], [5.8, 3282.0], [5.9, 3284.0], [6.0, 3292.0], [6.1, 3292.0], [6.2, 3298.0], [6.3, 3306.0], [6.4, 3308.0], [6.5, 3308.0], [6.6, 3313.0], [6.7, 3316.0], [6.8, 3319.0], [6.9, 3319.0], [7.0, 3321.0], [7.1, 3322.0], [7.2, 3323.0], [7.3, 3323.0], [7.4, 3324.0], [7.5, 3327.0], [7.6, 3327.0], [7.7, 3327.0], [7.8, 3328.0], [7.9, 3328.0], [8.0, 3329.0], [8.1, 3329.0], [8.2, 3331.0], [8.3, 3333.0], [8.4, 3334.0], [8.5, 3335.0], [8.6, 3335.0], [8.7, 3342.0], [8.8, 3347.0], [8.9, 3347.0], [9.0, 3347.0], [9.1, 3349.0], [9.2, 3350.0], [9.3, 3354.0], [9.4, 3354.0], [9.5, 3355.0], [9.6, 3355.0], [9.7, 3355.0], [9.8, 3355.0], [9.9, 3355.0], [10.0, 3356.0], [10.1, 3357.0], [10.2, 3357.0], [10.3, 3368.0], [10.4, 3369.0], [10.5, 3369.0], [10.6, 3369.0], [10.7, 3369.0], [10.8, 3371.0], [10.9, 3373.0], [11.0, 3373.0], [11.1, 3374.0], [11.2, 3376.0], [11.3, 3377.0], [11.4, 3377.0], [11.5, 3378.0], [11.6, 3378.0], [11.7, 3379.0], [11.8, 3379.0], [11.9, 3380.0], [12.0, 3381.0], [12.1, 3384.0], [12.2, 3384.0], [12.3, 3387.0], [12.4, 3388.0], [12.5, 3390.0], [12.6, 3390.0], [12.7, 3391.0], [12.8, 3392.0], [12.9, 3398.0], [13.0, 3398.0], [13.1, 3405.0], [13.2, 3410.0], [13.3, 3411.0], [13.4, 3411.0], [13.5, 3412.0], [13.6, 3413.0], [13.7, 3414.0], [13.8, 3414.0], [13.9, 3414.0], [14.0, 3414.0], [14.1, 3415.0], [14.2, 3415.0], [14.3, 3417.0], [14.4, 3419.0], [14.5, 3421.0], [14.6, 3421.0], [14.7, 3421.0], [14.8, 3422.0], [14.9, 3424.0], [15.0, 3424.0], [15.1, 3425.0], [15.2, 3427.0], [15.3, 3428.0], [15.4, 3428.0], [15.5, 3428.0], [15.6, 3428.0], [15.7, 3428.0], [15.8, 3428.0], [15.9, 3429.0], [16.0, 3434.0], [16.1, 3434.0], [16.2, 3434.0], [16.3, 3435.0], [16.4, 3437.0], [16.5, 3439.0], [16.6, 3439.0], [16.7, 3442.0], [16.8, 3447.0], [16.9, 3450.0], [17.0, 3450.0], [17.1, 3450.0], [17.2, 3452.0], [17.3, 3453.0], [17.4, 3454.0], [17.5, 3454.0], [17.6, 3460.0], [17.7, 3461.0], [17.8, 3461.0], [17.9, 3461.0], [18.0, 3472.0], [18.1, 3476.0], [18.2, 3479.0], [18.3, 3479.0], [18.4, 3482.0], [18.5, 3484.0], [18.6, 3500.0], [18.7, 3500.0], [18.8, 3500.0], [18.9, 3506.0], [19.0, 3507.0], [19.1, 3507.0], [19.2, 3517.0], [19.3, 3520.0], [19.4, 3523.0], [19.5, 3523.0], [19.6, 3536.0], [19.7, 3536.0], [19.8, 3545.0], [19.9, 3545.0], [20.0, 3548.0], [20.1, 3552.0], [20.2, 3553.0], [20.3, 3553.0], [20.4, 3568.0], [20.5, 3586.0], [20.6, 3590.0], [20.7, 3590.0], [20.8, 3592.0], [20.9, 3625.0], [21.0, 3634.0], [21.1, 3634.0], [21.2, 3634.0], [21.3, 3636.0], [21.4, 3642.0], [21.5, 3642.0], [21.6, 3644.0], [21.7, 3649.0], [21.8, 3649.0], [21.9, 3649.0], [22.0, 3671.0], [22.1, 3672.0], [22.2, 3680.0], [22.3, 3680.0], [22.4, 3680.0], [22.5, 3710.0], [22.6, 3711.0], [22.7, 3711.0], [22.8, 7131.0], [22.9, 7136.0], [23.0, 7153.0], [23.1, 7153.0], [23.2, 7163.0], [23.3, 7183.0], [23.4, 7185.0], [23.5, 7185.0], [23.6, 15115.0], [23.7, 21000.0], [23.8, 21000.0], [23.9, 21000.0], [24.0, 21000.0], [24.1, 21000.0], [24.2, 21000.0], [24.3, 21000.0], [24.4, 21000.0], [24.5, 21000.0], [24.6, 21000.0], [24.7, 21000.0], [24.8, 21000.0], [24.9, 21000.0], [25.0, 21000.0], [25.1, 21000.0], [25.2, 21000.0], [25.3, 21000.0], [25.4, 21000.0], [25.5, 21000.0], [25.6, 21000.0], [25.7, 21000.0], [25.8, 21000.0], [25.9, 21000.0], [26.0, 21000.0], [26.1, 21000.0], [26.2, 21000.0], [26.3, 21000.0], [26.4, 21000.0], [26.5, 21000.0], [26.6, 21000.0], [26.7, 21000.0], [26.8, 21000.0], [26.9, 21000.0], [27.0, 21000.0], [27.1, 21000.0], [27.2, 21000.0], [27.3, 21000.0], [27.4, 21000.0], [27.5, 21000.0], [27.6, 21000.0], [27.7, 21000.0], [27.8, 21000.0], [27.9, 21000.0], [28.0, 21000.0], [28.1, 21000.0], [28.2, 21000.0], [28.3, 21000.0], [28.4, 21000.0], [28.5, 21000.0], [28.6, 21000.0], [28.7, 21000.0], [28.8, 21000.0], [28.9, 21000.0], [29.0, 21000.0], [29.1, 21000.0], [29.2, 21000.0], [29.3, 21000.0], [29.4, 21000.0], [29.5, 21000.0], [29.6, 21000.0], [29.7, 21000.0], [29.8, 21000.0], [29.9, 21000.0], [30.0, 21000.0], [30.1, 21000.0], [30.2, 21000.0], [30.3, 21000.0], [30.4, 21000.0], [30.5, 21000.0], [30.6, 21000.0], [30.7, 21000.0], [30.8, 21000.0], [30.9, 21000.0], [31.0, 21000.0], [31.1, 21000.0], [31.2, 21000.0], [31.3, 21000.0], [31.4, 21000.0], [31.5, 21000.0], [31.6, 21000.0], [31.7, 21000.0], [31.8, 21000.0], [31.9, 21000.0], [32.0, 21000.0], [32.1, 21000.0], [32.2, 21000.0], [32.3, 21000.0], [32.4, 21000.0], [32.5, 21000.0], [32.6, 21000.0], [32.7, 21000.0], [32.8, 21000.0], [32.9, 21000.0], [33.0, 21000.0], [33.1, 21000.0], [33.2, 21000.0], [33.3, 21000.0], [33.4, 21000.0], [33.5, 21000.0], [33.6, 21000.0], [33.7, 21000.0], [33.8, 21000.0], [33.9, 21000.0], [34.0, 21000.0], [34.1, 21000.0], [34.2, 21000.0], [34.3, 21000.0], [34.4, 21000.0], [34.5, 21000.0], [34.6, 21000.0], [34.7, 21000.0], [34.8, 21000.0], [34.9, 21000.0], [35.0, 21000.0], [35.1, 21000.0], [35.2, 21000.0], [35.3, 21000.0], [35.4, 21000.0], [35.5, 21000.0], [35.6, 21000.0], [35.7, 21000.0], [35.8, 21000.0], [35.9, 21000.0], [36.0, 21000.0], [36.1, 21000.0], [36.2, 21000.0], [36.3, 21000.0], [36.4, 21000.0], [36.5, 21000.0], [36.6, 21000.0], [36.7, 21000.0], [36.8, 21000.0], [36.9, 21000.0], [37.0, 21000.0], [37.1, 21000.0], [37.2, 21000.0], [37.3, 21000.0], [37.4, 21000.0], [37.5, 21000.0], [37.6, 21000.0], [37.7, 21000.0], [37.8, 21000.0], [37.9, 21000.0], [38.0, 21000.0], [38.1, 21000.0], [38.2, 21000.0], [38.3, 21000.0], [38.4, 21000.0], [38.5, 21000.0], [38.6, 21000.0], [38.7, 21000.0], [38.8, 21000.0], [38.9, 21000.0], [39.0, 21000.0], [39.1, 21000.0], [39.2, 21000.0], [39.3, 21000.0], [39.4, 21000.0], [39.5, 21000.0], [39.6, 21000.0], [39.7, 21000.0], [39.8, 21000.0], [39.9, 21000.0], [40.0, 21000.0], [40.1, 21000.0], [40.2, 21000.0], [40.3, 21000.0], [40.4, 21000.0], [40.5, 21000.0], [40.6, 21000.0], [40.7, 21000.0], [40.8, 21000.0], [40.9, 21000.0], [41.0, 21000.0], [41.1, 21000.0], [41.2, 21000.0], [41.3, 21000.0], [41.4, 21000.0], [41.5, 21000.0], [41.6, 21000.0], [41.7, 21000.0], [41.8, 21000.0], [41.9, 21000.0], [42.0, 21000.0], [42.1, 21000.0], [42.2, 21000.0], [42.3, 21000.0], [42.4, 21000.0], [42.5, 21000.0], [42.6, 21000.0], [42.7, 21000.0], [42.8, 21000.0], [42.9, 21000.0], [43.0, 21000.0], [43.1, 21000.0], [43.2, 21000.0], [43.3, 21000.0], [43.4, 21000.0], [43.5, 21000.0], [43.6, 21000.0], [43.7, 21000.0], [43.8, 21000.0], [43.9, 21000.0], [44.0, 21000.0], [44.1, 21000.0], [44.2, 21000.0], [44.3, 21001.0], [44.4, 21001.0], [44.5, 21001.0], [44.6, 21001.0], [44.7, 21001.0], [44.8, 21001.0], [44.9, 21001.0], [45.0, 21001.0], [45.1, 21001.0], [45.2, 21001.0], [45.3, 21001.0], [45.4, 21001.0], [45.5, 21001.0], [45.6, 21001.0], [45.7, 21001.0], [45.8, 21001.0], [45.9, 21001.0], [46.0, 21001.0], [46.1, 21001.0], [46.2, 21001.0], [46.3, 21001.0], [46.4, 21001.0], [46.5, 21001.0], [46.6, 21001.0], [46.7, 21001.0], [46.8, 21001.0], [46.9, 21001.0], [47.0, 21001.0], [47.1, 21001.0], [47.2, 21001.0], [47.3, 21001.0], [47.4, 21001.0], [47.5, 21001.0], [47.6, 21001.0], [47.7, 21001.0], [47.8, 21001.0], [47.9, 21001.0], [48.0, 21001.0], [48.1, 21001.0], [48.2, 21001.0], [48.3, 21001.0], [48.4, 21001.0], [48.5, 21001.0], [48.6, 21001.0], [48.7, 21001.0], [48.8, 21001.0], [48.9, 21001.0], [49.0, 21001.0], [49.1, 21001.0], [49.2, 21001.0], [49.3, 21001.0], [49.4, 21001.0], [49.5, 21001.0], [49.6, 21001.0], [49.7, 21001.0], [49.8, 21001.0], [49.9, 21001.0], [50.0, 21001.0], [50.1, 21001.0], [50.2, 21001.0], [50.3, 21001.0], [50.4, 21001.0], [50.5, 21001.0], [50.6, 21001.0], [50.7, 21001.0], [50.8, 21001.0], [50.9, 21001.0], [51.0, 21001.0], [51.1, 21001.0], [51.2, 21001.0], [51.3, 21001.0], [51.4, 21001.0], [51.5, 21001.0], [51.6, 21001.0], [51.7, 21001.0], [51.8, 21001.0], [51.9, 21001.0], [52.0, 21001.0], [52.1, 21001.0], [52.2, 21001.0], [52.3, 21001.0], [52.4, 21001.0], [52.5, 21001.0], [52.6, 21001.0], [52.7, 21001.0], [52.8, 21001.0], [52.9, 21001.0], [53.0, 21001.0], [53.1, 21001.0], [53.2, 21001.0], [53.3, 21001.0], [53.4, 21001.0], [53.5, 21001.0], [53.6, 21001.0], [53.7, 21001.0], [53.8, 21001.0], [53.9, 21001.0], [54.0, 21001.0], [54.1, 21001.0], [54.2, 21001.0], [54.3, 21001.0], [54.4, 21001.0], [54.5, 21001.0], [54.6, 21001.0], [54.7, 21001.0], [54.8, 21001.0], [54.9, 21001.0], [55.0, 21001.0], [55.1, 21001.0], [55.2, 21001.0], [55.3, 21001.0], [55.4, 21001.0], [55.5, 21001.0], [55.6, 21001.0], [55.7, 21001.0], [55.8, 21001.0], [55.9, 21001.0], [56.0, 21001.0], [56.1, 21001.0], [56.2, 21001.0], [56.3, 21001.0], [56.4, 21001.0], [56.5, 21001.0], [56.6, 21001.0], [56.7, 21001.0], [56.8, 21001.0], [56.9, 21001.0], [57.0, 21001.0], [57.1, 21001.0], [57.2, 21001.0], [57.3, 21001.0], [57.4, 21001.0], [57.5, 21001.0], [57.6, 21001.0], [57.7, 21001.0], [57.8, 21001.0], [57.9, 21001.0], [58.0, 21001.0], [58.1, 21001.0], [58.2, 21001.0], [58.3, 21001.0], [58.4, 21001.0], [58.5, 21001.0], [58.6, 21001.0], [58.7, 21001.0], [58.8, 21001.0], [58.9, 21001.0], [59.0, 21001.0], [59.1, 21001.0], [59.2, 21001.0], [59.3, 21001.0], [59.4, 21001.0], [59.5, 21001.0], [59.6, 21001.0], [59.7, 21001.0], [59.8, 21001.0], [59.9, 21001.0], [60.0, 21001.0], [60.1, 21001.0], [60.2, 21001.0], [60.3, 21001.0], [60.4, 21001.0], [60.5, 21001.0], [60.6, 21001.0], [60.7, 21001.0], [60.8, 21001.0], [60.9, 21001.0], [61.0, 21001.0], [61.1, 21001.0], [61.2, 21001.0], [61.3, 21001.0], [61.4, 21001.0], [61.5, 21001.0], [61.6, 21001.0], [61.7, 21001.0], [61.8, 21001.0], [61.9, 21001.0], [62.0, 21001.0], [62.1, 21001.0], [62.2, 21001.0], [62.3, 21001.0], [62.4, 21001.0], [62.5, 21001.0], [62.6, 21001.0], [62.7, 21001.0], [62.8, 21001.0], [62.9, 21001.0], [63.0, 21001.0], [63.1, 21001.0], [63.2, 21001.0], [63.3, 21001.0], [63.4, 21001.0], [63.5, 21001.0], [63.6, 21001.0], [63.7, 21001.0], [63.8, 21001.0], [63.9, 21001.0], [64.0, 21001.0], [64.1, 21001.0], [64.2, 21001.0], [64.3, 21001.0], [64.4, 21001.0], [64.5, 21001.0], [64.6, 21001.0], [64.7, 21001.0], [64.8, 21001.0], [64.9, 21001.0], [65.0, 21001.0], [65.1, 21001.0], [65.2, 21001.0], [65.3, 21001.0], [65.4, 21001.0], [65.5, 21001.0], [65.6, 21001.0], [65.7, 21001.0], [65.8, 21001.0], [65.9, 21001.0], [66.0, 21001.0], [66.1, 21001.0], [66.2, 21001.0], [66.3, 21001.0], [66.4, 21001.0], [66.5, 21001.0], [66.6, 21001.0], [66.7, 21001.0], [66.8, 21001.0], [66.9, 21001.0], [67.0, 21001.0], [67.1, 21001.0], [67.2, 21001.0], [67.3, 21001.0], [67.4, 21001.0], [67.5, 21002.0], [67.6, 21002.0], [67.7, 21002.0], [67.8, 21002.0], [67.9, 21002.0], [68.0, 21002.0], [68.1, 21002.0], [68.2, 21002.0], [68.3, 21002.0], [68.4, 21002.0], [68.5, 21002.0], [68.6, 21002.0], [68.7, 21002.0], [68.8, 21002.0], [68.9, 21002.0], [69.0, 21002.0], [69.1, 21002.0], [69.2, 21002.0], [69.3, 21002.0], [69.4, 21002.0], [69.5, 21002.0], [69.6, 21002.0], [69.7, 21002.0], [69.8, 21002.0], [69.9, 21002.0], [70.0, 21002.0], [70.1, 21002.0], [70.2, 21002.0], [70.3, 21002.0], [70.4, 21002.0], [70.5, 21002.0], [70.6, 21002.0], [70.7, 21002.0], [70.8, 21002.0], [70.9, 21002.0], [71.0, 21002.0], [71.1, 21002.0], [71.2, 21002.0], [71.3, 21002.0], [71.4, 21002.0], [71.5, 21002.0], [71.6, 21002.0], [71.7, 21002.0], [71.8, 21002.0], [71.9, 21002.0], [72.0, 21002.0], [72.1, 21002.0], [72.2, 21002.0], [72.3, 21002.0], [72.4, 21002.0], [72.5, 21002.0], [72.6, 21002.0], [72.7, 21002.0], [72.8, 21002.0], [72.9, 21002.0], [73.0, 21002.0], [73.1, 21002.0], [73.2, 21002.0], [73.3, 21002.0], [73.4, 21002.0], [73.5, 21002.0], [73.6, 21002.0], [73.7, 21002.0], [73.8, 21002.0], [73.9, 21002.0], [74.0, 21002.0], [74.1, 21002.0], [74.2, 21002.0], [74.3, 21002.0], [74.4, 21002.0], [74.5, 21002.0], [74.6, 21002.0], [74.7, 21002.0], [74.8, 21002.0], [74.9, 21002.0], [75.0, 21002.0], [75.1, 21002.0], [75.2, 21002.0], [75.3, 21002.0], [75.4, 21002.0], [75.5, 21002.0], [75.6, 21002.0], [75.7, 21002.0], [75.8, 21002.0], [75.9, 21002.0], [76.0, 21002.0], [76.1, 21002.0], [76.2, 21002.0], [76.3, 21002.0], [76.4, 21002.0], [76.5, 21002.0], [76.6, 21002.0], [76.7, 21002.0], [76.8, 21002.0], [76.9, 21002.0], [77.0, 21002.0], [77.1, 21002.0], [77.2, 21002.0], [77.3, 21002.0], [77.4, 21002.0], [77.5, 21002.0], [77.6, 21002.0], [77.7, 21002.0], [77.8, 21002.0], [77.9, 21002.0], [78.0, 21002.0], [78.1, 21002.0], [78.2, 21002.0], [78.3, 21002.0], [78.4, 21002.0], [78.5, 21002.0], [78.6, 21002.0], [78.7, 21002.0], [78.8, 21002.0], [78.9, 21002.0], [79.0, 21002.0], [79.1, 21002.0], [79.2, 21002.0], [79.3, 21002.0], [79.4, 21002.0], [79.5, 21002.0], [79.6, 21002.0], [79.7, 21002.0], [79.8, 21002.0], [79.9, 21003.0], [80.0, 21003.0], [80.1, 21003.0], [80.2, 21003.0], [80.3, 21003.0], [80.4, 21003.0], [80.5, 21003.0], [80.6, 21003.0], [80.7, 21003.0], [80.8, 21003.0], [80.9, 21003.0], [81.0, 21003.0], [81.1, 21003.0], [81.2, 21003.0], [81.3, 21003.0], [81.4, 21003.0], [81.5, 21003.0], [81.6, 21003.0], [81.7, 21003.0], [81.8, 21003.0], [81.9, 21003.0], [82.0, 21003.0], [82.1, 21003.0], [82.2, 21003.0], [82.3, 21003.0], [82.4, 21003.0], [82.5, 21003.0], [82.6, 21003.0], [82.7, 21003.0], [82.8, 21003.0], [82.9, 21003.0], [83.0, 21003.0], [83.1, 21003.0], [83.2, 21003.0], [83.3, 21003.0], [83.4, 21003.0], [83.5, 21003.0], [83.6, 21003.0], [83.7, 21003.0], [83.8, 21003.0], [83.9, 21003.0], [84.0, 21003.0], [84.1, 21003.0], [84.2, 21003.0], [84.3, 21003.0], [84.4, 21003.0], [84.5, 21003.0], [84.6, 21003.0], [84.7, 21003.0], [84.8, 21003.0], [84.9, 21003.0], [85.0, 21003.0], [85.1, 21003.0], [85.2, 21003.0], [85.3, 21003.0], [85.4, 21003.0], [85.5, 21003.0], [85.6, 21003.0], [85.7, 21003.0], [85.8, 21003.0], [85.9, 21003.0], [86.0, 21003.0], [86.1, 21003.0], [86.2, 21003.0], [86.3, 21003.0], [86.4, 21003.0], [86.5, 21003.0], [86.6, 21003.0], [86.7, 21003.0], [86.8, 21003.0], [86.9, 21003.0], [87.0, 21003.0], [87.1, 21003.0], [87.2, 21003.0], [87.3, 21003.0], [87.4, 21003.0], [87.5, 21003.0], [87.6, 21004.0], [87.7, 21004.0], [87.8, 21004.0], [87.9, 21004.0], [88.0, 21004.0], [88.1, 21004.0], [88.2, 21004.0], [88.3, 21004.0], [88.4, 21004.0], [88.5, 21004.0], [88.6, 21004.0], [88.7, 21004.0], [88.8, 21004.0], [88.9, 21004.0], [89.0, 21004.0], [89.1, 21004.0], [89.2, 21004.0], [89.3, 21004.0], [89.4, 21004.0], [89.5, 21004.0], [89.6, 21004.0], [89.7, 21004.0], [89.8, 21004.0], [89.9, 21004.0], [90.0, 21004.0], [90.1, 21004.0], [90.2, 21004.0], [90.3, 21004.0], [90.4, 21004.0], [90.5, 21004.0], [90.6, 21004.0], [90.7, 21004.0], [90.8, 21004.0], [90.9, 21004.0], [91.0, 21005.0], [91.1, 21005.0], [91.2, 21005.0], [91.3, 21005.0], [91.4, 21005.0], [91.5, 21005.0], [91.6, 21005.0], [91.7, 21005.0], [91.8, 21005.0], [91.9, 21005.0], [92.0, 21005.0], [92.1, 21005.0], [92.2, 21005.0], [92.3, 21005.0], [92.4, 21005.0], [92.5, 21005.0], [92.6, 21005.0], [92.7, 21006.0], [92.8, 21006.0], [92.9, 21006.0], [93.0, 21006.0], [93.1, 21006.0], [93.2, 21006.0], [93.3, 21007.0], [93.4, 21007.0], [93.5, 21007.0], [93.6, 21007.0], [93.7, 21007.0], [93.8, 21008.0], [93.9, 21008.0], [94.0, 21008.0], [94.1, 21009.0], [94.2, 21009.0], [94.3, 21010.0], [94.4, 21010.0], [94.5, 21010.0], [94.6, 21010.0], [94.7, 21010.0], [94.8, 21010.0], [94.9, 21011.0], [95.0, 21011.0], [95.1, 21011.0], [95.2, 21011.0], [95.3, 21012.0], [95.4, 21012.0], [95.5, 21014.0], [95.6, 21014.0], [95.7, 21014.0], [95.8, 21014.0], [95.9, 21014.0], [96.0, 21014.0], [96.1, 21016.0], [96.2, 21016.0], [96.3, 21017.0], [96.4, 21017.0], [96.5, 21018.0], [96.6, 21018.0], [96.7, 21019.0], [96.8, 21019.0], [96.9, 21019.0], [97.0, 21019.0], [97.1, 21020.0], [97.2, 21020.0], [97.3, 21020.0], [97.4, 21020.0], [97.5, 21021.0], [97.6, 21021.0], [97.7, 21021.0], [97.8, 21022.0], [97.9, 21022.0], [98.0, 21022.0], [98.1, 21023.0], [98.2, 21024.0], [98.3, 21025.0], [98.4, 21025.0], [98.5, 21026.0], [98.6, 21026.0], [98.7, 21026.0], [98.8, 21026.0], [98.9, 21026.0], [99.0, 21027.0], [99.1, 21027.0], [99.2, 21027.0], [99.3, 21028.0], [99.4, 21028.0], [99.5, 21028.0], [99.6, 21028.0], [99.7, 21028.0], [99.8, 21030.0], [99.9, 21043.0], [100.0, 21043.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[0.0, 141.0], [0.1, 141.0], [0.2, 146.0], [0.3, 184.0], [0.4, 187.0], [0.5, 187.0], [0.6, 191.0], [0.7, 195.0], [0.8, 197.0], [0.9, 197.0], [1.0, 197.0], [1.1, 202.0], [1.2, 203.0], [1.3, 203.0], [1.4, 207.0], [1.5, 212.0], [1.6, 242.0], [1.7, 242.0], [1.8, 245.0], [1.9, 249.0], [2.0, 252.0], [2.1, 252.0], [2.2, 253.0], [2.3, 254.0], [2.4, 255.0], [2.5, 255.0], [2.6, 260.0], [2.7, 260.0], [2.8, 263.0], [2.9, 263.0], [3.0, 264.0], [3.1, 265.0], [3.2, 268.0], [3.3, 268.0], [3.4, 269.0], [3.5, 270.0], [3.6, 270.0], [3.7, 270.0], [3.8, 271.0], [3.9, 271.0], [4.0, 275.0], [4.1, 275.0], [4.2, 277.0], [4.3, 278.0], [4.4, 279.0], [4.5, 279.0], [4.6, 279.0], [4.7, 283.0], [4.8, 283.0], [4.9, 283.0], [5.0, 288.0], [5.1, 288.0], [5.2, 289.0], [5.3, 289.0], [5.4, 291.0], [5.5, 291.0], [5.6, 297.0], [5.7, 297.0], [5.8, 304.0], [5.9, 304.0], [6.0, 305.0], [6.1, 305.0], [6.2, 305.0], [6.3, 305.0], [6.4, 307.0], [6.5, 307.0], [6.6, 309.0], [6.7, 309.0], [6.8, 312.0], [6.9, 312.0], [7.0, 312.0], [7.1, 313.0], [7.2, 313.0], [7.3, 313.0], [7.4, 313.0], [7.5, 313.0], [7.6, 313.0], [7.7, 313.0], [7.8, 314.0], [7.9, 315.0], [8.0, 317.0], [8.1, 317.0], [8.2, 318.0], [8.3, 320.0], [8.4, 320.0], [8.5, 321.0], [8.6, 321.0], [8.7, 322.0], [8.8, 322.0], [8.9, 324.0], [9.0, 324.0], [9.1, 324.0], [9.2, 326.0], [9.3, 326.0], [9.4, 326.0], [9.5, 326.0], [9.6, 326.0], [9.7, 329.0], [9.8, 329.0], [9.9, 330.0], [10.0, 332.0], [10.1, 334.0], [10.2, 334.0], [10.3, 334.0], [10.4, 335.0], [10.5, 336.0], [10.6, 336.0], [10.7, 340.0], [10.8, 341.0], [10.9, 342.0], [11.0, 342.0], [11.1, 342.0], [11.2, 342.0], [11.3, 342.0], [11.4, 342.0], [11.5, 344.0], [11.6, 349.0], [11.7, 355.0], [11.8, 355.0], [11.9, 356.0], [12.0, 357.0], [12.1, 361.0], [12.2, 361.0], [12.3, 363.0], [12.4, 366.0], [12.5, 369.0], [12.6, 369.0], [12.7, 370.0], [12.8, 376.0], [12.9, 381.0], [13.0, 381.0], [13.1, 382.0], [13.2, 383.0], [13.3, 384.0], [13.4, 384.0], [13.5, 388.0], [13.6, 390.0], [13.7, 390.0], [13.8, 390.0], [13.9, 392.0], [14.0, 396.0], [14.1, 398.0], [14.2, 398.0], [14.3, 401.0], [14.4, 403.0], [14.5, 404.0], [14.6, 404.0], [14.7, 407.0], [14.8, 410.0], [14.9, 412.0], [15.0, 412.0], [15.1, 415.0], [15.2, 424.0], [15.3, 430.0], [15.4, 430.0], [15.5, 430.0], [15.6, 431.0], [15.7, 433.0], [15.8, 433.0], [15.9, 434.0], [16.0, 438.0], [16.1, 438.0], [16.2, 438.0], [16.3, 447.0], [16.4, 447.0], [16.5, 453.0], [16.6, 453.0], [16.7, 455.0], [16.8, 455.0], [16.9, 455.0], [17.0, 458.0], [17.1, 458.0], [17.2, 459.0], [17.3, 461.0], [17.4, 462.0], [17.5, 462.0], [17.6, 463.0], [17.7, 474.0], [17.8, 474.0], [17.9, 474.0], [18.0, 475.0], [18.1, 477.0], [18.2, 478.0], [18.3, 478.0], [18.4, 479.0], [18.5, 479.0], [18.6, 486.0], [18.7, 486.0], [18.8, 487.0], [18.9, 492.0], [19.0, 493.0], [19.1, 493.0], [19.2, 495.0], [19.3, 497.0], [19.4, 498.0], [19.5, 498.0], [19.6, 500.0], [19.7, 501.0], [19.8, 507.0], [19.9, 507.0], [20.0, 507.0], [20.1, 508.0], [20.2, 509.0], [20.3, 509.0], [20.4, 510.0], [20.5, 511.0], [20.6, 512.0], [20.7, 512.0], [20.8, 517.0], [20.9, 518.0], [21.0, 524.0], [21.1, 524.0], [21.2, 528.0], [21.3, 531.0], [21.4, 533.0], [21.5, 533.0], [21.6, 536.0], [21.7, 538.0], [21.8, 542.0], [21.9, 542.0], [22.0, 546.0], [22.1, 547.0], [22.2, 553.0], [22.3, 553.0], [22.4, 553.0], [22.5, 560.0], [22.6, 561.0], [22.7, 561.0], [22.8, 562.0], [22.9, 563.0], [23.0, 565.0], [23.1, 565.0], [23.2, 565.0], [23.3, 568.0], [23.4, 570.0], [23.5, 570.0], [23.6, 573.0], [23.7, 575.0], [23.8, 577.0], [23.9, 577.0], [24.0, 577.0], [24.1, 582.0], [24.2, 586.0], [24.3, 586.0], [24.4, 592.0], [24.5, 597.0], [24.6, 598.0], [24.7, 598.0], [24.8, 601.0], [24.9, 604.0], [25.0, 605.0], [25.1, 606.0], [25.2, 606.0], [25.3, 614.0], [25.4, 616.0], [25.5, 618.0], [25.6, 618.0], [25.7, 619.0], [25.8, 620.0], [25.9, 625.0], [26.0, 625.0], [26.1, 625.0], [26.2, 625.0], [26.3, 626.0], [26.4, 626.0], [26.5, 628.0], [26.6, 629.0], [26.7, 629.0], [26.8, 629.0], [26.9, 630.0], [27.0, 631.0], [27.1, 631.0], [27.2, 631.0], [27.3, 631.0], [27.4, 632.0], [27.5, 632.0], [27.6, 632.0], [27.7, 632.0], [27.8, 633.0], [27.9, 633.0], [28.0, 633.0], [28.1, 634.0], [28.2, 634.0], [28.3, 637.0], [28.4, 637.0], [28.5, 637.0], [28.6, 641.0], [28.7, 656.0], [28.8, 656.0], [28.9, 663.0], [29.0, 667.0], [29.1, 682.0], [29.2, 682.0], [29.3, 687.0], [29.4, 689.0], [29.5, 694.0], [29.6, 694.0], [29.7, 695.0], [29.8, 696.0], [29.9, 698.0], [30.0, 698.0], [30.1, 700.0], [30.2, 701.0], [30.3, 703.0], [30.4, 703.0], [30.5, 703.0], [30.6, 705.0], [30.7, 707.0], [30.8, 707.0], [30.9, 708.0], [31.0, 711.0], [31.1, 711.0], [31.2, 711.0], [31.3, 711.0], [31.4, 712.0], [31.5, 713.0], [31.6, 713.0], [31.7, 715.0], [31.8, 715.0], [31.9, 715.0], [32.0, 715.0], [32.1, 715.0], [32.2, 715.0], [32.3, 715.0], [32.4, 715.0], [32.5, 717.0], [32.6, 718.0], [32.7, 718.0], [32.8, 718.0], [32.9, 719.0], [33.0, 719.0], [33.1, 719.0], [33.2, 719.0], [33.3, 719.0], [33.4, 720.0], [33.5, 720.0], [33.6, 721.0], [33.7, 721.0], [33.8, 721.0], [33.9, 723.0], [34.0, 723.0], [34.1, 723.0], [34.2, 723.0], [34.3, 723.0], [34.4, 724.0], [34.5, 724.0], [34.6, 724.0], [34.7, 724.0], [34.8, 724.0], [34.9, 724.0], [35.0, 724.0], [35.1, 724.0], [35.2, 724.0], [35.3, 724.0], [35.4, 725.0], [35.5, 725.0], [35.6, 725.0], [35.7, 725.0], [35.8, 726.0], [35.9, 726.0], [36.0, 726.0], [36.1, 726.0], [36.2, 727.0], [36.3, 728.0], [36.4, 728.0], [36.5, 728.0], [36.6, 728.0], [36.7, 728.0], [36.8, 728.0], [36.9, 728.0], [37.0, 728.0], [37.1, 729.0], [37.2, 729.0], [37.3, 729.0], [37.4, 729.0], [37.5, 730.0], [37.6, 730.0], [37.7, 730.0], [37.8, 730.0], [37.9, 730.0], [38.0, 730.0], [38.1, 730.0], [38.2, 730.0], [38.3, 731.0], [38.4, 731.0], [38.5, 731.0], [38.6, 731.0], [38.7, 732.0], [38.8, 732.0], [38.9, 732.0], [39.0, 732.0], [39.1, 733.0], [39.2, 733.0], [39.3, 733.0], [39.4, 733.0], [39.5, 733.0], [39.6, 733.0], [39.7, 733.0], [39.8, 734.0], [39.9, 734.0], [40.0, 734.0], [40.1, 734.0], [40.2, 734.0], [40.3, 734.0], [40.4, 734.0], [40.5, 734.0], [40.6, 735.0], [40.7, 735.0], [40.8, 736.0], [40.9, 736.0], [41.0, 736.0], [41.1, 737.0], [41.2, 738.0], [41.3, 738.0], [41.4, 738.0], [41.5, 738.0], [41.6, 738.0], [41.7, 738.0], [41.8, 738.0], [41.9, 739.0], [42.0, 739.0], [42.1, 739.0], [42.2, 739.0], [42.3, 740.0], [42.4, 740.0], [42.5, 740.0], [42.6, 740.0], [42.7, 740.0], [42.8, 740.0], [42.9, 740.0], [43.0, 740.0], [43.1, 740.0], [43.2, 740.0], [43.3, 741.0], [43.4, 741.0], [43.5, 741.0], [43.6, 741.0], [43.7, 741.0], [43.8, 741.0], [43.9, 741.0], [44.0, 741.0], [44.1, 741.0], [44.2, 741.0], [44.3, 741.0], [44.4, 741.0], [44.5, 741.0], [44.6, 741.0], [44.7, 742.0], [44.8, 742.0], [44.9, 742.0], [45.0, 742.0], [45.1, 742.0], [45.2, 742.0], [45.3, 743.0], [45.4, 743.0], [45.5, 744.0], [45.6, 744.0], [45.7, 744.0], [45.8, 744.0], [45.9, 744.0], [46.0, 744.0], [46.1, 744.0], [46.2, 744.0], [46.3, 744.0], [46.4, 744.0], [46.5, 744.0], [46.6, 744.0], [46.7, 745.0], [46.8, 746.0], [46.9, 746.0], [47.0, 746.0], [47.1, 746.0], [47.2, 746.0], [47.3, 746.0], [47.4, 746.0], [47.5, 747.0], [47.6, 747.0], [47.7, 747.0], [47.8, 747.0], [47.9, 747.0], [48.0, 747.0], [48.1, 747.0], [48.2, 747.0], [48.3, 748.0], [48.4, 748.0], [48.5, 748.0], [48.6, 748.0], [48.7, 748.0], [48.8, 748.0], [48.9, 748.0], [49.0, 748.0], [49.1, 748.0], [49.2, 748.0], [49.3, 749.0], [49.4, 749.0], [49.5, 749.0], [49.6, 749.0], [49.7, 749.0], [49.8, 749.0], [49.9, 749.0], [50.0, 750.0], [50.1, 750.0], [50.2, 750.0], [50.3, 750.0], [50.4, 750.0], [50.5, 750.0], [50.6, 751.0], [50.7, 751.0], [50.8, 751.0], [50.9, 751.0], [51.0, 751.0], [51.1, 751.0], [51.2, 751.0], [51.3, 752.0], [51.4, 752.0], [51.5, 752.0], [51.6, 752.0], [51.7, 752.0], [51.8, 752.0], [51.9, 752.0], [52.0, 753.0], [52.1, 753.0], [52.2, 753.0], [52.3, 753.0], [52.4, 753.0], [52.5, 753.0], [52.6, 753.0], [52.7, 753.0], [52.8, 754.0], [52.9, 754.0], [53.0, 754.0], [53.1, 754.0], [53.2, 754.0], [53.3, 754.0], [53.4, 754.0], [53.5, 754.0], [53.6, 754.0], [53.7, 754.0], [53.8, 755.0], [53.9, 755.0], [54.0, 755.0], [54.1, 755.0], [54.2, 755.0], [54.3, 755.0], [54.4, 756.0], [54.5, 756.0], [54.6, 756.0], [54.7, 756.0], [54.8, 756.0], [54.9, 757.0], [55.0, 758.0], [55.1, 758.0], [55.2, 758.0], [55.3, 758.0], [55.4, 758.0], [55.5, 758.0], [55.6, 759.0], [55.7, 759.0], [55.8, 760.0], [55.9, 760.0], [56.0, 760.0], [56.1, 760.0], [56.2, 762.0], [56.3, 762.0], [56.4, 763.0], [56.5, 763.0], [56.6, 763.0], [56.7, 763.0], [56.8, 764.0], [56.9, 764.0], [57.0, 764.0], [57.1, 764.0], [57.2, 764.0], [57.3, 766.0], [57.4, 767.0], [57.5, 767.0], [57.6, 767.0], [57.7, 767.0], [57.8, 767.0], [57.9, 767.0], [58.0, 767.0], [58.1, 767.0], [58.2, 768.0], [58.3, 768.0], [58.4, 768.0], [58.5, 768.0], [58.6, 768.0], [58.7, 768.0], [58.8, 768.0], [58.9, 769.0], [59.0, 769.0], [59.1, 770.0], [59.2, 770.0], [59.3, 770.0], [59.4, 770.0], [59.5, 770.0], [59.6, 770.0], [59.7, 771.0], [59.8, 771.0], [59.9, 771.0], [60.0, 771.0], [60.1, 771.0], [60.2, 771.0], [60.3, 771.0], [60.4, 771.0], [60.5, 771.0], [60.6, 772.0], [60.7, 772.0], [60.8, 772.0], [60.9, 772.0], [61.0, 772.0], [61.1, 772.0], [61.2, 772.0], [61.3, 772.0], [61.4, 773.0], [61.5, 773.0], [61.6, 773.0], [61.7, 773.0], [61.8, 773.0], [61.9, 773.0], [62.0, 773.0], [62.1, 773.0], [62.2, 773.0], [62.3, 773.0], [62.4, 773.0], [62.5, 773.0], [62.6, 773.0], [62.7, 773.0], [62.8, 773.0], [62.9, 774.0], [63.0, 774.0], [63.1, 774.0], [63.2, 774.0], [63.3, 774.0], [63.4, 774.0], [63.5, 774.0], [63.6, 774.0], [63.7, 774.0], [63.8, 774.0], [63.9, 774.0], [64.0, 774.0], [64.1, 774.0], [64.2, 774.0], [64.3, 774.0], [64.4, 774.0], [64.5, 775.0], [64.6, 775.0], [64.7, 775.0], [64.8, 775.0], [64.9, 775.0], [65.0, 775.0], [65.1, 775.0], [65.2, 775.0], [65.3, 776.0], [65.4, 776.0], [65.5, 776.0], [65.6, 776.0], [65.7, 777.0], [65.8, 777.0], [65.9, 777.0], [66.0, 777.0], [66.1, 777.0], [66.2, 777.0], [66.3, 777.0], [66.4, 777.0], [66.5, 777.0], [66.6, 778.0], [66.7, 779.0], [66.8, 779.0], [66.9, 779.0], [67.0, 779.0], [67.1, 779.0], [67.2, 779.0], [67.3, 779.0], [67.4, 779.0], [67.5, 780.0], [67.6, 780.0], [67.7, 780.0], [67.8, 780.0], [67.9, 780.0], [68.0, 780.0], [68.1, 780.0], [68.2, 780.0], [68.3, 781.0], [68.4, 781.0], [68.5, 781.0], [68.6, 781.0], [68.7, 781.0], [68.8, 781.0], [68.9, 781.0], [69.0, 781.0], [69.1, 781.0], [69.2, 782.0], [69.3, 782.0], [69.4, 782.0], [69.5, 782.0], [69.6, 782.0], [69.7, 782.0], [69.8, 782.0], [69.9, 782.0], [70.0, 782.0], [70.1, 782.0], [70.2, 783.0], [70.3, 783.0], [70.4, 783.0], [70.5, 783.0], [70.6, 783.0], [70.7, 784.0], [70.8, 784.0], [70.9, 784.0], [71.0, 784.0], [71.1, 785.0], [71.2, 785.0], [71.3, 785.0], [71.4, 786.0], [71.5, 786.0], [71.6, 786.0], [71.7, 786.0], [71.8, 786.0], [71.9, 786.0], [72.0, 786.0], [72.1, 786.0], [72.2, 787.0], [72.3, 787.0], [72.4, 788.0], [72.5, 788.0], [72.6, 788.0], [72.7, 788.0], [72.8, 788.0], [72.9, 788.0], [73.0, 788.0], [73.1, 788.0], [73.2, 788.0], [73.3, 788.0], [73.4, 788.0], [73.5, 789.0], [73.6, 789.0], [73.7, 789.0], [73.8, 789.0], [73.9, 789.0], [74.0, 789.0], [74.1, 789.0], [74.2, 789.0], [74.3, 790.0], [74.4, 790.0], [74.5, 790.0], [74.6, 790.0], [74.7, 790.0], [74.8, 790.0], [74.9, 790.0], [75.0, 791.0], [75.1, 791.0], [75.2, 791.0], [75.3, 792.0], [75.4, 792.0], [75.5, 792.0], [75.6, 792.0], [75.7, 792.0], [75.8, 792.0], [75.9, 793.0], [76.0, 793.0], [76.1, 793.0], [76.2, 793.0], [76.3, 793.0], [76.4, 793.0], [76.5, 793.0], [76.6, 793.0], [76.7, 794.0], [76.8, 794.0], [76.9, 794.0], [77.0, 794.0], [77.1, 794.0], [77.2, 794.0], [77.3, 794.0], [77.4, 794.0], [77.5, 795.0], [77.6, 795.0], [77.7, 795.0], [77.8, 795.0], [77.9, 795.0], [78.0, 796.0], [78.1, 797.0], [78.2, 797.0], [78.3, 797.0], [78.4, 797.0], [78.5, 797.0], [78.6, 797.0], [78.7, 797.0], [78.8, 798.0], [78.9, 798.0], [79.0, 798.0], [79.1, 798.0], [79.2, 798.0], [79.3, 799.0], [79.4, 799.0], [79.5, 799.0], [79.6, 800.0], [79.7, 800.0], [79.8, 800.0], [79.9, 801.0], [80.0, 801.0], [80.1, 801.0], [80.2, 801.0], [80.3, 802.0], [80.4, 802.0], [80.5, 802.0], [80.6, 802.0], [80.7, 802.0], [80.8, 802.0], [80.9, 802.0], [81.0, 802.0], [81.1, 803.0], [81.2, 803.0], [81.3, 804.0], [81.4, 804.0], [81.5, 804.0], [81.6, 806.0], [81.7, 806.0], [81.8, 806.0], [81.9, 807.0], [82.0, 807.0], [82.1, 807.0], [82.2, 807.0], [82.3, 808.0], [82.4, 808.0], [82.5, 808.0], [82.6, 808.0], [82.7, 808.0], [82.8, 808.0], [82.9, 809.0], [83.0, 809.0], [83.1, 810.0], [83.2, 810.0], [83.3, 810.0], [83.4, 811.0], [83.5, 811.0], [83.6, 811.0], [83.7, 811.0], [83.8, 811.0], [83.9, 811.0], [84.0, 811.0], [84.1, 812.0], [84.2, 812.0], [84.3, 812.0], [84.4, 812.0], [84.5, 812.0], [84.6, 812.0], [84.7, 812.0], [84.8, 812.0], [84.9, 813.0], [85.0, 813.0], [85.1, 813.0], [85.2, 813.0], [85.3, 813.0], [85.4, 814.0], [85.5, 814.0], [85.6, 814.0], [85.7, 814.0], [85.8, 814.0], [85.9, 814.0], [86.0, 814.0], [86.1, 814.0], [86.2, 815.0], [86.3, 815.0], [86.4, 815.0], [86.5, 816.0], [86.6, 816.0], [86.7, 816.0], [86.8, 816.0], [86.9, 816.0], [87.0, 817.0], [87.1, 817.0], [87.2, 818.0], [87.3, 818.0], [87.4, 818.0], [87.5, 818.0], [87.6, 818.0], [87.7, 819.0], [87.8, 819.0], [87.9, 819.0], [88.0, 820.0], [88.1, 820.0], [88.2, 820.0], [88.3, 820.0], [88.4, 821.0], [88.5, 822.0], [88.6, 822.0], [88.7, 822.0], [88.8, 822.0], [88.9, 822.0], [89.0, 822.0], [89.1, 822.0], [89.2, 822.0], [89.3, 822.0], [89.4, 823.0], [89.5, 823.0], [89.6, 823.0], [89.7, 823.0], [89.8, 824.0], [89.9, 824.0], [90.0, 824.0], [90.1, 824.0], [90.2, 824.0], [90.3, 824.0], [90.4, 825.0], [90.5, 825.0], [90.6, 826.0], [90.7, 826.0], [90.8, 827.0], [90.9, 827.0], [91.0, 827.0], [91.1, 827.0], [91.2, 827.0], [91.3, 827.0], [91.4, 828.0], [91.5, 828.0], [91.6, 828.0], [91.7, 829.0], [91.8, 829.0], [91.9, 829.0], [92.0, 829.0], [92.1, 830.0], [92.2, 830.0], [92.3, 830.0], [92.4, 830.0], [92.5, 831.0], [92.6, 832.0], [92.7, 832.0], [92.8, 832.0], [92.9, 834.0], [93.0, 834.0], [93.1, 834.0], [93.2, 834.0], [93.3, 835.0], [93.4, 835.0], [93.5, 836.0], [93.6, 836.0], [93.7, 836.0], [93.8, 839.0], [93.9, 840.0], [94.0, 840.0], [94.1, 843.0], [94.2, 843.0], [94.3, 843.0], [94.4, 843.0], [94.5, 845.0], [94.6, 847.0], [94.7, 847.0], [94.8, 847.0], [94.9, 848.0], [95.0, 849.0], [95.1, 850.0], [95.2, 850.0], [95.3, 850.0], [95.4, 851.0], [95.5, 851.0], [95.6, 851.0], [95.7, 851.0], [95.8, 855.0], [95.9, 859.0], [96.0, 859.0], [96.1, 862.0], [96.2, 862.0], [96.3, 863.0], [96.4, 863.0], [96.5, 866.0], [96.6, 869.0], [96.7, 870.0], [96.8, 870.0], [96.9, 875.0], [97.0, 879.0], [97.1, 883.0], [97.2, 883.0], [97.3, 883.0], [97.4, 885.0], [97.5, 931.0], [97.6, 931.0], [97.7, 933.0], [97.8, 936.0], [97.9, 938.0], [98.0, 938.0], [98.1, 938.0], [98.2, 940.0], [98.3, 941.0], [98.4, 941.0], [98.5, 941.0], [98.6, 942.0], [98.7, 954.0], [98.8, 954.0], [98.9, 1063.0], [99.0, 1064.0], [99.1, 1066.0], [99.2, 1066.0], [99.3, 15056.0], [99.4, 15065.0], [99.5, 15066.0], [99.6, 15066.0], [99.7, 15069.0], [99.8, 15069.0], [99.9, 15069.0], [100.0, 15069.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[0.0, 20999.0], [0.1, 20999.0], [0.2, 20999.0], [0.3, 21000.0], [0.4, 21000.0], [0.5, 21000.0], [0.6, 21000.0], [0.7, 21000.0], [0.8, 21000.0], [0.9, 21000.0], [1.0, 21000.0], [1.1, 21000.0], [1.2, 21000.0], [1.3, 21000.0], [1.4, 21000.0], [1.5, 21000.0], [1.6, 21000.0], [1.7, 21000.0], [1.8, 21000.0], [1.9, 21000.0], [2.0, 21000.0], [2.1, 21000.0], [2.2, 21000.0], [2.3, 21000.0], [2.4, 21000.0], [2.5, 21000.0], [2.6, 21000.0], [2.7, 21000.0], [2.8, 21000.0], [2.9, 21000.0], [3.0, 21000.0], [3.1, 21000.0], [3.2, 21000.0], [3.3, 21000.0], [3.4, 21000.0], [3.5, 21000.0], [3.6, 21000.0], [3.7, 21000.0], [3.8, 21000.0], [3.9, 21000.0], [4.0, 21000.0], [4.1, 21001.0], [4.2, 21001.0], [4.3, 21001.0], [4.4, 21001.0], [4.5, 21001.0], [4.6, 21001.0], [4.7, 21001.0], [4.8, 21001.0], [4.9, 21001.0], [5.0, 21001.0], [5.1, 21001.0], [5.2, 21001.0], [5.3, 21001.0], [5.4, 21001.0], [5.5, 21001.0], [5.6, 21001.0], [5.7, 21001.0], [5.8, 21001.0], [5.9, 21001.0], [6.0, 21001.0], [6.1, 21001.0], [6.2, 21001.0], [6.3, 21001.0], [6.4, 21001.0], [6.5, 21001.0], [6.6, 21001.0], [6.7, 21001.0], [6.8, 21001.0], [6.9, 21001.0], [7.0, 21001.0], [7.1, 21001.0], [7.2, 21001.0], [7.3, 21001.0], [7.4, 21001.0], [7.5, 21001.0], [7.6, 21001.0], [7.7, 21001.0], [7.8, 21001.0], [7.9, 21001.0], [8.0, 21001.0], [8.1, 21001.0], [8.2, 21001.0], [8.3, 21001.0], [8.4, 21001.0], [8.5, 21002.0], [8.6, 21002.0], [8.7, 21002.0], [8.8, 21002.0], [8.9, 21002.0], [9.0, 21002.0], [9.1, 21002.0], [9.2, 21002.0], [9.3, 21002.0], [9.4, 21002.0], [9.5, 21002.0], [9.6, 21002.0], [9.7, 21002.0], [9.8, 21002.0], [9.9, 21002.0], [10.0, 21002.0], [10.1, 21002.0], [10.2, 21002.0], [10.3, 21002.0], [10.4, 21002.0], [10.5, 21002.0], [10.6, 21002.0], [10.7, 21002.0], [10.8, 21002.0], [10.9, 21002.0], [11.0, 21002.0], [11.1, 21002.0], [11.2, 21002.0], [11.3, 21002.0], [11.4, 21003.0], [11.5, 21003.0], [11.6, 21003.0], [11.7, 21003.0], [11.8, 21003.0], [11.9, 21003.0], [12.0, 21003.0], [12.1, 21003.0], [12.2, 21003.0], [12.3, 21003.0], [12.4, 21003.0], [12.5, 21003.0], [12.6, 21003.0], [12.7, 21003.0], [12.8, 21004.0], [12.9, 21004.0], [13.0, 21004.0], [13.1, 21004.0], [13.2, 21004.0], [13.3, 21004.0], [13.4, 21004.0], [13.5, 21004.0], [13.6, 21004.0], [13.7, 21004.0], [13.8, 21004.0], [13.9, 21004.0], [14.0, 21004.0], [14.1, 21004.0], [14.2, 21005.0], [14.3, 21005.0], [14.4, 21005.0], [14.5, 21005.0], [14.6, 21005.0], [14.7, 21006.0], [14.8, 21006.0], [14.9, 21006.0], [15.0, 21006.0], [15.1, 21006.0], [15.2, 21007.0], [15.3, 21007.0], [15.4, 21007.0], [15.5, 21007.0], [15.6, 21008.0], [15.7, 21008.0], [15.8, 21008.0], [15.9, 21008.0], [16.0, 21008.0], [16.1, 21008.0], [16.2, 21008.0], [16.3, 21008.0], [16.4, 21008.0], [16.5, 21008.0], [16.6, 21008.0], [16.7, 21008.0], [16.8, 21009.0], [16.9, 21009.0], [17.0, 21009.0], [17.1, 21009.0], [17.2, 21009.0], [17.3, 21009.0], [17.4, 21009.0], [17.5, 21010.0], [17.6, 21011.0], [17.7, 21011.0], [17.8, 21011.0], [17.9, 21011.0], [18.0, 21012.0], [18.1, 21012.0], [18.2, 21012.0], [18.3, 21013.0], [18.4, 21013.0], [18.5, 21013.0], [18.6, 21013.0], [18.7, 21013.0], [18.8, 21014.0], [18.9, 21014.0], [19.0, 21014.0], [19.1, 21014.0], [19.2, 21014.0], [19.3, 21014.0], [19.4, 21015.0], [19.5, 21015.0], [19.6, 21015.0], [19.7, 21015.0], [19.8, 21015.0], [19.9, 21016.0], [20.0, 21016.0], [20.1, 21016.0], [20.2, 21017.0], [20.3, 21017.0], [20.4, 21017.0], [20.5, 21018.0], [20.6, 21019.0], [20.7, 21020.0], [20.8, 21020.0], [20.9, 21020.0], [21.0, 21020.0], [21.1, 21021.0], [21.2, 21021.0], [21.3, 21022.0], [21.4, 21022.0], [21.5, 21022.0], [21.6, 21022.0], [21.7, 21023.0], [21.8, 21024.0], [21.9, 21024.0], [22.0, 21024.0], [22.1, 21024.0], [22.2, 21024.0], [22.3, 21024.0], [22.4, 21024.0], [22.5, 21025.0], [22.6, 21025.0], [22.7, 21025.0], [22.8, 21025.0], [22.9, 21026.0], [23.0, 21026.0], [23.1, 21026.0], [23.2, 21026.0], [23.3, 21027.0], [23.4, 21027.0], [23.5, 21028.0], [23.6, 21028.0], [23.7, 21028.0], [23.8, 21029.0], [23.9, 21029.0], [24.0, 21030.0], [24.1, 21030.0], [24.2, 21030.0], [24.3, 21031.0], [24.4, 21031.0], [24.5, 21036.0], [24.6, 21044.0], [24.7, 21045.0], [24.8, 21531.0], [24.9, 21546.0], [25.0, 21548.0], [25.1, 21551.0], [25.2, 21564.0], [25.3, 21565.0], [25.4, 21567.0], [25.5, 21568.0], [25.6, 21609.0], [25.7, 21609.0], [25.8, 21616.0], [25.9, 21621.0], [26.0, 21628.0], [26.1, 21630.0], [26.2, 21631.0], [26.3, 21632.0], [26.4, 21633.0], [26.5, 21634.0], [26.6, 21636.0], [26.7, 21636.0], [26.8, 21637.0], [26.9, 21643.0], [27.0, 21644.0], [27.1, 21652.0], [27.2, 21656.0], [27.3, 21659.0], [27.4, 21659.0], [27.5, 21659.0], [27.6, 21659.0], [27.7, 21660.0], [27.8, 21661.0], [27.9, 21661.0], [28.0, 21661.0], [28.1, 21661.0], [28.2, 21662.0], [28.3, 21662.0], [28.4, 21662.0], [28.5, 21663.0], [28.6, 21664.0], [28.7, 21664.0], [28.8, 21664.0], [28.9, 21664.0], [29.0, 21665.0], [29.1, 21666.0], [29.2, 21666.0], [29.3, 21666.0], [29.4, 21667.0], [29.5, 21668.0], [29.6, 21684.0], [29.7, 21688.0], [29.8, 21690.0], [29.9, 21696.0], [30.0, 21696.0], [30.1, 21697.0], [30.2, 21699.0], [30.3, 21701.0], [30.4, 21704.0], [30.5, 21705.0], [30.6, 21705.0], [30.7, 21707.0], [30.8, 21708.0], [30.9, 21711.0], [31.0, 21712.0], [31.1, 21712.0], [31.2, 21712.0], [31.3, 21713.0], [31.4, 21714.0], [31.5, 21716.0], [31.6, 21716.0], [31.7, 21716.0], [31.8, 21717.0], [31.9, 21718.0], [32.0, 21718.0], [32.1, 21719.0], [32.2, 21719.0], [32.3, 21720.0], [32.4, 21721.0], [32.5, 21721.0], [32.6, 21721.0], [32.7, 21721.0], [32.8, 21721.0], [32.9, 21722.0], [33.0, 21722.0], [33.1, 21723.0], [33.2, 21724.0], [33.3, 21724.0], [33.4, 21724.0], [33.5, 21725.0], [33.6, 21725.0], [33.7, 21725.0], [33.8, 21725.0], [33.9, 21726.0], [34.0, 21726.0], [34.1, 21726.0], [34.2, 21726.0], [34.3, 21726.0], [34.4, 21727.0], [34.5, 21727.0], [34.6, 21727.0], [34.7, 21727.0], [34.8, 21729.0], [34.9, 21729.0], [35.0, 21729.0], [35.1, 21730.0], [35.2, 21730.0], [35.3, 21730.0], [35.4, 21730.0], [35.5, 21730.0], [35.6, 21730.0], [35.7, 21731.0], [35.8, 21731.0], [35.9, 21731.0], [36.0, 21731.0], [36.1, 21731.0], [36.2, 21731.0], [36.3, 21732.0], [36.4, 21732.0], [36.5, 21733.0], [36.6, 21733.0], [36.7, 21733.0], [36.8, 21734.0], [36.9, 21734.0], [37.0, 21734.0], [37.1, 21734.0], [37.2, 21734.0], [37.3, 21734.0], [37.4, 21734.0], [37.5, 21734.0], [37.6, 21735.0], [37.7, 21735.0], [37.8, 21735.0], [37.9, 21735.0], [38.0, 21736.0], [38.1, 21736.0], [38.2, 21737.0], [38.3, 21737.0], [38.4, 21738.0], [38.5, 21738.0], [38.6, 21739.0], [38.7, 21739.0], [38.8, 21739.0], [38.9, 21740.0], [39.0, 21740.0], [39.1, 21741.0], [39.2, 21741.0], [39.3, 21741.0], [39.4, 21741.0], [39.5, 21741.0], [39.6, 21741.0], [39.7, 21741.0], [39.8, 21741.0], [39.9, 21742.0], [40.0, 21742.0], [40.1, 21742.0], [40.2, 21742.0], [40.3, 21742.0], [40.4, 21742.0], [40.5, 21742.0], [40.6, 21743.0], [40.7, 21743.0], [40.8, 21743.0], [40.9, 21743.0], [41.0, 21743.0], [41.1, 21743.0], [41.2, 21744.0], [41.3, 21744.0], [41.4, 21744.0], [41.5, 21744.0], [41.6, 21745.0], [41.7, 21745.0], [41.8, 21745.0], [41.9, 21745.0], [42.0, 21745.0], [42.1, 21745.0], [42.2, 21746.0], [42.3, 21746.0], [42.4, 21747.0], [42.5, 21747.0], [42.6, 21747.0], [42.7, 21747.0], [42.8, 21747.0], [42.9, 21748.0], [43.0, 21748.0], [43.1, 21748.0], [43.2, 21748.0], [43.3, 21748.0], [43.4, 21748.0], [43.5, 21749.0], [43.6, 21749.0], [43.7, 21749.0], [43.8, 21749.0], [43.9, 21749.0], [44.0, 21749.0], [44.1, 21750.0], [44.2, 21750.0], [44.3, 21750.0], [44.4, 21750.0], [44.5, 21751.0], [44.6, 21751.0], [44.7, 21751.0], [44.8, 21751.0], [44.9, 21751.0], [45.0, 21751.0], [45.1, 21751.0], [45.2, 21751.0], [45.3, 21752.0], [45.4, 21752.0], [45.5, 21752.0], [45.6, 21752.0], [45.7, 21752.0], [45.8, 21753.0], [45.9, 21753.0], [46.0, 21753.0], [46.1, 21753.0], [46.2, 21753.0], [46.3, 21754.0], [46.4, 21754.0], [46.5, 21754.0], [46.6, 21754.0], [46.7, 21754.0], [46.8, 21754.0], [46.9, 21754.0], [47.0, 21755.0], [47.1, 21755.0], [47.2, 21755.0], [47.3, 21755.0], [47.4, 21756.0], [47.5, 21756.0], [47.6, 21756.0], [47.7, 21756.0], [47.8, 21756.0], [47.9, 21756.0], [48.0, 21756.0], [48.1, 21757.0], [48.2, 21757.0], [48.3, 21757.0], [48.4, 21757.0], [48.5, 21757.0], [48.6, 21758.0], [48.7, 21758.0], [48.8, 21759.0], [48.9, 21759.0], [49.0, 21759.0], [49.1, 21759.0], [49.2, 21759.0], [49.3, 21759.0], [49.4, 21760.0], [49.5, 21760.0], [49.6, 21761.0], [49.7, 21762.0], [49.8, 21762.0], [49.9, 21764.0], [50.0, 21766.0], [50.1, 21767.0], [50.2, 21767.0], [50.3, 21768.0], [50.4, 21768.0], [50.5, 21768.0], [50.6, 21768.0], [50.7, 21768.0], [50.8, 21768.0], [50.9, 21769.0], [51.0, 21769.0], [51.1, 21769.0], [51.2, 21769.0], [51.3, 21769.0], [51.4, 21769.0], [51.5, 21770.0], [51.6, 21770.0], [51.7, 21770.0], [51.8, 21772.0], [51.9, 21772.0], [52.0, 21772.0], [52.1, 21772.0], [52.2, 21772.0], [52.3, 21772.0], [52.4, 21772.0], [52.5, 21772.0], [52.6, 21772.0], [52.7, 21773.0], [52.8, 21773.0], [52.9, 21773.0], [53.0, 21773.0], [53.1, 21773.0], [53.2, 21773.0], [53.3, 21773.0], [53.4, 21774.0], [53.5, 21774.0], [53.6, 21774.0], [53.7, 21774.0], [53.8, 21774.0], [53.9, 21774.0], [54.0, 21774.0], [54.1, 21774.0], [54.2, 21774.0], [54.3, 21775.0], [54.4, 21775.0], [54.5, 21775.0], [54.6, 21775.0], [54.7, 21775.0], [54.8, 21775.0], [54.9, 21776.0], [55.0, 21776.0], [55.1, 21776.0], [55.2, 21776.0], [55.3, 21776.0], [55.4, 21776.0], [55.5, 21776.0], [55.6, 21777.0], [55.7, 21777.0], [55.8, 21777.0], [55.9, 21777.0], [56.0, 21778.0], [56.1, 21778.0], [56.2, 21778.0], [56.3, 21778.0], [56.4, 21778.0], [56.5, 21778.0], [56.6, 21778.0], [56.7, 21779.0], [56.8, 21779.0], [56.9, 21779.0], [57.0, 21779.0], [57.1, 21779.0], [57.2, 21780.0], [57.3, 21780.0], [57.4, 21780.0], [57.5, 21780.0], [57.6, 21781.0], [57.7, 21781.0], [57.8, 21781.0], [57.9, 21781.0], [58.0, 21781.0], [58.1, 21782.0], [58.2, 21782.0], [58.3, 21782.0], [58.4, 21782.0], [58.5, 21782.0], [58.6, 21782.0], [58.7, 21782.0], [58.8, 21783.0], [58.9, 21783.0], [59.0, 21783.0], [59.1, 21783.0], [59.2, 21783.0], [59.3, 21784.0], [59.4, 21784.0], [59.5, 21784.0], [59.6, 21784.0], [59.7, 21784.0], [59.8, 21785.0], [59.9, 21785.0], [60.0, 21785.0], [60.1, 21785.0], [60.2, 21785.0], [60.3, 21786.0], [60.4, 21786.0], [60.5, 21786.0], [60.6, 21786.0], [60.7, 21787.0], [60.8, 21787.0], [60.9, 21787.0], [61.0, 21787.0], [61.1, 21787.0], [61.2, 21788.0], [61.3, 21789.0], [61.4, 21789.0], [61.5, 21789.0], [61.6, 21789.0], [61.7, 21789.0], [61.8, 21789.0], [61.9, 21789.0], [62.0, 21789.0], [62.1, 21790.0], [62.2, 21790.0], [62.3, 21790.0], [62.4, 21790.0], [62.5, 21790.0], [62.6, 21790.0], [62.7, 21791.0], [62.8, 21791.0], [62.9, 21791.0], [63.0, 21791.0], [63.1, 21791.0], [63.2, 21791.0], [63.3, 21792.0], [63.4, 21792.0], [63.5, 21792.0], [63.6, 21793.0], [63.7, 21793.0], [63.8, 21793.0], [63.9, 21793.0], [64.0, 21793.0], [64.1, 21793.0], [64.2, 21793.0], [64.3, 21794.0], [64.4, 21794.0], [64.5, 21794.0], [64.6, 21794.0], [64.7, 21794.0], [64.8, 21794.0], [64.9, 21795.0], [65.0, 21795.0], [65.1, 21795.0], [65.2, 21795.0], [65.3, 21795.0], [65.4, 21796.0], [65.5, 21796.0], [65.6, 21797.0], [65.7, 21797.0], [65.8, 21797.0], [65.9, 21798.0], [66.0, 21798.0], [66.1, 21798.0], [66.2, 21799.0], [66.3, 21799.0], [66.4, 21799.0], [66.5, 21799.0], [66.6, 21799.0], [66.7, 21800.0], [66.8, 21801.0], [66.9, 21801.0], [67.0, 21801.0], [67.1, 21801.0], [67.2, 21802.0], [67.3, 21802.0], [67.4, 21802.0], [67.5, 21802.0], [67.6, 21802.0], [67.7, 21802.0], [67.8, 21803.0], [67.9, 21803.0], [68.0, 21804.0], [68.1, 21804.0], [68.2, 21804.0], [68.3, 21804.0], [68.4, 21804.0], [68.5, 21804.0], [68.6, 21804.0], [68.7, 21804.0], [68.8, 21805.0], [68.9, 21805.0], [69.0, 21806.0], [69.1, 21806.0], [69.2, 21807.0], [69.3, 21807.0], [69.4, 21808.0], [69.5, 21809.0], [69.6, 21809.0], [69.7, 21810.0], [69.8, 21810.0], [69.9, 21811.0], [70.0, 21811.0], [70.1, 21812.0], [70.2, 21812.0], [70.3, 21812.0], [70.4, 21812.0], [70.5, 21813.0], [70.6, 21813.0], [70.7, 21814.0], [70.8, 21814.0], [70.9, 21814.0], [71.0, 21814.0], [71.1, 21814.0], [71.2, 21815.0], [71.3, 21815.0], [71.4, 21815.0], [71.5, 21815.0], [71.6, 21815.0], [71.7, 21816.0], [71.8, 21816.0], [71.9, 21816.0], [72.0, 21816.0], [72.1, 21816.0], [72.2, 21816.0], [72.3, 21816.0], [72.4, 21817.0], [72.5, 21817.0], [72.6, 21817.0], [72.7, 21817.0], [72.8, 21818.0], [72.9, 21818.0], [73.0, 21818.0], [73.1, 21819.0], [73.2, 21819.0], [73.3, 21820.0], [73.4, 21820.0], [73.5, 21821.0], [73.6, 21821.0], [73.7, 21821.0], [73.8, 21821.0], [73.9, 21822.0], [74.0, 21822.0], [74.1, 21823.0], [74.2, 21823.0], [74.3, 21824.0], [74.4, 21824.0], [74.5, 21824.0], [74.6, 21824.0], [74.7, 21824.0], [74.8, 21825.0], [74.9, 21825.0], [75.0, 21825.0], [75.1, 21825.0], [75.2, 21825.0], [75.3, 21826.0], [75.4, 21826.0], [75.5, 21828.0], [75.6, 21828.0], [75.7, 21828.0], [75.8, 21828.0], [75.9, 21828.0], [76.0, 21828.0], [76.1, 21828.0], [76.2, 21829.0], [76.3, 21829.0], [76.4, 21829.0], [76.5, 21830.0], [76.6, 21830.0], [76.7, 21830.0], [76.8, 21830.0], [76.9, 21831.0], [77.0, 21831.0], [77.1, 21831.0], [77.2, 21832.0], [77.3, 21832.0], [77.4, 21833.0], [77.5, 21834.0], [77.6, 21835.0], [77.7, 21835.0], [77.8, 21836.0], [77.9, 21836.0], [78.0, 21837.0], [78.1, 21838.0], [78.2, 21841.0], [78.3, 21842.0], [78.4, 21844.0], [78.5, 21844.0], [78.6, 21845.0], [78.7, 21846.0], [78.8, 21848.0], [78.9, 21849.0], [79.0, 21850.0], [79.1, 21850.0], [79.2, 21851.0], [79.3, 21851.0], [79.4, 21851.0], [79.5, 21852.0], [79.6, 21854.0], [79.7, 21856.0], [79.8, 21860.0], [79.9, 21862.0], [80.0, 21864.0], [80.1, 21865.0], [80.2, 21866.0], [80.3, 21871.0], [80.4, 21872.0], [80.5, 21876.0], [80.6, 21881.0], [80.7, 21888.0], [80.8, 21888.0], [80.9, 21936.0], [81.0, 21937.0], [81.1, 21939.0], [81.2, 21940.0], [81.3, 21941.0], [81.4, 21944.0], [81.5, 21944.0], [81.6, 21944.0], [81.7, 21945.0], [81.8, 21958.0], [81.9, 22067.0], [82.0, 22068.0], [82.1, 22069.0], [82.2, 22796.0], [82.3, 22805.0], [82.4, 22936.0], [82.5, 22937.0], [82.6, 22955.0], [82.7, 22972.0], [82.8, 23032.0], [82.9, 24539.0], [83.0, 24540.0], [83.1, 24541.0], [83.2, 24572.0], [83.3, 24579.0], [83.4, 24587.0], [83.5, 24590.0], [83.6, 24593.0], [83.7, 24597.0], [83.8, 24609.0], [83.9, 24612.0], [84.0, 24618.0], [84.1, 24621.0], [84.2, 24624.0], [84.3, 24629.0], [84.4, 24630.0], [84.5, 24632.0], [84.6, 24634.0], [84.7, 24638.0], [84.8, 24648.0], [84.9, 24649.0], [85.0, 24656.0], [85.1, 24657.0], [85.2, 24660.0], [85.3, 24662.0], [85.4, 24663.0], [85.5, 24664.0], [85.6, 24666.0], [85.7, 24670.0], [85.8, 24670.0], [85.9, 24670.0], [86.0, 24670.0], [86.1, 24674.0], [86.2, 24674.0], [86.3, 24677.0], [86.4, 24677.0], [86.5, 24679.0], [86.6, 24685.0], [86.7, 24686.0], [86.8, 24689.0], [86.9, 24689.0], [87.0, 24689.0], [87.1, 24690.0], [87.2, 24691.0], [87.3, 24691.0], [87.4, 24694.0], [87.5, 24694.0], [87.6, 24695.0], [87.7, 24696.0], [87.8, 24697.0], [87.9, 24698.0], [88.0, 24698.0], [88.1, 24699.0], [88.2, 24700.0], [88.3, 24702.0], [88.4, 24703.0], [88.5, 24705.0], [88.6, 24705.0], [88.7, 24706.0], [88.8, 24706.0], [88.9, 24707.0], [89.0, 24707.0], [89.1, 24707.0], [89.2, 24709.0], [89.3, 24710.0], [89.4, 24710.0], [89.5, 24713.0], [89.6, 24713.0], [89.7, 24715.0], [89.8, 24716.0], [89.9, 24717.0], [90.0, 24720.0], [90.1, 24721.0], [90.2, 24721.0], [90.3, 24723.0], [90.4, 24724.0], [90.5, 24724.0], [90.6, 24726.0], [90.7, 24727.0], [90.8, 24727.0], [90.9, 24727.0], [91.0, 24728.0], [91.1, 24729.0], [91.2, 24731.0], [91.3, 24731.0], [91.4, 24734.0], [91.5, 24735.0], [91.6, 24739.0], [91.7, 24739.0], [91.8, 24739.0], [91.9, 24740.0], [92.0, 24740.0], [92.1, 24740.0], [92.2, 24741.0], [92.3, 24742.0], [92.4, 24743.0], [92.5, 24744.0], [92.6, 24744.0], [92.7, 24745.0], [92.8, 24746.0], [92.9, 24748.0], [93.0, 24749.0], [93.1, 24749.0], [93.2, 24749.0], [93.3, 24751.0], [93.4, 24752.0], [93.5, 24754.0], [93.6, 24755.0], [93.7, 24757.0], [93.8, 24759.0], [93.9, 24761.0], [94.0, 24763.0], [94.1, 24764.0], [94.2, 24766.0], [94.3, 24766.0], [94.4, 24767.0], [94.5, 24768.0], [94.6, 24769.0], [94.7, 24770.0], [94.8, 24770.0], [94.9, 24771.0], [95.0, 24776.0], [95.1, 24779.0], [95.2, 24780.0], [95.3, 24781.0], [95.4, 24781.0], [95.5, 24783.0], [95.6, 24784.0], [95.7, 24790.0], [95.8, 24791.0], [95.9, 24801.0], [96.0, 24804.0], [96.1, 24807.0], [96.2, 24809.0], [96.3, 24837.0], [96.4, 24842.0], [96.5, 24847.0], [96.6, 24847.0], [96.7, 24867.0], [96.8, 24869.0], [96.9, 24878.0], [97.0, 24884.0], [97.1, 24887.0], [97.2, 24893.0], [97.3, 24907.0], [97.4, 24908.0], [97.5, 24909.0], [97.6, 24910.0], [97.7, 24927.0], [97.8, 24928.0], [97.9, 24937.0], [98.0, 24942.0], [98.1, 24945.0], [98.2, 24948.0], [98.3, 24950.0], [98.4, 24950.0], [98.5, 24951.0], [98.6, 24952.0], [98.7, 24952.0], [98.8, 24954.0], [98.9, 24956.0], [99.0, 24958.0], [99.1, 24960.0], [99.2, 24962.0], [99.3, 24967.0], [99.4, 24970.0], [99.5, 24971.0], [99.6, 24971.0], [99.7, 24977.0], [99.8, 24984.0], [99.9, 24989.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 100.0, "maxY": 575.0, "series": [{"data": [[21000.0, 162.0], [20900.0, 9.0], [700.0, 4.0], [7300.0, 1.0], [500.0, 2.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[21000.0, 575.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 23.0], [3300.0, 51.0], [3200.0, 21.0], [3400.0, 42.0], [7100.0, 6.0], [3500.0, 17.0], [3600.0, 12.0], [3700.0, 2.0], [15100.0, 1.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[600.0, 40.0], [300.0, 64.0], [700.0, 373.0], [400.0, 40.0], [800.0, 135.0], [200.0, 35.0], [100.0, 8.0], [900.0, 10.0], [15000.0, 6.0], [500.0, 39.0], [1000.0, 3.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[21500.0, 8.0], [21000.0, 244.0], [20900.0, 3.0], [21600.0, 47.0], [21700.0, 364.0], [21800.0, 143.0], [21900.0, 10.0], [22000.0, 3.0], [22900.0, 4.0], [22700.0, 1.0], [22800.0, 1.0], [23000.0, 1.0], [24500.0, 9.0], [24600.0, 44.0], [24700.0, 77.0], [24800.0, 14.0], [24900.0, 27.0]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 24900.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 148.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 1746.0, "series": [{"data": [[0.0, 148.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 605.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 185.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 1746.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 395.6291834002676, "minX": 1.70326494E12, "maxY": 429.12803304078636, "series": [{"data": [[1.703265E12, 429.12803304078636], [1.70326494E12, 395.6291834002676]], "isOverall": false, "label": "Users1000", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.703265E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 212.0, "minX": 1.0, "maxY": 24989.0, "series": [{"data": [[2.0, 21003.0], [3.0, 21001.0], [4.0, 21000.0], [5.0, 21002.0], [6.0, 21002.0], [7.0, 21001.0], [8.0, 21001.0], [9.0, 21002.0], [10.0, 21000.0], [12.0, 21000.5], [15.0, 21004.0], [22.0, 21001.571428571428], [24.0, 21002.0], [28.0, 21001.5], [30.0, 21001.5], [31.0, 21003.0], [35.0, 21001.0], [34.0, 21002.0], [36.0, 21000.0], [39.0, 21003.0], [38.0, 21003.5], [40.0, 21002.0], [43.0, 21002.0], [45.0, 21003.5], [47.0, 21000.0], [46.0, 21002.0], [52.0, 21001.8], [56.0, 21001.25], [61.0, 21000.6], [67.0, 21001.0], [66.0, 20999.0], [64.0, 21002.0], [70.0, 21002.666666666668], [75.0, 21001.666666666668], [79.0, 21002.4], [78.0, 21002.0], [82.0, 21000.666666666668], [87.0, 21000.333333333332], [84.0, 20999.5], [91.0, 21000.0], [89.0, 20999.0], [88.0, 21000.0], [95.0, 21001.0], [93.0, 21002.5], [97.0, 21002.0], [108.0, 21001.363636363632], [116.0, 21000.375], [122.0, 21003.0], [121.0, 21001.4], [126.0, 21002.0], [125.0, 21002.5], [133.0, 21001.0], [132.0, 21001.666666666668], [129.0, 21001.0], [142.0, 20999.333333333332], [139.0, 21005.0], [138.0, 21004.0], [137.0, 21000.0], [136.0, 21000.333333333332], [150.0, 21003.6], [145.0, 21002.0], [144.0, 21002.0], [159.0, 21003.0], [158.0, 21003.0], [156.0, 21003.0], [155.0, 21001.333333333332], [152.0, 21002.5], [164.0, 21021.0], [160.0, 21014.0], [175.0, 734.0], [174.0, 732.0], [173.0, 720.0], [172.0, 778.0], [171.0, 21011.0], [168.0, 21016.25], [178.0, 7343.0], [177.0, 594.0], [176.0, 584.0], [1.0, 21003.0]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[90.91011235955054, 20241.17415730336]], "isOverall": false, "label": "HTTP Request-2-Aggregated", "isController": false}, {"data": [[2.0, 3711.0], [3.0, 3548.0], [4.0, 3671.0], [5.0, 3710.0], [6.0, 3482.0], [7.0, 3649.0], [8.0, 3592.0], [9.0, 3636.0], [10.0, 3553.0], [12.0, 3446.5], [15.0, 3598.0], [22.0, 3478.571428571429], [24.0, 3559.0], [28.0, 3544.5], [30.0, 3488.5], [31.0, 3590.0], [35.0, 3649.0], [34.0, 3546.6666666666665], [36.0, 3425.0], [39.0, 3342.0], [38.0, 3432.0], [40.0, 3644.0], [43.0, 3438.0], [45.0, 3314.5], [47.0, 3349.0], [46.0, 3520.0], [52.0, 3347.6], [56.0, 3382.0], [61.0, 3255.6], [67.0, 3421.0], [66.0, 3488.0], [64.0, 3304.3333333333335], [70.0, 3351.3333333333335], [75.0, 3285.6666666666665], [79.0, 3377.6], [78.0, 3355.0], [82.0, 3363.6666666666665], [87.0, 3312.3333333333335], [84.0, 3294.0], [91.0, 3421.5], [89.0, 3173.0], [88.0, 3479.0], [95.0, 3302.5], [93.0, 3288.0], [97.0, 3305.0], [108.0, 3328.090909090909], [116.0, 3282.875], [122.0, 3356.0], [121.0, 3296.8], [126.0, 3411.0], [125.0, 3355.0], [133.0, 3334.0], [132.0, 3376.0], [129.0, 3363.5], [142.0, 3202.3333333333335], [139.0, 3282.0], [138.0, 3392.0], [137.0, 3143.0], [136.0, 3378.6666666666665], [150.0, 3273.6], [145.0, 3123.0], [144.0, 3300.5], [159.0, 3335.0], [158.0, 3110.5], [156.0, 3388.0], [155.0, 3355.3333333333335], [152.0, 3370.0], [164.0, 3253.5], [160.0, 3298.0], [175.0, 7136.0], [174.0, 7153.0], [173.0, 7185.0], [172.0, 7183.0], [171.0, 3340.0], [168.0, 3230.0], [182.0, 21001.0], [181.0, 21003.0], [178.0, 15115.0], [177.0, 7131.0], [176.0, 7163.0], [191.0, 21000.5], [187.0, 21001.0], [185.0, 21000.0], [199.0, 21000.0], [198.0, 21002.0], [197.0, 21001.0], [196.0, 21002.75], [192.0, 21001.0], [204.0, 21000.5], [202.0, 21007.666666666668], [215.0, 21000.0], [214.0, 21001.75], [210.0, 21002.0], [209.0, 21002.0], [219.0, 21010.0], [217.0, 21002.0], [231.0, 21001.0], [230.0, 21001.0], [228.0, 21004.0], [227.0, 21002.0], [226.0, 21002.0], [225.0, 21002.0], [224.0, 21007.6], [239.0, 21001.5], [237.0, 21002.0], [236.0, 21005.333333333332], [233.0, 21001.0], [232.0, 21003.0], [247.0, 21001.0], [246.0, 21000.0], [245.0, 21002.0], [243.0, 21001.0], [242.0, 21002.0], [241.0, 21000.0], [240.0, 21003.0], [252.0, 21003.5], [250.0, 21005.5], [248.0, 21008.0], [271.0, 21000.5], [269.0, 21000.5], [267.0, 21000.5], [265.0, 21000.5], [263.0, 21001.0], [262.0, 21000.0], [261.0, 21002.0], [260.0, 21001.0], [259.0, 21004.0], [258.0, 21001.833333333336], [286.0, 21001.0], [285.0, 21001.5], [281.0, 21002.0], [280.0, 21001.0], [278.0, 21000.0], [277.0, 21000.5], [275.0, 21000.0], [273.0, 21001.0], [291.0, 21002.0], [301.0, 21000.0], [302.0, 21002.0], [300.0, 21001.5], [298.0, 21001.5], [296.0, 21000.0], [295.0, 21003.0], [294.0, 21000.0], [293.0, 21002.5], [290.0, 21002.5], [288.0, 21002.0], [317.0, 21001.0], [319.0, 21004.0], [316.0, 21004.0], [306.0, 21001.5], [304.0, 21000.5], [315.0, 21001.0], [314.0, 21002.0], [313.0, 21001.0], [312.0, 21001.0], [311.0, 21003.0], [309.0, 21003.333333333332], [334.0, 21001.0], [333.0, 21001.5], [323.0, 21003.0], [322.0, 21002.0], [321.0, 21003.0], [320.0, 21001.0], [331.0, 21001.0], [330.0, 21002.0], [329.0, 21003.0], [328.0, 21001.0], [326.0, 21001.0], [325.0, 21000.0], [324.0, 21002.0], [350.0, 21001.333333333332], [347.0, 21000.0], [345.0, 21001.0], [344.0, 21002.0], [343.0, 21003.0], [336.0, 21001.0], [342.0, 21004.0], [341.0, 21000.5], [339.0, 21002.0], [337.0, 21001.0], [365.0, 21005.0], [360.0, 21002.5], [358.0, 21006.8], [353.0, 21001.333333333332], [381.0, 21000.0], [383.0, 21000.5], [380.0, 21001.0], [379.0, 21002.5], [377.0, 21003.0], [376.0, 21003.0], [375.0, 21001.5], [371.0, 21001.0], [370.0, 21002.0], [368.0, 21007.0], [398.0, 21001.0], [399.0, 21000.0], [397.0, 21000.0], [396.0, 21001.0], [395.0, 21001.0], [394.0, 21001.0], [393.0, 21002.5], [391.0, 21001.333333333332], [386.0, 21000.0], [384.0, 21000.0], [388.0, 21001.0], [403.0, 21001.0], [414.0, 21003.0], [413.0, 21001.5], [411.0, 21002.5], [409.0, 21001.0], [406.0, 21001.0], [405.0, 21002.0], [401.0, 21002.0], [400.0, 21000.0], [428.0, 21001.5], [431.0, 21002.0], [430.0, 21003.0], [429.0, 21001.0], [424.0, 21001.0], [423.0, 21001.0], [416.0, 21001.0], [422.0, 21002.0], [421.0, 21001.0], [420.0, 21002.5], [445.0, 21004.0], [446.0, 21001.0], [444.0, 21003.0], [435.0, 21001.5], [443.0, 21003.0], [442.0, 21003.0], [440.0, 21005.0], [439.0, 21002.0], [438.0, 21001.5], [436.0, 21002.0], [462.0, 21001.0], [463.0, 21000.0], [460.0, 21001.5], [450.0, 21001.0], [449.0, 21004.0], [448.0, 21001.0], [458.0, 21005.0], [457.0, 21001.0], [456.0, 21001.0], [454.0, 21000.0], [453.0, 21002.0], [452.0, 21000.5], [478.0, 21002.5], [476.0, 21001.0], [474.0, 21002.666666666668], [471.0, 21004.0], [470.0, 21001.0], [469.0, 21000.0], [467.0, 21001.0], [466.0, 21000.0], [492.0, 21000.5], [494.0, 21001.0], [495.0, 21001.0], [493.0, 21000.0], [490.0, 21000.0], [488.0, 21000.0], [487.0, 21000.666666666668], [484.0, 21000.0], [482.0, 21000.0], [480.0, 21001.0], [510.0, 21000.0], [511.0, 21002.0], [509.0, 21002.0], [508.0, 21001.0], [507.0, 21001.0], [506.0, 21002.0], [504.0, 21001.0], [500.0, 21001.666666666668], [497.0, 21001.0], [540.0, 21000.0], [542.0, 21001.0], [538.0, 21001.0], [537.0, 21001.0], [536.0, 21001.5], [518.0, 21001.0], [517.0, 21002.0], [514.0, 21002.0], [513.0, 21001.0], [534.0, 21004.0], [531.0, 21002.0], [528.0, 21001.0], [526.0, 21002.0], [525.0, 21000.666666666668], [522.0, 21002.0], [520.0, 21001.0], [563.0, 21000.0], [574.0, 21000.0], [573.0, 21000.5], [571.0, 21001.0], [568.0, 21002.0], [559.0, 21003.0], [544.0, 21001.0], [550.0, 21001.0], [548.0, 21001.0], [558.0, 21002.0], [555.0, 21002.0], [554.0, 21001.75], [566.0, 21005.0], [565.0, 21001.0], [564.0, 21000.0], [561.0, 21002.0], [560.0, 21003.0], [594.0, 21000.0], [606.0, 21000.333333333332], [603.0, 21000.5], [601.0, 21000.0], [581.0, 21002.0], [579.0, 21001.0], [577.0, 21003.0], [589.0, 21001.0], [587.0, 21002.0], [586.0, 21001.0], [585.0, 21002.0], [584.0, 21002.0], [599.0, 21001.0], [598.0, 21000.0], [595.0, 21001.0], [593.0, 21001.0], [592.0, 21000.333333333332], [638.0, 21000.0], [639.0, 21000.0], [637.0, 21000.5], [635.0, 21001.0], [633.0, 21002.0], [632.0, 21000.666666666668], [621.0, 21000.0], [609.0, 21000.666666666668], [612.0, 21000.0], [611.0, 21001.0], [620.0, 21000.0], [619.0, 21002.0], [617.0, 21000.0], [616.0, 21000.75], [629.0, 21002.5], [627.0, 21002.0], [625.0, 21000.0], [668.0, 21000.666666666668], [670.0, 21002.0], [665.0, 21000.0], [664.0, 21001.0], [660.0, 21001.0], [657.0, 21002.0], [656.0, 21001.0], [654.0, 21000.0], [640.0, 21000.0], [645.0, 21001.0], [644.0, 21001.5], [651.0, 21000.0], [648.0, 21001.333333333332], [679.0, 21001.0], [701.0, 21003.5], [703.0, 21001.0], [696.0, 21001.0], [691.0, 21000.0], [686.0, 21000.0], [681.0, 21002.0], [680.0, 21000.0], [678.0, 21001.0], [674.0, 21001.0], [673.0, 21001.0], [728.0, 21001.5], [735.0, 21000.0], [733.0, 21000.0], [730.0, 21000.0], [722.0, 21000.0], [719.0, 21000.333333333332], [704.0, 21000.0], [714.0, 21001.0], [712.0, 21002.0], [709.0, 21000.0], [708.0, 21003.0], [990.0, 21006.0], [989.0, 21000.0], [983.0, 21002.0], [985.0, 21018.641025641027], [984.0, 21043.0], [1000.0, 21003.0], [994.0, 21003.0], [1.0, 3642.0]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[393.86586985391705, 16881.135458167326]], "isOverall": false, "label": "HTTP Request-1-Aggregated", "isController": false}, {"data": [[2.0, 252.0], [3.0, 433.0], [4.0, 305.0], [5.0, 242.0], [6.0, 478.0], [7.0, 320.0], [8.0, 313.0], [9.0, 332.0], [10.0, 383.0], [12.0, 512.5], [15.0, 309.3333333333333], [22.0, 421.0], [24.0, 372.0], [28.0, 346.75], [30.0, 405.5], [31.0, 357.0], [35.0, 212.0], [34.0, 318.6666666666667], [36.0, 382.0], [39.0, 458.0], [38.0, 437.0], [40.0, 260.0], [43.0, 344.0], [45.0, 455.0], [47.0, 438.0], [46.0, 253.0], [52.0, 378.4], [56.0, 352.5], [61.0, 491.6], [67.0, 315.0], [66.0, 273.0], [64.0, 411.6666666666667], [70.0, 382.3333333333333], [75.0, 439.6666666666667], [79.0, 322.8], [78.0, 407.0], [82.0, 374.6666666666667], [87.0, 400.0], [84.0, 402.0], [91.0, 307.0], [89.0, 553.0], [88.0, 279.0], [95.0, 423.5], [93.0, 351.0], [97.0, 399.5], [108.0, 370.90909090909093], [116.0, 409.75], [122.0, 363.0], [121.0, 432.0], [126.0, 288.0], [125.0, 355.0], [133.0, 369.0], [132.0, 285.3333333333333], [129.0, 339.0], [142.0, 412.0], [139.0, 410.0], [138.0, 304.0], [137.0, 528.0], [136.0, 309.3333333333333], [150.0, 390.0], [145.0, 565.0], [144.0, 390.5], [159.0, 283.0], [158.0, 555.0], [156.0, 278.0], [155.0, 328.6666666666667], [152.0, 332.0], [164.0, 283.75], [160.0, 322.0], [175.0, 15065.0], [174.0, 15069.0], [173.0, 15066.0], [172.0, 15069.0], [171.0, 264.0], [168.0, 371.25], [182.0, 790.0], [181.0, 1064.3333333333333], [178.0, 479.0], [177.0, 15069.0], [176.0, 15056.0], [191.0, 792.0], [187.0, 794.0], [185.0, 796.0], [199.0, 785.0], [198.0, 789.0], [197.0, 787.0], [196.0, 786.75], [192.0, 786.0], [204.0, 787.0], [202.0, 780.0], [215.0, 779.0], [214.0, 779.0], [210.0, 777.0], [209.0, 784.0], [219.0, 791.0], [217.0, 775.5], [231.0, 813.0], [230.0, 740.0], [228.0, 741.0], [227.0, 752.0], [226.0, 753.0], [225.0, 749.0], [224.0, 761.4], [239.0, 766.5], [237.0, 791.0], [236.0, 774.0], [233.0, 734.0], [232.0, 812.0], [247.0, 812.0], [246.0, 810.0], [245.0, 815.5], [243.0, 801.0], [242.0, 799.0], [241.0, 731.0], [240.0, 801.0], [252.0, 809.0], [250.0, 812.5], [248.0, 808.0], [271.0, 819.0], [269.0, 800.5], [267.0, 817.0], [265.0, 827.0], [263.0, 802.0], [262.0, 810.0], [261.0, 813.0], [260.0, 807.0], [259.0, 811.0], [258.0, 796.6666666666667], [286.0, 816.0], [285.0, 825.25], [281.0, 825.0], [280.0, 809.5], [278.0, 828.0], [277.0, 806.0], [275.0, 798.0], [273.0, 837.0], [291.0, 830.0], [301.0, 818.0], [302.0, 788.0], [300.0, 804.0], [298.0, 808.5], [296.0, 794.0], [295.0, 824.0], [294.0, 824.0], [293.0, 826.0], [290.0, 822.5], [288.0, 814.0], [317.0, 808.0], [319.0, 801.0], [316.0, 794.0], [306.0, 801.5], [304.0, 819.5], [315.0, 808.0], [314.0, 812.0], [313.0, 791.0], [312.0, 813.0], [311.0, 811.5], [309.0, 793.3333333333334], [334.0, 771.0], [333.0, 773.0], [323.0, 818.0], [322.0, 783.0], [321.0, 797.0], [320.0, 795.0], [331.0, 773.0], [330.0, 770.0], [329.0, 774.0], [328.0, 776.0], [326.0, 827.0], [325.0, 794.0], [324.0, 779.0], [350.0, 772.6666666666666], [347.0, 776.5], [345.0, 772.0], [344.0, 775.0], [343.0, 798.0], [336.0, 771.0], [342.0, 782.0], [341.0, 769.0], [339.0, 783.0], [337.0, 780.0], [365.0, 777.0], [360.0, 762.5], [358.0, 789.0], [353.0, 780.6666666666666], [381.0, 755.0], [383.0, 758.5], [380.0, 738.0], [379.0, 766.0], [377.0, 746.0], [376.0, 760.0], [375.0, 770.5], [371.0, 773.0], [370.0, 785.0], [368.0, 785.3333333333334], [398.0, 758.0], [399.0, 751.0], [397.0, 769.0], [396.0, 760.0], [395.0, 748.0], [394.0, 754.0], [393.0, 751.0], [391.0, 749.6666666666666], [386.0, 758.0], [384.0, 759.0], [388.0, 743.0], [403.0, 770.0], [414.0, 756.0], [413.0, 778.5], [411.0, 788.0], [409.0, 781.6666666666666], [406.0, 789.0], [405.0, 775.0], [401.0, 773.0], [400.0, 772.0], [428.0, 768.0], [431.0, 754.0], [430.0, 775.0], [429.0, 777.0], [424.0, 753.0], [423.0, 772.0], [416.0, 770.5], [422.0, 781.0], [421.0, 782.0], [420.0, 773.0], [445.0, 744.0], [446.0, 748.0], [444.0, 747.0], [435.0, 767.75], [443.0, 751.0], [442.0, 749.0], [440.0, 762.0], [439.0, 767.0], [438.0, 764.5], [436.0, 770.0], [462.0, 740.0], [463.0, 715.0], [460.0, 737.5], [450.0, 740.0], [449.0, 740.0], [448.0, 745.0], [458.0, 715.0], [457.0, 738.0], [456.0, 728.5], [454.0, 744.0], [453.0, 751.0], [452.0, 731.5], [478.0, 739.5], [476.0, 732.5], [474.0, 743.6666666666666], [471.0, 733.0], [470.0, 747.0], [469.0, 733.0], [467.0, 744.0], [466.0, 737.0], [492.0, 745.5], [494.0, 723.0], [495.0, 744.0], [493.0, 741.0], [490.0, 731.0], [488.0, 747.0], [487.0, 751.3333333333334], [484.0, 734.5], [482.0, 748.0], [480.0, 747.0], [510.0, 750.0], [511.0, 744.0], [509.0, 741.0], [508.0, 725.0], [507.0, 726.0], [506.0, 748.5], [504.0, 745.25], [500.0, 753.6666666666666], [497.0, 746.0], [540.0, 731.5], [542.0, 724.5], [538.0, 733.0], [537.0, 737.0], [536.0, 787.5], [518.0, 740.0], [517.0, 789.0], [514.0, 851.0], [513.0, 750.5], [534.0, 888.0], [531.0, 938.3333333333334], [528.0, 940.0], [526.0, 940.0], [525.0, 884.6666666666666], [522.0, 919.5], [520.0, 748.5], [563.0, 720.5], [574.0, 724.0], [573.0, 745.5], [571.0, 745.0], [568.0, 733.0], [559.0, 724.0], [544.0, 731.0], [550.0, 727.0], [548.0, 727.75], [558.0, 747.3333333333334], [555.0, 721.0], [554.0, 735.75], [566.0, 729.0], [565.0, 764.0], [564.0, 725.0], [561.0, 741.0], [560.0, 718.0], [594.0, 718.0], [606.0, 727.6666666666666], [603.0, 707.0], [601.0, 789.0], [581.0, 734.5], [579.0, 752.0], [577.0, 742.3333333333334], [589.0, 729.0], [587.0, 883.0], [586.0, 730.0], [585.0, 703.0], [584.0, 788.6666666666666], [599.0, 711.0], [598.0, 832.3333333333334], [595.0, 879.0], [593.0, 715.0], [592.0, 777.0], [638.0, 768.0], [639.0, 836.0], [637.0, 803.5], [635.0, 843.0], [633.0, 705.0], [632.0, 777.0], [621.0, 845.0], [609.0, 808.3333333333334], [612.0, 687.0], [611.0, 842.0], [620.0, 829.0], [619.0, 779.0], [617.0, 866.0], [616.0, 840.25], [629.0, 804.0], [627.0, 709.0], [625.0, 825.75], [668.0, 768.3333333333334], [670.0, 765.5], [665.0, 814.0], [664.0, 803.25], [660.0, 762.0], [657.0, 822.0], [656.0, 809.0], [654.0, 784.6666666666666], [640.0, 834.0], [645.0, 834.0], [644.0, 754.0], [651.0, 828.6666666666666], [648.0, 799.0], [679.0, 819.0], [701.0, 724.0], [703.0, 793.0], [696.0, 797.0], [691.0, 733.5], [686.0, 758.8], [681.0, 814.0], [680.0, 813.0], [678.0, 785.75], [674.0, 807.0], [673.0, 805.0], [728.0, 762.5], [735.0, 773.5], [733.0, 774.0], [730.0, 682.0], [722.0, 717.0], [719.0, 739.3333333333334], [704.0, 663.0], [714.0, 788.0], [712.0, 745.0], [709.0, 789.0], [708.0, 744.0], [990.0, 546.5], [989.0, 633.0], [983.0, 641.0], [985.0, 608.7692307692308], [984.0, 518.0], [1000.0, 542.0], [994.0, 492.0], [1.0, 335.0]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[393.86586985391705, 789.4103585657373]], "isOverall": false, "label": "HTTP Request-0-Aggregated", "isController": false}, {"data": [[2.0, 24967.0], [3.0, 24984.0], [4.0, 24977.0], [5.0, 24958.0], [6.0, 24970.0], [7.0, 24971.0], [8.0, 24909.0], [9.0, 24971.0], [10.0, 24937.0], [12.0, 24961.0], [15.0, 24913.0], [22.0, 24916.000000000004], [24.0, 24935.0], [28.0, 24897.75], [30.0, 24896.5], [31.0, 24954.0], [35.0, 24867.0], [34.0, 24869.0], [36.0, 24809.0], [39.0, 24804.0], [38.0, 24898.5], [40.0, 24908.0], [43.0, 24787.333333333332], [45.0, 24774.0], [47.0, 24790.0], [46.0, 24781.0], [52.0, 24732.2], [56.0, 24737.75], [61.0, 24756.0], [67.0, 24739.0], [66.0, 24766.5], [64.0, 24722.666666666668], [70.0, 24756.333333333332], [75.0, 24728.333333333332], [79.0, 24706.2], [78.0, 24767.0], [82.0, 24741.0], [87.0, 24715.333333333332], [84.0, 24708.5], [91.0, 24730.0], [89.0, 24749.0], [88.0, 24759.0], [95.0, 24729.0], [93.0, 24642.5], [97.0, 24717.5], [108.0, 24702.090909090908], [116.0, 24696.375], [122.0, 24724.0], [121.0, 24733.4], [126.0, 24703.0], [125.0, 24713.5], [133.0, 24707.0], [132.0, 24666.666666666668], [129.0, 24706.0], [142.0, 24636.666666666668], [139.0, 24698.0], [138.0, 24702.0], [137.0, 24674.0], [136.0, 24693.0], [150.0, 24671.2], [145.0, 24709.0], [144.0, 24695.0], [159.0, 24624.0], [158.0, 24690.0], [156.0, 24670.0], [155.0, 24688.666666666668], [152.0, 24706.0], [164.0, 24574.25], [160.0, 24638.0], [175.0, 22936.0], [174.0, 22955.0], [173.0, 22972.0], [172.0, 23032.0], [171.0, 24616.0], [168.0, 24620.25], [182.0, 21792.0], [181.0, 22068.0], [178.0, 22937.0], [177.0, 22796.0], [176.0, 22805.0], [191.0, 21792.75], [187.0, 21795.5], [185.0, 21796.666666666668], [199.0, 21786.0], [198.0, 21791.0], [197.0, 21788.0], [196.0, 21789.75], [192.0, 21787.0], [204.0, 21787.5], [202.0, 21788.0], [215.0, 21780.0], [214.0, 21781.25], [210.0, 21780.0], [209.0, 21786.2], [219.0, 21802.0], [217.0, 21778.0], [231.0, 21814.0], [230.0, 21741.0], [228.0, 21745.0], [227.0, 21754.0], [226.0, 21756.0], [225.0, 21752.0], [224.0, 21769.8], [239.0, 21769.0], [237.0, 21794.0], [236.0, 21779.333333333332], [233.0, 21735.0], [232.0, 21816.0], [247.0, 21813.0], [246.0, 21811.0], [245.0, 21818.0], [243.0, 21803.0], [242.0, 21802.0], [241.0, 21731.0], [240.0, 21804.0], [252.0, 21813.0], [250.0, 21818.0], [248.0, 21816.0], [271.0, 21820.0], [269.0, 21801.5], [267.0, 21818.0], [265.0, 21828.0], [263.0, 21804.0], [262.0, 21811.0], [261.0, 21816.0], [260.0, 21808.0], [259.0, 21815.0], [258.0, 21798.666666666668], [286.0, 21817.0], [285.0, 21827.0], [281.0, 21828.0], [280.0, 21811.0], [278.0, 21829.0], [277.0, 21806.5], [275.0, 21798.0], [273.0, 21838.0], [291.0, 21832.0], [301.0, 21819.0], [302.0, 21790.0], [300.0, 21806.0], [298.0, 21810.5], [296.0, 21794.0], [295.0, 21828.0], [294.0, 21825.0], [293.0, 21828.5], [290.0, 21825.5], [288.0, 21816.5], [317.0, 21809.0], [319.0, 21805.5], [316.0, 21799.0], [306.0, 21803.5], [304.0, 21820.5], [315.0, 21810.0], [314.0, 21814.0], [313.0, 21793.0], [312.0, 21815.0], [311.0, 21815.0], [309.0, 21797.666666666668], [334.0, 21773.0], [333.0, 21774.5], [323.0, 21822.0], [322.0, 21786.0], [321.0, 21800.0], [320.0, 21796.0], [331.0, 21774.0], [330.0, 21772.0], [329.0, 21777.0], [328.0, 21777.5], [326.0, 21828.0], [325.0, 21795.0], [324.0, 21781.0], [350.0, 21775.0], [347.0, 21777.5], [345.0, 21773.0], [344.0, 21777.0], [343.0, 21801.0], [336.0, 21773.0], [342.0, 21786.0], [341.0, 21770.0], [339.0, 21785.5], [337.0, 21781.0], [365.0, 21783.2], [360.0, 21765.5], [358.0, 21796.4], [353.0, 21782.666666666668], [381.0, 21756.0], [383.0, 21759.5], [380.0, 21739.0], [379.0, 21768.5], [377.0, 21749.0], [376.0, 21764.0], [375.0, 21772.75], [371.0, 21775.0], [370.0, 21788.0], [368.0, 21793.0], [398.0, 21759.0], [399.0, 21751.0], [397.0, 21770.0], [396.0, 21762.0], [395.0, 21749.0], [394.0, 21755.0], [393.0, 21754.0], [391.0, 21751.666666666668], [386.0, 21758.5], [384.0, 21759.0], [388.0, 21744.5], [403.0, 21772.0], [414.0, 21759.0], [413.0, 21780.5], [411.0, 21791.0], [409.0, 21783.666666666668], [406.0, 21790.0], [405.0, 21777.0], [401.0, 21776.0], [400.0, 21773.0], [428.0, 21769.75], [431.0, 21756.0], [430.0, 21779.0], [429.0, 21778.0], [424.0, 21754.0], [423.0, 21773.0], [416.0, 21772.0], [422.0, 21784.0], [421.0, 21783.0], [420.0, 21776.25], [445.0, 21749.0], [446.0, 21750.0], [444.0, 21751.0], [435.0, 21769.75], [443.0, 21755.0], [442.0, 21752.5], [440.0, 21767.0], [439.0, 21770.0], [438.0, 21767.0], [436.0, 21772.0], [462.0, 21741.5], [463.0, 21716.0], [460.0, 21740.0], [450.0, 21742.0], [449.0, 21744.0], [448.0, 21747.0], [458.0, 21721.0], [457.0, 21739.0], [456.0, 21730.5], [454.0, 21745.0], [453.0, 21753.0], [452.0, 21733.0], [478.0, 21743.0], [476.0, 21733.5], [474.0, 21747.0], [471.0, 21737.0], [470.0, 21749.0], [469.0, 21733.5], [467.0, 21745.0], [466.0, 21737.666666666668], [492.0, 21747.0], [494.0, 21724.0], [495.0, 21745.0], [493.0, 21742.0], [490.0, 21732.0], [488.0, 21748.0], [487.0, 21752.333333333332], [484.0, 21735.5], [482.0, 21749.0], [480.0, 21748.0], [510.0, 21751.0], [511.0, 21747.0], [509.0, 21744.0], [508.0, 21726.0], [507.0, 21727.0], [506.0, 21751.5], [504.0, 21746.25], [500.0, 21755.333333333332], [497.0, 21747.0], [540.0, 21732.5], [542.0, 21726.0], [538.0, 21735.0], [537.0, 21738.0], [536.0, 21789.5], [518.0, 21741.0], [517.0, 21791.0], [514.0, 21854.0], [513.0, 21752.0], [534.0, 21892.666666666668], [531.0, 21941.0], [528.0, 21942.5], [526.0, 21944.0], [525.0, 21886.0], [522.0, 21923.0], [520.0, 21750.5], [563.0, 21721.5], [574.0, 21725.0], [573.0, 21746.0], [571.0, 21746.333333333332], [568.0, 21736.0], [559.0, 21727.0], [544.0, 21732.5], [550.0, 21728.0], [548.0, 21728.75], [558.0, 21749.333333333332], [555.0, 21723.0], [554.0, 21737.75], [566.0, 21734.0], [565.0, 21766.0], [564.0, 21726.0], [561.0, 21743.0], [560.0, 21721.0], [594.0, 21719.0], [606.0, 21728.333333333332], [603.0, 21707.5], [601.0, 21790.5], [581.0, 21736.5], [579.0, 21754.0], [577.0, 21746.0], [589.0, 21731.0], [587.0, 21885.0], [586.0, 21731.0], [585.0, 21705.0], [584.0, 21791.0], [599.0, 21713.0], [598.0, 21833.333333333332], [595.0, 21881.0], [593.0, 21717.0], [592.0, 21778.333333333332], [638.0, 21769.0], [639.0, 21837.0], [637.0, 21805.0], [635.0, 21845.0], [633.0, 21707.0], [632.0, 21777.666666666668], [621.0, 21845.0], [609.0, 21810.0], [612.0, 21688.0], [611.0, 21843.5], [620.0, 21830.0], [619.0, 21781.0], [617.0, 21866.0], [616.0, 21842.0], [629.0, 21807.0], [627.0, 21711.5], [625.0, 21826.75], [668.0, 21769.333333333332], [670.0, 21768.0], [665.0, 21815.0], [664.0, 21805.0], [660.0, 21763.0], [657.0, 21824.0], [656.0, 21811.5], [654.0, 21786.0], [640.0, 21836.0], [645.0, 21835.0], [644.0, 21755.75], [651.0, 21829.333333333332], [648.0, 21801.0], [696.0, 21266.666666666668], [701.0, 21485.666666666668], [703.0, 21397.5], [698.0, 21001.0], [693.0, 21000.0], [691.0, 21294.6], [686.0, 21759.6], [674.0, 21809.0], [673.0, 21806.0], [679.0, 21822.0], [678.0, 21787.75], [681.0, 21817.0], [680.0, 21814.0], [733.0, 21776.0], [735.0, 21773.5], [732.0, 21000.0], [730.0, 21345.0], [728.0, 21765.0], [709.0, 21791.0], [708.0, 21375.0], [706.0, 21002.0], [705.0, 21001.0], [704.0, 21664.0], [719.0, 21444.8], [714.0, 21394.5], [712.0, 21250.0], [726.0, 21001.0], [725.0, 21001.0], [724.0, 21001.0], [722.0, 21239.666666666668], [761.0, 21002.0], [763.0, 21003.0], [766.0, 21002.666666666668], [762.0, 21003.0], [758.0, 21001.4], [753.0, 21000.75], [749.0, 21001.333333333332], [740.0, 21000.333333333332], [737.0, 21000.5], [742.0, 21000.0], [741.0, 21003.0], [746.0, 21000.0], [744.0, 21001.0], [794.0, 21003.0], [795.0, 21001.0], [792.0, 21000.0], [774.0, 21015.0], [773.0, 21015.0], [771.0, 21001.666666666668], [768.0, 21002.5], [791.0, 21002.0], [788.0, 21001.0], [787.0, 21000.6], [782.0, 21000.0], [781.0, 21000.0], [780.0, 21001.0], [778.0, 21005.666666666668], [776.0, 21012.0], [831.0, 21002.0], [826.0, 21001.0], [815.0, 21004.5], [859.0, 21002.0], [851.0, 21007.0], [887.0, 21004.0], [881.0, 21000.0], [868.0, 21002.0], [925.0, 21001.0], [902.0, 21000.5], [896.0, 21003.0], [989.0, 21160.25], [990.0, 21395.333333333332], [976.0, 21044.0], [985.0, 21193.926470588238], [984.0, 21038.105263157893], [983.0, 21644.0], [982.0, 21022.0], [980.0, 21011.0], [979.0, 21006.0], [975.0, 21004.555555555555], [968.0, 21005.0], [972.0, 21013.0], [967.0, 21002.666666666668], [1000.0, 21141.75], [996.0, 21003.0], [994.0, 21137.75], [1.0, 24989.0]], "isOverall": false, "label": "HTTP Request", "isController": false}, {"data": [[517.4079999999998, 22099.67200000001]], "isOverall": false, "label": "HTTP Request-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 1000.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 1406.85, "minX": 1.70326494E12, "maxY": 129883.03333333334, "series": [{"data": [[1.703265E12, 129883.03333333334], [1.70326494E12, 2216.1]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.703265E12, 2127.2166666666667], [1.70326494E12, 1406.85]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.703265E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 674.741633199465, "minX": 1.70326494E12, "maxY": 22099.67200000001, "series": [{"data": [[1.703265E12, 20241.17415730336]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.703265E12, 16881.135458167326]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.703265E12, 15065.666666666666], [1.70326494E12, 674.741633199465]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.703265E12, 22099.67200000001]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.703265E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 60.061797752808985, "minX": 1.70326494E12, "maxY": 15065.666666666666, "series": [{"data": [[1.703265E12, 60.061797752808985]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.703265E12, 843.0929614873831]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.703265E12, 15065.666666666666], [1.70326494E12, 674.6171352074971]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.703265E12, 594.3329999999995]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.703265E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 106.38018741633213, "minX": 1.70326494E12, "maxY": 20219.96629213483, "series": [{"data": [[1.703265E12, 20219.96629213483]], "isOverall": false, "label": "HTTP Request-2", "isController": false}, {"data": [[1.703265E12, 16782.779548472772]], "isOverall": false, "label": "HTTP Request-1", "isController": false}, {"data": [[1.703265E12, 15031.333333333334], [1.70326494E12, 106.38018741633213]], "isOverall": false, "label": "HTTP Request-0", "isController": false}, {"data": [[1.703265E12, 5358.581000000003]], "isOverall": false, "label": "HTTP Request", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.703265E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 141.0, "minX": 1.70326494E12, "maxY": 15115.0, "series": [{"data": [[1.703265E12, 15115.0], [1.70326494E12, 1066.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.703265E12, 3671.8], [1.70326494E12, 822.2]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.703265E12, 15072.679999999998], [1.70326494E12, 940.52]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.703265E12, 7183.8], [1.70326494E12, 843.0]], "isOverall": false, "label": "95th percentile", "isController": false}, {"data": [[1.703265E12, 584.0], [1.70326494E12, 141.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.703265E12, 3380.0], [1.70326494E12, 749.0]], "isOverall": false, "label": "Median", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.703265E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 402.0, "minX": 1.0, "maxY": 22937.0, "series": [{"data": [[531.0, 774.0], [1.0, 15056.0], [20.0, 7131.0], [168.0, 3378.0], [6.0, 15069.0], [3.0, 3292.0], [216.0, 402.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[20.0, 22937.0], [1367.0, 21009.0], [342.0, 22785.0], [30.0, 21004.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1367.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 0.0, "minX": 1.0, "maxY": 15069.0, "series": [{"data": [[531.0, 774.0], [1.0, 15056.0], [20.0, 7131.0], [168.0, 3378.0], [6.0, 15069.0], [3.0, 3292.0], [216.0, 402.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[20.0, 15066.0], [1367.0, 0.0], [342.0, 68.0], [30.0, 0.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 1367.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.066666666666667, "minX": 1.70326494E12, "maxY": 41.666666666666664, "series": [{"data": [[1.703265E12, 3.066666666666667], [1.70326494E12, 41.666666666666664]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.703265E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.70326494E12, "maxY": 28.983333333333334, "series": [{"data": [[1.703265E12, 0.23333333333333334]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.703265E12, 0.1], [1.70326494E12, 12.45]], "isOverall": false, "label": "301", "isController": false}, {"data": [[1.703265E12, 28.983333333333334]], "isOverall": false, "label": "Non HTTP response code: org.apache.http.conn.HttpHostConnectException", "isController": false}, {"data": [[1.703265E12, 2.966666666666667]], "isOverall": false, "label": "302", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.703265E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.1, "minX": 1.70326494E12, "maxY": 16.666666666666668, "series": [{"data": [[1.703265E12, 16.666666666666668]], "isOverall": false, "label": "HTTP Request-failure", "isController": false}, {"data": [[1.703265E12, 0.1], [1.70326494E12, 12.45]], "isOverall": false, "label": "HTTP Request-0-success", "isController": false}, {"data": [[1.703265E12, 9.583333333333334]], "isOverall": false, "label": "HTTP Request-1-failure", "isController": false}, {"data": [[1.703265E12, 2.966666666666667]], "isOverall": false, "label": "HTTP Request-1-success", "isController": false}, {"data": [[1.703265E12, 0.11666666666666667]], "isOverall": false, "label": "HTTP Request-2-success", "isController": false}, {"data": [[1.703265E12, 2.85]], "isOverall": false, "label": "HTTP Request-2-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.703265E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 3.183333333333333, "minX": 1.70326494E12, "maxY": 29.1, "series": [{"data": [[1.703265E12, 3.183333333333333], [1.70326494E12, 12.45]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.703265E12, 29.1]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.703265E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 10800000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

